/* tslint:disable */
/* eslint-disable */
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
import type { TsoaRoute } from '@tsoa/runtime';
import {  fetchMiddlewares, ExpressTemplateService } from '@tsoa/runtime';
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
import { UserFeedbackController } from './../../controllers/private/userFeedbackController';
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
import { EvaluatorController } from './../../controllers/public/evaluatorController';
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
import { ExperimentV2Controller } from './../../controllers/public/experimentV2Controller';
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
import { RequestController } from './../../controllers/public/requestController';
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
import { PromptController } from './../../controllers/public/promptController';
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
import { SettingController } from './../../controllers/private/settingsController';
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
import { StripeController } from './../../controllers/public/stripeController';
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
import { OrganizationController } from './../../controllers/private/organizationController';
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
import { LogController } from './../../controllers/private/logController';
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
import { GovOrganizationController } from './../../controllers/private/govOrganizationController';
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
import { GenerateHashController } from './../../controllers/private/generateHashController';
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
import { DatasetController } from './../../controllers/private/datasetController';
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
import { FineTuneMainController } from './../../controllers/private/fineTuneController';
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
import { FilterController } from './../../controllers/private/filterController';
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
import { DemoController } from './../../controllers/private/demoController';
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
import { AlertController } from './../../controllers/private/alertController';
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
import { AlertBannerController } from './../../controllers/private/alertBannerController';
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
import { AdminController } from './../../controllers/private/adminController';
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
import { AudioController } from './../../controllers/private/AudioController';
import { expressAuthentication } from './../../authentication';
// @ts-ignore - no great way to install types from subpackage
import type { Request as ExRequest, Response as ExResponse, RequestHandler, Router } from 'express';

const expressAuthenticationRecasted = expressAuthentication as (req: ExRequest, securityName: string, scopes?: string[], res?: ExResponse) => Promise<any>;


// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

const models: TsoaRoute.Models = {
    "EvaluatorResult": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "created_at": {"dataType":"string","required":true},
            "scoring_type": {"dataType":"string","required":true},
            "llm_template": {"dataType":"any","required":true},
            "organization_id": {"dataType":"string","required":true},
            "updated_at": {"dataType":"string","required":true},
            "name": {"dataType":"string","required":true},
            "code_template": {"dataType":"any","required":true},
            "last_mile_config": {"dataType":"any","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_EvaluatorResult_": {
        "dataType": "refObject",
        "properties": {
            "data": {"ref":"EvaluatorResult","required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultError_string_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"enum","enums":[null],"required":true},
            "error": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_EvaluatorResult.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_EvaluatorResult_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "CreateEvaluatorParams": {
        "dataType": "refObject",
        "properties": {
            "scoring_type": {"dataType":"string","required":true},
            "llm_template": {"dataType":"any"},
            "name": {"dataType":"string","required":true},
            "code_template": {"dataType":"any"},
            "last_mile_config": {"dataType":"any"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_EvaluatorResult-Array_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"array","array":{"dataType":"refObject","ref":"EvaluatorResult"},"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_EvaluatorResult-Array.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_EvaluatorResult-Array_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "UpdateEvaluatorParams": {
        "dataType": "refObject",
        "properties": {
            "scoring_type": {"dataType":"string"},
            "llm_template": {"dataType":"any"},
            "code_template": {"dataType":"any"},
            "name": {"dataType":"string"},
            "last_mile_config": {"dataType":"any"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_null_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"enum","enums":[null],"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_null.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_null_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "EvaluatorExperiment": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"experiment_name":{"dataType":"string","required":true},"experiment_created_at":{"dataType":"string","required":true},"experiment_id":{"dataType":"string","required":true}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_EvaluatorExperiment-Array_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"array","array":{"dataType":"refAlias","ref":"EvaluatorExperiment"},"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_EvaluatorExperiment-Array.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_EvaluatorExperiment-Array_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "OnlineEvaluatorByEvaluatorId": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"config":{"dataType":"any","required":true},"id":{"dataType":"string","required":true}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_OnlineEvaluatorByEvaluatorId-Array_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"array","array":{"dataType":"refAlias","ref":"OnlineEvaluatorByEvaluatorId"},"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_OnlineEvaluatorByEvaluatorId-Array.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_OnlineEvaluatorByEvaluatorId-Array_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Record_string.any_": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{},"additionalProperties":{"dataType":"any"},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "CreateOnlineEvaluatorParams": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"config":{"ref":"Record_string.any_","required":true}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess__output-string--traces-string-Array--statusCode_63_-number__": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"nestedObjectLiteral","nestedProperties":{"statusCode":{"dataType":"double"},"traces":{"dataType":"array","array":{"dataType":"string"},"required":true},"output":{"dataType":"string","required":true}},"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result__output-string--traces-string-Array--statusCode_63_-number_.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess__output-string--traces-string-Array--statusCode_63_-number__"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Record_string.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{},"additionalProperties":{"dataType":"string"},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "TestInput": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"promptTemplate":{"dataType":"string"},"inputs":{"dataType":"nestedObjectLiteral","nestedProperties":{"autoInputs":{"ref":"Record_string.string_"},"inputs":{"ref":"Record_string.string_","required":true}},"required":true},"outputBody":{"dataType":"string","required":true},"inputBody":{"dataType":"string","required":true}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "EvaluatorScore": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"score":{"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"boolean"}],"required":true}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_EvaluatorScore_": {
        "dataType": "refObject",
        "properties": {
            "data": {"ref":"EvaluatorScore","required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_EvaluatorScore.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_EvaluatorScore_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "EvaluatorScoreResult": {
        "dataType": "refAlias",
        "type": {"ref":"Result_EvaluatorScore.string_","validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "EvaluatorConfig": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"evaluator_code_template":{"dataType":"string"},"evaluator_llm_template":{"dataType":"string"},"evaluator_scoring_type":{"dataType":"string","required":true}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess__score-number--input-string--output-string--ground_truth_63_-string__": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"nestedObjectLiteral","nestedProperties":{"ground_truth":{"dataType":"string"},"output":{"dataType":"string","required":true},"input":{"dataType":"string","required":true},"score":{"dataType":"double","required":true}},"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result__score-number--input-string--output-string--ground_truth_63_-string_.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess__score-number--input-string--output-string--ground_truth_63_-string__"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "DataEntry": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"nestedObjectLiteral","nestedProperties":{"_type":{"dataType":"enum","enums":["system-prompt"],"required":true}}},{"dataType":"nestedObjectLiteral","nestedProperties":{"inputKey":{"dataType":"string","required":true},"_type":{"dataType":"enum","enums":["prompt-input"],"required":true}}},{"dataType":"nestedObjectLiteral","nestedProperties":{"content":{"dataType":"union","subSchemas":[{"dataType":"enum","enums":["jsonify"]},{"dataType":"enum","enums":["message"]}],"required":true},"_type":{"dataType":"enum","enums":["input-body"],"required":true}}},{"dataType":"nestedObjectLiteral","nestedProperties":{"content":{"dataType":"union","subSchemas":[{"dataType":"enum","enums":["jsonify"]},{"dataType":"enum","enums":["message"]}],"required":true},"_type":{"dataType":"enum","enums":["output-body"],"required":true}}}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "BaseLastMileConfigForm": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"output":{"ref":"DataEntry","required":true},"input":{"ref":"DataEntry","required":true},"name":{"dataType":"string","required":true}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "LastMileConfigForm": {
        "dataType": "refAlias",
        "type": {"dataType":"intersection","subSchemas":[{"ref":"BaseLastMileConfigForm"},{"dataType":"union","subSchemas":[{"dataType":"nestedObjectLiteral","nestedProperties":{"_type":{"dataType":"union","subSchemas":[{"dataType":"enum","enums":["relevance"]},{"dataType":"enum","enums":["context_relevance"]}],"required":true}}},{"dataType":"nestedObjectLiteral","nestedProperties":{"groundTruth":{"ref":"DataEntry","required":true},"_type":{"dataType":"enum","enums":["faithfulness"],"required":true}}}]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "EvaluatorStats": {
        "dataType": "refObject",
        "properties": {
            "averageScore": {"dataType":"double","required":true},
            "totalUses": {"dataType":"double","required":true},
            "recentTrend": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["up"]},{"dataType":"enum","enums":["down"]},{"dataType":"enum","enums":["stable"]}],"required":true},
            "scoreDistribution": {"dataType":"array","array":{"dataType":"nestedObjectLiteral","nestedProperties":{"count":{"dataType":"double","required":true},"range":{"dataType":"string","required":true}}},"required":true},
            "timeSeriesData": {"dataType":"array","array":{"dataType":"nestedObjectLiteral","nestedProperties":{"value":{"dataType":"double","required":true},"date":{"dataType":"string","required":true}}},"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_EvaluatorStats_": {
        "dataType": "refObject",
        "properties": {
            "data": {"ref":"EvaluatorStats","required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_EvaluatorStats.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_EvaluatorStats_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess__experimentId-string__": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"nestedObjectLiteral","nestedProperties":{"experimentId":{"dataType":"string","required":true}},"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result__experimentId-string_.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess__experimentId-string__"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ExperimentV2": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "name": {"dataType":"string","required":true},
            "original_prompt_version": {"dataType":"string","required":true},
            "copied_original_prompt_version": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "input_keys": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
            "created_at": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_ExperimentV2-Array_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"array","array":{"dataType":"refObject","ref":"ExperimentV2"},"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_ExperimentV2-Array.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_ExperimentV2-Array_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ExperimentV2Output": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "request_id": {"dataType":"string","required":true},
            "is_original": {"dataType":"boolean","required":true},
            "prompt_version_id": {"dataType":"string","required":true},
            "created_at": {"dataType":"string","required":true},
            "input_record_id": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ExperimentV2Row": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "inputs": {"ref":"Record_string.string_","required":true},
            "prompt_version": {"dataType":"string","required":true},
            "requests": {"dataType":"array","array":{"dataType":"refObject","ref":"ExperimentV2Output"},"required":true},
            "auto_prompt_inputs": {"dataType":"array","array":{"dataType":"any"},"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ExtendedExperimentData": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "name": {"dataType":"string","required":true},
            "original_prompt_version": {"dataType":"string","required":true},
            "copied_original_prompt_version": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "input_keys": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
            "created_at": {"dataType":"string","required":true},
            "rows": {"dataType":"array","array":{"dataType":"refObject","ref":"ExperimentV2Row"},"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_ExtendedExperimentData_": {
        "dataType": "refObject",
        "properties": {
            "data": {"ref":"ExtendedExperimentData","required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_ExtendedExperimentData.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_ExtendedExperimentData_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "PromptVersionResult": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "minor_version": {"dataType":"double","required":true},
            "major_version": {"dataType":"double","required":true},
            "prompt_v2": {"dataType":"string","required":true},
            "model": {"dataType":"string","required":true},
            "helicone_template": {"dataType":"string","required":true},
            "created_at": {"dataType":"string","required":true},
            "metadata": {"ref":"Record_string.any_","required":true},
            "parent_prompt_version": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "experiment_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "updated_at": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_PromptVersionResult_": {
        "dataType": "refObject",
        "properties": {
            "data": {"ref":"PromptVersionResult","required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_PromptVersionResult.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_PromptVersionResult_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "CreateNewPromptVersionForExperimentParams": {
        "dataType": "refObject",
        "properties": {
            "newHeliconeTemplate": {"dataType":"any","required":true},
            "isMajorVersion": {"dataType":"boolean"},
            "metadata": {"ref":"Record_string.any_"},
            "experimentId": {"dataType":"string"},
            "bumpForMajorPromptVersionId": {"dataType":"string"},
            "parentPromptVersionId": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Json": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"double"},{"dataType":"boolean"},{"dataType":"enum","enums":[null]},{"dataType":"nestedObjectLiteral","nestedProperties":{},"additionalProperties":{"dataType":"union","subSchemas":[{"ref":"Json"},{"dataType":"undefined"}]}},{"dataType":"array","array":{"dataType":"refAlias","ref":"Json"}}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ExperimentV2PromptVersion": {
        "dataType": "refObject",
        "properties": {
            "created_at": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "experiment_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "helicone_template": {"dataType":"union","subSchemas":[{"ref":"Json"},{"dataType":"enum","enums":[null]}],"required":true},
            "id": {"dataType":"string","required":true},
            "major_version": {"dataType":"double","required":true},
            "metadata": {"dataType":"union","subSchemas":[{"ref":"Json"},{"dataType":"enum","enums":[null]}],"required":true},
            "minor_version": {"dataType":"double","required":true},
            "model": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "organization": {"dataType":"string","required":true},
            "prompt_v2": {"dataType":"string","required":true},
            "soft_delete": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_ExperimentV2PromptVersion-Array_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"array","array":{"dataType":"refObject","ref":"ExperimentV2PromptVersion"},"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_ExperimentV2PromptVersion-Array.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_ExperimentV2PromptVersion-Array_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_string-Array_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"array","array":{"dataType":"string"},"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_string-Array.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_string-Array_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_string_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"string","required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_string.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_string_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_boolean_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"boolean","required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_boolean.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_boolean_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ScoreV2": {
        "dataType": "refObject",
        "properties": {
            "valueType": {"dataType":"string","required":true},
            "value": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"datetime"},{"dataType":"string"}],"required":true},
            "max": {"dataType":"double","required":true},
            "min": {"dataType":"double","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Record_string.ScoreV2_": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{},"additionalProperties":{"ref":"ScoreV2"},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_Record_string.ScoreV2__": {
        "dataType": "refObject",
        "properties": {
            "data": {"ref":"Record_string.ScoreV2_","required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_Record_string.ScoreV2_.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_Record_string.ScoreV2__"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_ScoreV2-or-null_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"union","subSchemas":[{"ref":"ScoreV2"},{"dataType":"enum","enums":[null]}],"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_ScoreV2-or-null.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_ScoreV2-or-null_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ProviderName": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["OPENAI"]},{"dataType":"enum","enums":["ANTHROPIC"]},{"dataType":"enum","enums":["AZURE"]},{"dataType":"enum","enums":["LOCAL"]},{"dataType":"enum","enums":["HELICONE"]},{"dataType":"enum","enums":["AMDBARTEK"]},{"dataType":"enum","enums":["ANYSCALE"]},{"dataType":"enum","enums":["CLOUDFLARE"]},{"dataType":"enum","enums":["2YFV"]},{"dataType":"enum","enums":["TOGETHER"]},{"dataType":"enum","enums":["LEMONFOX"]},{"dataType":"enum","enums":["FIREWORKS"]},{"dataType":"enum","enums":["PERPLEXITY"]},{"dataType":"enum","enums":["GOOGLE"]},{"dataType":"enum","enums":["OPENROUTER"]},{"dataType":"enum","enums":["WISDOMINANUTSHELL"]},{"dataType":"enum","enums":["GROQ"]},{"dataType":"enum","enums":["COHERE"]},{"dataType":"enum","enums":["MISTRAL"]},{"dataType":"enum","enums":["DEEPINFRA"]},{"dataType":"enum","enums":["QSTASH"]},{"dataType":"enum","enums":["FIRECRAWL"]},{"dataType":"enum","enums":["AWS"]},{"dataType":"enum","enums":["DEEPSEEK"]},{"dataType":"enum","enums":["X"]},{"dataType":"enum","enums":["AVIAN"]},{"dataType":"enum","enums":["NEBIUS"]},{"dataType":"enum","enums":["NOVITA"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Provider": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ProviderName"},{"dataType":"enum","enums":["CUSTOM"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "LlmType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["chat"]},{"dataType":"enum","enums":["completion"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "FunctionCall": {
        "dataType": "refObject",
        "properties": {
            "name": {"dataType":"string","required":true},
            "arguments": {"ref":"Record_string.any_","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Message": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"deleted":{"dataType":"boolean"},"contentArray":{"dataType":"array","array":{"dataType":"refAlias","ref":"Message"}},"idx":{"dataType":"double"},"detail":{"dataType":"string"},"filename":{"dataType":"string"},"file_id":{"dataType":"string"},"file_data":{"dataType":"string"},"type":{"dataType":"union","subSchemas":[{"dataType":"enum","enums":["input_image"]},{"dataType":"enum","enums":["input_text"]},{"dataType":"enum","enums":["input_file"]}]},"audio_data":{"dataType":"string"},"image_url":{"dataType":"string"},"timestamp":{"dataType":"string"},"tool_call_id":{"dataType":"string"},"tool_calls":{"dataType":"array","array":{"dataType":"refObject","ref":"FunctionCall"}},"content":{"dataType":"string"},"name":{"dataType":"string"},"instruction":{"dataType":"string"},"role":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":["user"]},{"dataType":"enum","enums":["assistant"]},{"dataType":"enum","enums":["system"]},{"dataType":"enum","enums":["developer"]}]},"id":{"dataType":"string"},"_type":{"dataType":"union","subSchemas":[{"dataType":"enum","enums":["functionCall"]},{"dataType":"enum","enums":["function"]},{"dataType":"enum","enums":["image"]},{"dataType":"enum","enums":["file"]},{"dataType":"enum","enums":["message"]},{"dataType":"enum","enums":["autoInput"]},{"dataType":"enum","enums":["contentArray"]},{"dataType":"enum","enums":["audio"]}],"required":true}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Tool": {
        "dataType": "refObject",
        "properties": {
            "name": {"dataType":"string","required":true},
            "description": {"dataType":"string","required":true},
            "parameters": {"ref":"Record_string.any_"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "HeliconeEventTool": {
        "dataType": "refObject",
        "properties": {
            "_type": {"dataType":"enum","enums":["tool"],"required":true},
            "toolName": {"dataType":"string","required":true},
            "input": {"dataType":"any","required":true},
        },
        "additionalProperties": {"dataType":"any"},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "HeliconeEventVectorDB": {
        "dataType": "refObject",
        "properties": {
            "_type": {"dataType":"enum","enums":["vector_db"],"required":true},
            "operation": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["search"]},{"dataType":"enum","enums":["insert"]},{"dataType":"enum","enums":["delete"]},{"dataType":"enum","enums":["update"]}],"required":true},
            "text": {"dataType":"string"},
            "vector": {"dataType":"array","array":{"dataType":"double"}},
            "topK": {"dataType":"double"},
            "filter": {"dataType":"object"},
            "databaseName": {"dataType":"string"},
        },
        "additionalProperties": {"dataType":"any"},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "LLMRequestBody": {
        "dataType": "refObject",
        "properties": {
            "llm_type": {"ref":"LlmType"},
            "provider": {"dataType":"string"},
            "model": {"dataType":"string"},
            "messages": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refAlias","ref":"Message"}},{"dataType":"enum","enums":[null]}]},
            "prompt": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "instructions": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "max_tokens": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}]},
            "temperature": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}]},
            "top_p": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}]},
            "seed": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}]},
            "stream": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}]},
            "presence_penalty": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}]},
            "frequency_penalty": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}]},
            "stop": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "reasoning_effort": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["low"]},{"dataType":"enum","enums":["medium"]},{"dataType":"enum","enums":["high"]},{"dataType":"enum","enums":[null]}]},
            "tools": {"dataType":"array","array":{"dataType":"refObject","ref":"Tool"}},
            "parallel_tool_calls": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}]},
            "tool_choice": {"dataType":"nestedObjectLiteral","nestedProperties":{"name":{"dataType":"string"},"type":{"dataType":"union","subSchemas":[{"dataType":"enum","enums":["none"]},{"dataType":"enum","enums":["auto"]},{"dataType":"enum","enums":["any"]},{"dataType":"enum","enums":["tool"]}],"required":true}}},
            "response_format": {"dataType":"nestedObjectLiteral","nestedProperties":{"json_schema":{"dataType":"any"},"type":{"dataType":"string","required":true}}},
            "toolDetails": {"ref":"HeliconeEventTool"},
            "vectorDBDetails": {"ref":"HeliconeEventVectorDB"},
            "input": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"array","array":{"dataType":"string"}}]},
            "n": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}]},
            "size": {"dataType":"string"},
            "quality": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Response": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"contentArray":{"dataType":"array","array":{"dataType":"refAlias","ref":"Response"}},"detail":{"dataType":"string"},"filename":{"dataType":"string"},"file_id":{"dataType":"string"},"file_data":{"dataType":"string"},"idx":{"dataType":"double"},"audio_data":{"dataType":"string"},"image_url":{"dataType":"string"},"timestamp":{"dataType":"string"},"tool_call_id":{"dataType":"string"},"tool_calls":{"dataType":"array","array":{"dataType":"refObject","ref":"FunctionCall"}},"text":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"undefined"}]},"type":{"dataType":"union","subSchemas":[{"dataType":"enum","enums":["input_image"]},{"dataType":"enum","enums":["input_text"]},{"dataType":"enum","enums":["input_file"]}],"required":true},"name":{"dataType":"string"},"role":{"dataType":"union","subSchemas":[{"dataType":"enum","enums":["user"]},{"dataType":"enum","enums":["assistant"]},{"dataType":"enum","enums":["system"]},{"dataType":"enum","enums":["developer"]}],"required":true},"id":{"dataType":"string"},"_type":{"dataType":"union","subSchemas":[{"dataType":"enum","enums":["functionCall"]},{"dataType":"enum","enums":["function"]},{"dataType":"enum","enums":["image"]},{"dataType":"enum","enums":["text"]},{"dataType":"enum","enums":["file"]},{"dataType":"enum","enums":["contentArray"]}],"required":true}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "LLMResponseBody": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"vectorDBDetailsResponse":{"dataType":"nestedObjectLiteral","nestedProperties":{"_type":{"dataType":"enum","enums":["vector_db"],"required":true},"metadata":{"dataType":"nestedObjectLiteral","nestedProperties":{"timestamp":{"dataType":"string","required":true},"destination_parsed":{"dataType":"boolean"},"destination":{"dataType":"string"}},"required":true},"actualSimilarity":{"dataType":"double"},"similarityThreshold":{"dataType":"double"},"message":{"dataType":"string","required":true},"status":{"dataType":"string","required":true}}},"toolDetailsResponse":{"dataType":"nestedObjectLiteral","nestedProperties":{"toolName":{"dataType":"string","required":true},"_type":{"dataType":"enum","enums":["tool"],"required":true},"metadata":{"dataType":"nestedObjectLiteral","nestedProperties":{"timestamp":{"dataType":"string","required":true}},"required":true},"tips":{"dataType":"array","array":{"dataType":"string"},"required":true},"message":{"dataType":"string","required":true},"status":{"dataType":"string","required":true}}},"error":{"dataType":"nestedObjectLiteral","nestedProperties":{"heliconeMessage":{"dataType":"any","required":true}}},"model":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},"instructions":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},"responses":{"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refAlias","ref":"Response"}},{"dataType":"enum","enums":[null]}]},"messages":{"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refAlias","ref":"Message"}},{"dataType":"enum","enums":[null]}]}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "LlmSchema": {
        "dataType": "refObject",
        "properties": {
            "request": {"ref":"LLMRequestBody","required":true},
            "response": {"dataType":"union","subSchemas":[{"ref":"LLMResponseBody"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Record_string.number_": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{},"additionalProperties":{"dataType":"double"},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "HeliconeRequest": {
        "dataType": "refObject",
        "properties": {
            "response_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "response_created_at": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "response_body": {"dataType":"any"},
            "response_status": {"dataType":"double","required":true},
            "response_model": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "request_id": {"dataType":"string","required":true},
            "request_created_at": {"dataType":"string","required":true},
            "request_body": {"dataType":"any","required":true},
            "request_path": {"dataType":"string","required":true},
            "request_user_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "request_properties": {"dataType":"union","subSchemas":[{"ref":"Record_string.string_"},{"dataType":"enum","enums":[null]}],"required":true},
            "request_model": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "model_override": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "helicone_user": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "provider": {"ref":"Provider","required":true},
            "delay_ms": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "time_to_first_token": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "total_tokens": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "prompt_tokens": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "prompt_cache_write_tokens": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "prompt_cache_read_tokens": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "completion_tokens": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "prompt_audio_tokens": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "completion_audio_tokens": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "prompt_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "feedback_created_at": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "feedback_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "feedback_rating": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}]},
            "signed_body_url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "llmSchema": {"dataType":"union","subSchemas":[{"ref":"LlmSchema"},{"dataType":"enum","enums":[null]}],"required":true},
            "country_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "asset_ids": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
            "asset_urls": {"dataType":"union","subSchemas":[{"ref":"Record_string.string_"},{"dataType":"enum","enums":[null]}],"required":true},
            "scores": {"dataType":"union","subSchemas":[{"ref":"Record_string.number_"},{"dataType":"enum","enums":[null]}],"required":true},
            "costUSD": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}]},
            "properties": {"ref":"Record_string.string_","required":true},
            "assets": {"dataType":"array","array":{"dataType":"string"},"required":true},
            "target_url": {"dataType":"string","required":true},
            "model": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_HeliconeRequest-Array_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"array","array":{"dataType":"refObject","ref":"HeliconeRequest"},"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_HeliconeRequest-Array.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_HeliconeRequest-Array_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Partial_NumberOperators_": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"not-equals":{"dataType":"double"},"equals":{"dataType":"double"},"gte":{"dataType":"double"},"lte":{"dataType":"double"},"lt":{"dataType":"double"},"gt":{"dataType":"double"}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Partial_TimestampOperators_": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"gte":{"dataType":"string"},"lte":{"dataType":"string"},"lt":{"dataType":"string"},"gt":{"dataType":"string"}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Partial_BooleanOperators_": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"equals":{"dataType":"boolean"}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Partial_TextOperators_": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"not-equals":{"dataType":"string"},"equals":{"dataType":"string"},"like":{"dataType":"string"},"ilike":{"dataType":"string"},"contains":{"dataType":"string"},"not-contains":{"dataType":"string"}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Partial_FeedbackTableToOperators_": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"id":{"ref":"Partial_NumberOperators_"},"created_at":{"ref":"Partial_TimestampOperators_"},"rating":{"ref":"Partial_BooleanOperators_"},"response_id":{"ref":"Partial_TextOperators_"}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Partial_RequestTableToOperators_": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"prompt":{"ref":"Partial_TextOperators_"},"created_at":{"ref":"Partial_TimestampOperators_"},"user_id":{"ref":"Partial_TextOperators_"},"auth_hash":{"ref":"Partial_TextOperators_"},"org_id":{"ref":"Partial_TextOperators_"},"id":{"ref":"Partial_TextOperators_"},"node_id":{"ref":"Partial_TextOperators_"},"model":{"ref":"Partial_TextOperators_"},"modelOverride":{"ref":"Partial_TextOperators_"},"path":{"ref":"Partial_TextOperators_"},"prompt_id":{"ref":"Partial_TextOperators_"}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Partial_ResponseTableToOperators_": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"body_tokens":{"ref":"Partial_NumberOperators_"},"body_model":{"ref":"Partial_TextOperators_"},"body_completion":{"ref":"Partial_TextOperators_"},"status":{"ref":"Partial_NumberOperators_"},"model":{"ref":"Partial_TextOperators_"}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Partial_TimestampOperatorsTyped_": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"gte":{"dataType":"datetime"},"lte":{"dataType":"datetime"},"lt":{"dataType":"datetime"},"gt":{"dataType":"datetime"}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Partial_CacheHitsTableToOperators_": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"organization_id":{"ref":"Partial_TextOperators_"},"request_id":{"ref":"Partial_TextOperators_"},"latency":{"ref":"Partial_NumberOperators_"},"completion_tokens":{"ref":"Partial_NumberOperators_"},"prompt_tokens":{"ref":"Partial_NumberOperators_"},"created_at":{"ref":"Partial_TimestampOperatorsTyped_"}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Partial_VectorOperators_": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"contains":{"dataType":"string"}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Partial_RequestResponseRMTToOperators_": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"latency":{"ref":"Partial_NumberOperators_"},"status":{"ref":"Partial_NumberOperators_"},"request_created_at":{"ref":"Partial_TimestampOperatorsTyped_"},"response_created_at":{"ref":"Partial_TimestampOperatorsTyped_"},"model":{"ref":"Partial_TextOperators_"},"user_id":{"ref":"Partial_TextOperators_"},"organization_id":{"ref":"Partial_TextOperators_"},"node_id":{"ref":"Partial_TextOperators_"},"job_id":{"ref":"Partial_TextOperators_"},"threat":{"ref":"Partial_BooleanOperators_"},"request_id":{"ref":"Partial_TextOperators_"},"prompt_tokens":{"ref":"Partial_NumberOperators_"},"completion_tokens":{"ref":"Partial_NumberOperators_"},"total_tokens":{"ref":"Partial_NumberOperators_"},"target_url":{"ref":"Partial_TextOperators_"},"properties":{"dataType":"nestedObjectLiteral","nestedProperties":{},"additionalProperties":{"ref":"Partial_TextOperators_"}},"search_properties":{"dataType":"nestedObjectLiteral","nestedProperties":{},"additionalProperties":{"ref":"Partial_TextOperators_"}},"scores":{"dataType":"nestedObjectLiteral","nestedProperties":{},"additionalProperties":{"ref":"Partial_TextOperators_"}},"scores_column":{"ref":"Partial_TextOperators_"},"request_body":{"ref":"Partial_VectorOperators_"},"response_body":{"ref":"Partial_VectorOperators_"}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Partial_SessionsRequestResponseRMTToOperators_": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"session_session_id":{"ref":"Partial_TextOperators_"},"session_session_name":{"ref":"Partial_TextOperators_"},"session_total_cost":{"ref":"Partial_NumberOperators_"},"session_total_tokens":{"ref":"Partial_NumberOperators_"},"session_prompt_tokens":{"ref":"Partial_NumberOperators_"},"session_completion_tokens":{"ref":"Partial_NumberOperators_"},"session_total_requests":{"ref":"Partial_NumberOperators_"},"session_created_at":{"ref":"Partial_TimestampOperatorsTyped_"},"session_latest_request_created_at":{"ref":"Partial_TimestampOperatorsTyped_"}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Pick_FilterLeaf.feedback-or-request-or-response-or-properties-or-values-or-cache_hits-or-request_response_rmt-or-sessions_request_response_rmt_": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"feedback":{"ref":"Partial_FeedbackTableToOperators_"},"request":{"ref":"Partial_RequestTableToOperators_"},"response":{"ref":"Partial_ResponseTableToOperators_"},"properties":{"dataType":"nestedObjectLiteral","nestedProperties":{},"additionalProperties":{"ref":"Partial_TextOperators_"}},"values":{"dataType":"nestedObjectLiteral","nestedProperties":{},"additionalProperties":{"ref":"Partial_TextOperators_"}},"cache_hits":{"ref":"Partial_CacheHitsTableToOperators_"},"request_response_rmt":{"ref":"Partial_RequestResponseRMTToOperators_"},"sessions_request_response_rmt":{"ref":"Partial_SessionsRequestResponseRMTToOperators_"}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "FilterLeafSubset_feedback-or-request-or-response-or-properties-or-values-or-cache_hits-or-request_response_rmt-or-sessions_request_response_rmt_": {
        "dataType": "refAlias",
        "type": {"ref":"Pick_FilterLeaf.feedback-or-request-or-response-or-properties-or-values-or-cache_hits-or-request_response_rmt-or-sessions_request_response_rmt_","validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "RequestFilterNode": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"FilterLeafSubset_feedback-or-request-or-response-or-properties-or-values-or-cache_hits-or-request_response_rmt-or-sessions_request_response_rmt_"},{"ref":"RequestFilterBranch"},{"dataType":"enum","enums":["all"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "RequestFilterBranch": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"right":{"ref":"RequestFilterNode","required":true},"operator":{"dataType":"union","subSchemas":[{"dataType":"enum","enums":["or"]},{"dataType":"enum","enums":["and"]}],"required":true},"left":{"ref":"RequestFilterNode","required":true}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "SortDirection": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["asc"]},{"dataType":"enum","enums":["desc"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "SortLeafRequest": {
        "dataType": "refObject",
        "properties": {
            "random": {"dataType":"enum","enums":[true]},
            "created_at": {"ref":"SortDirection"},
            "cache_created_at": {"ref":"SortDirection"},
            "latency": {"ref":"SortDirection"},
            "last_active": {"ref":"SortDirection"},
            "total_tokens": {"ref":"SortDirection"},
            "completion_tokens": {"ref":"SortDirection"},
            "prompt_tokens": {"ref":"SortDirection"},
            "user_id": {"ref":"SortDirection"},
            "body_model": {"ref":"SortDirection"},
            "is_cached": {"ref":"SortDirection"},
            "request_prompt": {"ref":"SortDirection"},
            "response_text": {"ref":"SortDirection"},
            "properties": {"dataType":"nestedObjectLiteral","nestedProperties":{},"additionalProperties":{"ref":"SortDirection"}},
            "values": {"dataType":"nestedObjectLiteral","nestedProperties":{},"additionalProperties":{"ref":"SortDirection"}},
            "cost_usd": {"ref":"SortDirection"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "RequestQueryParams": {
        "dataType": "refObject",
        "properties": {
            "filter": {"ref":"RequestFilterNode","required":true},
            "offset": {"dataType":"double"},
            "limit": {"dataType":"double"},
            "sort": {"ref":"SortLeafRequest"},
            "isCached": {"dataType":"boolean"},
            "includeInputs": {"dataType":"boolean"},
            "isPartOfExperiment": {"dataType":"boolean"},
            "isScored": {"dataType":"boolean"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_HeliconeRequest_": {
        "dataType": "refObject",
        "properties": {
            "data": {"ref":"HeliconeRequest","required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_HeliconeRequest.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_HeliconeRequest_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "HeliconeRequestAsset": {
        "dataType": "refObject",
        "properties": {
            "assetUrl": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_HeliconeRequestAsset_": {
        "dataType": "refObject",
        "properties": {
            "data": {"ref":"HeliconeRequestAsset","required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_HeliconeRequestAsset.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_HeliconeRequestAsset_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Record_string.number-or-boolean-or-undefined_": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{},"additionalProperties":{"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"boolean"}]},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Scores": {
        "dataType": "refAlias",
        "type": {"ref":"Record_string.number-or-boolean-or-undefined_","validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ScoreRequest": {
        "dataType": "refObject",
        "properties": {
            "scores": {"ref":"Scores","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "PromptsResult": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "user_defined_id": {"dataType":"string","required":true},
            "description": {"dataType":"string","required":true},
            "pretty_name": {"dataType":"string","required":true},
            "created_at": {"dataType":"string","required":true},
            "major_version": {"dataType":"double","required":true},
            "metadata": {"ref":"Record_string.any_"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_PromptsResult-Array_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"array","array":{"dataType":"refObject","ref":"PromptsResult"},"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_PromptsResult-Array.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_PromptsResult-Array_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Partial_PromptToOperators_": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"id":{"ref":"Partial_TextOperators_"},"user_defined_id":{"ref":"Partial_TextOperators_"}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Pick_FilterLeaf.prompt_v2_": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"prompt_v2":{"ref":"Partial_PromptToOperators_"}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "FilterLeafSubset_prompt_v2_": {
        "dataType": "refAlias",
        "type": {"ref":"Pick_FilterLeaf.prompt_v2_","validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "PromptsFilterNode": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"FilterLeafSubset_prompt_v2_"},{"ref":"PromptsFilterBranch"},{"dataType":"enum","enums":["all"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "PromptsFilterBranch": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"right":{"ref":"PromptsFilterNode","required":true},"operator":{"dataType":"union","subSchemas":[{"dataType":"enum","enums":["or"]},{"dataType":"enum","enums":["and"]}],"required":true},"left":{"ref":"PromptsFilterNode","required":true}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "PromptsQueryParams": {
        "dataType": "refObject",
        "properties": {
            "filter": {"ref":"PromptsFilterNode","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "PromptResult": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "user_defined_id": {"dataType":"string","required":true},
            "description": {"dataType":"string","required":true},
            "pretty_name": {"dataType":"string","required":true},
            "major_version": {"dataType":"double","required":true},
            "latest_version_id": {"dataType":"string","required":true},
            "latest_model_used": {"dataType":"string","required":true},
            "created_at": {"dataType":"string","required":true},
            "last_used": {"dataType":"string","required":true},
            "versions": {"dataType":"array","array":{"dataType":"string"},"required":true},
            "metadata": {"ref":"Record_string.any_"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_PromptResult_": {
        "dataType": "refObject",
        "properties": {
            "data": {"ref":"PromptResult","required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_PromptResult.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_PromptResult_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "PromptQueryParams": {
        "dataType": "refObject",
        "properties": {
            "timeFilter": {"dataType":"nestedObjectLiteral","nestedProperties":{"end":{"dataType":"string","required":true},"start":{"dataType":"string","required":true}},"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "CreatePromptResponse": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "prompt_version_id": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_CreatePromptResponse_": {
        "dataType": "refObject",
        "properties": {
            "data": {"ref":"CreatePromptResponse","required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_CreatePromptResponse.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_CreatePromptResponse_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess__metadata-Record_string.any___": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"nestedObjectLiteral","nestedProperties":{"metadata":{"ref":"Record_string.any_","required":true}},"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result__metadata-Record_string.any__.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess__metadata-Record_string.any___"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "PromptEditSubversionLabelParams": {
        "dataType": "refObject",
        "properties": {
            "label": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "PromptEditSubversionTemplateParams": {
        "dataType": "refObject",
        "properties": {
            "heliconeTemplate": {"dataType":"any","required":true},
            "experimentId": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "PromptCreateSubversionParams": {
        "dataType": "refObject",
        "properties": {
            "newHeliconeTemplate": {"dataType":"any","required":true},
            "isMajorVersion": {"dataType":"boolean"},
            "metadata": {"ref":"Record_string.any_"},
            "experimentId": {"dataType":"string"},
            "bumpForMajorPromptVersionId": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "PromptInputRecord": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "inputs": {"ref":"Record_string.string_","required":true},
            "dataset_row_id": {"dataType":"string"},
            "source_request": {"dataType":"string","required":true},
            "prompt_version": {"dataType":"string","required":true},
            "created_at": {"dataType":"string","required":true},
            "response_body": {"dataType":"string"},
            "request_body": {"dataType":"string"},
            "auto_prompt_inputs": {"dataType":"array","array":{"dataType":"any"},"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_PromptInputRecord-Array_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"array","array":{"dataType":"refObject","ref":"PromptInputRecord"},"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_PromptInputRecord-Array.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_PromptInputRecord-Array_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess__id-string--created_at-string--num_hypotheses-number--dataset-string--meta-Record_string.any__-Array_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"array","array":{"dataType":"nestedObjectLiteral","nestedProperties":{"meta":{"ref":"Record_string.any_","required":true},"dataset":{"dataType":"string","required":true},"num_hypotheses":{"dataType":"double","required":true},"created_at":{"dataType":"string","required":true},"id":{"dataType":"string","required":true}}},"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result__id-string--created_at-string--num_hypotheses-number--dataset-string--meta-Record_string.any__-Array.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess__id-string--created_at-string--num_hypotheses-number--dataset-string--meta-Record_string.any__-Array_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_PromptVersionResult-Array_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"array","array":{"dataType":"refObject","ref":"PromptVersionResult"},"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_PromptVersionResult-Array.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_PromptVersionResult-Array_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Partial_PromptVersionsToOperators_": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"minor_version":{"ref":"Partial_NumberOperators_"},"major_version":{"ref":"Partial_NumberOperators_"},"id":{"ref":"Partial_TextOperators_"},"prompt_v2":{"ref":"Partial_TextOperators_"}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Pick_FilterLeaf.prompts_versions_": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"prompts_versions":{"ref":"Partial_PromptVersionsToOperators_"}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "FilterLeafSubset_prompts_versions_": {
        "dataType": "refAlias",
        "type": {"ref":"Pick_FilterLeaf.prompts_versions_","validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "PromptVersionsFilterNode": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"FilterLeafSubset_prompts_versions_"},{"ref":"PromptVersionsFilterBranch"},{"dataType":"enum","enums":["all"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "PromptVersionsFilterBranch": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"right":{"ref":"PromptVersionsFilterNode","required":true},"operator":{"dataType":"union","subSchemas":[{"dataType":"enum","enums":["or"]},{"dataType":"enum","enums":["and"]}],"required":true},"left":{"ref":"PromptVersionsFilterNode","required":true}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "PromptVersionsQueryParams": {
        "dataType": "refObject",
        "properties": {
            "filter": {"ref":"PromptVersionsFilterNode"},
            "includeExperimentVersions": {"dataType":"boolean"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "PromptVersionResultCompiled": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "minor_version": {"dataType":"double","required":true},
            "major_version": {"dataType":"double","required":true},
            "prompt_v2": {"dataType":"string","required":true},
            "model": {"dataType":"string","required":true},
            "prompt_compiled": {"dataType":"any","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_PromptVersionResultCompiled_": {
        "dataType": "refObject",
        "properties": {
            "data": {"ref":"PromptVersionResultCompiled","required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_PromptVersionResultCompiled.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_PromptVersionResultCompiled_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "PromptVersiosQueryParamsCompiled": {
        "dataType": "refObject",
        "properties": {
            "filter": {"ref":"PromptVersionsFilterNode"},
            "includeExperimentVersions": {"dataType":"boolean"},
            "inputs": {"ref":"Record_string.string_","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "PromptVersionResultFilled": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "minor_version": {"dataType":"double","required":true},
            "major_version": {"dataType":"double","required":true},
            "prompt_v2": {"dataType":"string","required":true},
            "model": {"dataType":"string","required":true},
            "filled_helicone_template": {"dataType":"any","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_PromptVersionResultFilled_": {
        "dataType": "refObject",
        "properties": {
            "data": {"ref":"PromptVersionResultFilled","required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_PromptVersionResultFilled.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_PromptVersionResultFilled_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "UpgradeToProRequest": {
        "dataType": "refObject",
        "properties": {
            "addons": {"dataType":"nestedObjectLiteral","nestedProperties":{"evals":{"dataType":"boolean"},"experiments":{"dataType":"boolean"},"prompts":{"dataType":"boolean"},"alerts":{"dataType":"boolean"}}},
            "seats": {"dataType":"double"},
            "ui_mode": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["embedded"]},{"dataType":"enum","enums":["hosted"]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "UpgradeToTeamBundleRequest": {
        "dataType": "refObject",
        "properties": {
            "ui_mode": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["embedded"]},{"dataType":"enum","enums":["hosted"]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "LLMUsage": {
        "dataType": "refObject",
        "properties": {
            "model": {"dataType":"string","required":true},
            "provider": {"dataType":"string","required":true},
            "prompt_tokens": {"dataType":"double","required":true},
            "completion_tokens": {"dataType":"double","required":true},
            "total_count": {"dataType":"double","required":true},
            "amount": {"dataType":"double","required":true},
            "description": {"dataType":"string","required":true},
            "totalCost": {"dataType":"nestedObjectLiteral","nestedProperties":{"prompt_token":{"dataType":"double","required":true},"completion_token":{"dataType":"double","required":true}},"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess__40_Database-at-public_91_Tables_93_-at-organization_91_Row_93_-and-_role-string__41_-Array_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"array","array":{"dataType":"intersection","subSchemas":[{"dataType":"nestedObjectLiteral","nestedProperties":{"tier":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"subscription_status":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"stripe_subscription_item_id":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"stripe_subscription_id":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"stripe_metadata":{"ref":"Json","required":true},"stripe_customer_id":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"soft_delete":{"dataType":"boolean","required":true},"size":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"reseller_id":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"request_limit":{"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},"referral":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"percent_to_log":{"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},"owner":{"dataType":"string","required":true},"organization_type":{"dataType":"string","required":true},"org_provider_key":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"onboarding_status":{"ref":"Json","required":true},"name":{"dataType":"string","required":true},"logo_path":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"limits":{"dataType":"union","subSchemas":[{"ref":"Json"},{"dataType":"enum","enums":[null]}],"required":true},"is_personal":{"dataType":"boolean","required":true},"is_main_org":{"dataType":"boolean","required":true},"id":{"dataType":"string","required":true},"icon":{"dataType":"string","required":true},"has_onboarded":{"dataType":"boolean","required":true},"governance_settings":{"dataType":"union","subSchemas":[{"ref":"Json"},{"dataType":"enum","enums":[null]}],"required":true},"domain":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"created_at":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"color":{"dataType":"string","required":true}}},{"dataType":"nestedObjectLiteral","nestedProperties":{"role":{"dataType":"string","required":true}}}]},"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result__40_Database-at-public_91_Tables_93_-at-organization_91_Row_93_-and-_role-string__41_-Array.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess__40_Database-at-public_91_Tables_93_-at-organization_91_Row_93_-and-_role-string__41_-Array_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_Database-at-public_91_Tables_93_-at-organization_91_Row_93__": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"nestedObjectLiteral","nestedProperties":{"tier":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"subscription_status":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"stripe_subscription_item_id":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"stripe_subscription_id":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"stripe_metadata":{"ref":"Json","required":true},"stripe_customer_id":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"soft_delete":{"dataType":"boolean","required":true},"size":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"reseller_id":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"request_limit":{"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},"referral":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"percent_to_log":{"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},"owner":{"dataType":"string","required":true},"organization_type":{"dataType":"string","required":true},"org_provider_key":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"onboarding_status":{"ref":"Json","required":true},"name":{"dataType":"string","required":true},"logo_path":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"limits":{"dataType":"union","subSchemas":[{"ref":"Json"},{"dataType":"enum","enums":[null]}],"required":true},"is_personal":{"dataType":"boolean","required":true},"is_main_org":{"dataType":"boolean","required":true},"id":{"dataType":"string","required":true},"icon":{"dataType":"string","required":true},"has_onboarded":{"dataType":"boolean","required":true},"governance_settings":{"dataType":"union","subSchemas":[{"ref":"Json"},{"dataType":"enum","enums":[null]}],"required":true},"domain":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"created_at":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"color":{"dataType":"string","required":true}},"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_Database-at-public_91_Tables_93_-at-organization_91_Row_93_.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_Database-at-public_91_Tables_93_-at-organization_91_Row_93__"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess__color-string--created_at-string--domain-string--governance_settings-Json--has_onboarded-boolean--icon-string--id-string--is_main_org-boolean--is_personal-boolean--limits-Json--logo_path-string--name-string--onboarding_status-Json--org_provider_key-string--organization_type-string--owner-string--percent_to_log-number--referral-string--request_limit-number--reseller_id-string--size-string--soft_delete-boolean--stripe_customer_id-string--stripe_metadata-Json--stripe_subscription_id-string--stripe_subscription_item_id-string--subscription_status-string--tier-string_-Array_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"array","array":{"dataType":"nestedObjectLiteral","nestedProperties":{"tier":{"dataType":"string","required":true},"subscription_status":{"dataType":"string","required":true},"stripe_subscription_item_id":{"dataType":"string","required":true},"stripe_subscription_id":{"dataType":"string","required":true},"stripe_metadata":{"ref":"Json","required":true},"stripe_customer_id":{"dataType":"string","required":true},"soft_delete":{"dataType":"boolean","required":true},"size":{"dataType":"string","required":true},"reseller_id":{"dataType":"string","required":true},"request_limit":{"dataType":"double","required":true},"referral":{"dataType":"string","required":true},"percent_to_log":{"dataType":"double","required":true},"owner":{"dataType":"string","required":true},"organization_type":{"dataType":"string","required":true},"org_provider_key":{"dataType":"string","required":true},"onboarding_status":{"ref":"Json","required":true},"name":{"dataType":"string","required":true},"logo_path":{"dataType":"string","required":true},"limits":{"ref":"Json","required":true},"is_personal":{"dataType":"boolean","required":true},"is_main_org":{"dataType":"boolean","required":true},"id":{"dataType":"string","required":true},"icon":{"dataType":"string","required":true},"has_onboarded":{"dataType":"boolean","required":true},"governance_settings":{"ref":"Json","required":true},"domain":{"dataType":"string","required":true},"created_at":{"dataType":"string","required":true},"color":{"dataType":"string","required":true}}},"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result__color-string--created_at-string--domain-string--governance_settings-Json--has_onboarded-boolean--icon-string--id-string--is_main_org-boolean--is_personal-boolean--limits-Json--logo_path-string--name-string--onboarding_status-Json--org_provider_key-string--organization_type-string--owner-string--percent_to_log-number--referral-string--request_limit-number--reseller_id-string--size-string--soft_delete-boolean--stripe_customer_id-string--stripe_metadata-Json--stripe_subscription_id-string--stripe_subscription_item_id-string--subscription_status-string--tier-string_-Array.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess__color-string--created_at-string--domain-string--governance_settings-Json--has_onboarded-boolean--icon-string--id-string--is_main_org-boolean--is_personal-boolean--limits-Json--logo_path-string--name-string--onboarding_status-Json--org_provider_key-string--organization_type-string--owner-string--percent_to_log-number--referral-string--request_limit-number--reseller_id-string--size-string--soft_delete-boolean--stripe_customer_id-string--stripe_metadata-Json--stripe_subscription_id-string--stripe_subscription_item_id-string--subscription_status-string--tier-string_-Array_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_Result__color-string--created_at-string--domain-string--governance_settings-Json--has_onboarded-boolean--icon-string--id-string--is_main_org-boolean--is_personal-boolean--limits-Json--logo_path-string--name-string--onboarding_status-Json--org_provider_key-string--organization_type-string--owner-string--percent_to_log-number--referral-string--request_limit-number--reseller_id-string--size-string--soft_delete-boolean--stripe_customer_id-string--stripe_metadata-Json--stripe_subscription_id-string--stripe_subscription_item_id-string--subscription_status-string--tier-string_-Array.string__": {
        "dataType": "refObject",
        "properties": {
            "data": {"ref":"Result__color-string--created_at-string--domain-string--governance_settings-Json--has_onboarded-boolean--icon-string--id-string--is_main_org-boolean--is_personal-boolean--limits-Json--logo_path-string--name-string--onboarding_status-Json--org_provider_key-string--organization_type-string--owner-string--percent_to_log-number--referral-string--request_limit-number--reseller_id-string--size-string--soft_delete-boolean--stripe_customer_id-string--stripe_metadata-Json--stripe_subscription_id-string--stripe_subscription_item_id-string--subscription_status-string--tier-string_-Array.string_","required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultError_unknown_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"enum","enums":[null],"required":true},
            "error": {"dataType":"any","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_Result__color-string--created_at-string--domain-string--governance_settings-Json--has_onboarded-boolean--icon-string--id-string--is_main_org-boolean--is_personal-boolean--limits-Json--logo_path-string--name-string--onboarding_status-Json--org_provider_key-string--organization_type-string--owner-string--percent_to_log-number--referral-string--request_limit-number--reseller_id-string--size-string--soft_delete-boolean--stripe_customer_id-string--stripe_metadata-Json--stripe_subscription_id-string--stripe_subscription_item_id-string--subscription_status-string--tier-string_-Array.string_.unknown_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_Result__color-string--created_at-string--domain-string--governance_settings-Json--has_onboarded-boolean--icon-string--id-string--is_main_org-boolean--is_personal-boolean--limits-Json--logo_path-string--name-string--onboarding_status-Json--org_provider_key-string--organization_type-string--owner-string--percent_to_log-number--referral-string--request_limit-number--reseller_id-string--size-string--soft_delete-boolean--stripe_customer_id-string--stripe_metadata-Json--stripe_subscription_id-string--stripe_subscription_item_id-string--subscription_status-string--tier-string_-Array.string__"},{"ref":"ResultError_unknown_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "NewOrganizationParams": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"tier":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},"subscription_status":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},"stripe_subscription_item_id":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},"stripe_subscription_id":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},"stripe_metadata":{"ref":"Json"},"stripe_customer_id":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},"soft_delete":{"dataType":"boolean"},"size":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},"reseller_id":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},"request_limit":{"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}]},"referral":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},"percent_to_log":{"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}]},"owner":{"dataType":"string","required":true},"organization_type":{"dataType":"string"},"org_provider_key":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},"onboarding_status":{"ref":"Json"},"name":{"dataType":"string","required":true},"logo_path":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},"limits":{"dataType":"union","subSchemas":[{"ref":"Json"},{"dataType":"enum","enums":[null]}]},"is_personal":{"dataType":"boolean"},"is_main_org":{"dataType":"boolean"},"id":{"dataType":"string"},"icon":{"dataType":"string"},"has_onboarded":{"dataType":"boolean"},"governance_settings":{"dataType":"union","subSchemas":[{"ref":"Json"},{"dataType":"enum","enums":[null]}]},"domain":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},"created_at":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},"color":{"dataType":"string"}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Pick_NewOrganizationParams.name-or-color-or-icon-or-org_provider_key-or-limits-or-reseller_id-or-organization_type-or-onboarding_status_": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"name":{"dataType":"string","required":true},"color":{"dataType":"string"},"icon":{"dataType":"string"},"org_provider_key":{"dataType":"string"},"limits":{"ref":"Json"},"reseller_id":{"dataType":"string"},"organization_type":{"dataType":"string"},"onboarding_status":{"ref":"Json"}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "UpdateOrganizationParams": {
        "dataType": "refAlias",
        "type": {"dataType":"intersection","subSchemas":[{"ref":"Pick_NewOrganizationParams.name-or-color-or-icon-or-org_provider_key-or-limits-or-reseller_id-or-organization_type-or-onboarding_status_"},{"dataType":"nestedObjectLiteral","nestedProperties":{"variant":{"dataType":"string"}}}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "UIFilterRowTree": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"UIFilterRowNode"},{"ref":"FilterRow"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "UIFilterRowNode": {
        "dataType": "refObject",
        "properties": {
            "operator": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["and"]},{"dataType":"enum","enums":["or"]}],"required":true},
            "rows": {"dataType":"array","array":{"dataType":"refAlias","ref":"UIFilterRowTree"},"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "FilterRow": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"value":{"dataType":"string","required":true},"operatorIdx":{"dataType":"double","required":true},"filterMapIdx":{"dataType":"double","required":true}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "OrganizationFilter": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"softDelete":{"dataType":"boolean","required":true},"createdAt":{"dataType":"string"},"filter":{"dataType":"array","array":{"dataType":"refAlias","ref":"UIFilterRowTree"},"required":true},"name":{"dataType":"string","required":true},"id":{"dataType":"string","required":true}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "OrganizationLayout": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"filters":{"dataType":"array","array":{"dataType":"refAlias","ref":"OrganizationFilter"},"required":true},"type":{"dataType":"string","required":true},"organization_id":{"dataType":"string","required":true},"id":{"dataType":"string","required":true}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_OrganizationLayout_": {
        "dataType": "refObject",
        "properties": {
            "data": {"ref":"OrganizationLayout","required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_OrganizationLayout.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_OrganizationLayout_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "OrganizationMember": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"org_role":{"dataType":"string","required":true},"member":{"dataType":"string","required":true},"email":{"dataType":"string","required":true}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_OrganizationMember-Array_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"array","array":{"dataType":"refAlias","ref":"OrganizationMember"},"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_OrganizationMember-Array.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_OrganizationMember-Array_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "OrganizationOwner": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"tier":{"dataType":"string","required":true},"email":{"dataType":"string","required":true}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_OrganizationOwner-Array_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"array","array":{"dataType":"refAlias","ref":"OrganizationOwner"},"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_OrganizationOwner-Array.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_OrganizationOwner-Array_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Partial__currentStep-string--selectedTier-string--hasOnboarded-boolean--members-any-Array--addons_58__prompts-boolean--experiments-boolean--evals-boolean___": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"currentStep":{"dataType":"string"},"selectedTier":{"dataType":"string"},"hasOnboarded":{"dataType":"boolean"},"members":{"dataType":"array","array":{"dataType":"any"}},"addons":{"dataType":"nestedObjectLiteral","nestedProperties":{"evals":{"dataType":"boolean","required":true},"experiments":{"dataType":"boolean","required":true},"prompts":{"dataType":"boolean","required":true}}}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "OnboardingStatus": {
        "dataType": "refAlias",
        "type": {"ref":"Partial__currentStep-string--selectedTier-string--hasOnboarded-boolean--members-any-Array--addons_58__prompts-boolean--experiments-boolean--evals-boolean___","validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "HeliconeMeta": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"heliconeManualAccessKey":{"dataType":"string"},"lytixHost":{"dataType":"string"},"lytixKey":{"dataType":"string"},"posthogHost":{"dataType":"string"},"posthogApiKey":{"dataType":"string"},"webhookEnabled":{"dataType":"boolean","required":true},"omitResponseLog":{"dataType":"boolean","required":true},"omitRequestLog":{"dataType":"boolean","required":true},"modelOverride":{"dataType":"string"}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "TemplateWithInputs": {
        "dataType": "refObject",
        "properties": {
            "template": {"dataType":"object","required":true},
            "inputs": {"dataType":"nestedObjectLiteral","nestedProperties":{},"additionalProperties":{"dataType":"string"},"required":true},
            "autoInputs": {"dataType":"array","array":{"dataType":"any"},"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Log": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"response":{"dataType":"nestedObjectLiteral","nestedProperties":{"delayMs":{"dataType":"double","required":true},"responseCreatedAt":{"dataType":"datetime","required":true},"timeToFirstToken":{"dataType":"double"},"bodySize":{"dataType":"double","required":true},"status":{"dataType":"double","required":true},"id":{"dataType":"string","required":true}},"required":true},"request":{"dataType":"nestedObjectLiteral","nestedProperties":{"experimentRowIndex":{"dataType":"string"},"experimentColumnId":{"dataType":"string"},"heliconeTemplate":{"ref":"TemplateWithInputs"},"isStream":{"dataType":"boolean","required":true},"requestCreatedAt":{"dataType":"datetime","required":true},"countryCode":{"dataType":"string"},"threat":{"dataType":"boolean"},"path":{"dataType":"string","required":true},"bodySize":{"dataType":"double","required":true},"provider":{"ref":"Provider","required":true},"targetUrl":{"dataType":"string","required":true},"heliconeProxyKeyId":{"dataType":"string"},"heliconeApiKeyId":{"dataType":"double"},"properties":{"ref":"Record_string.string_","required":true},"promptVersion":{"dataType":"string"},"promptId":{"dataType":"string"},"userId":{"dataType":"string","required":true},"id":{"dataType":"string","required":true}},"required":true}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "KafkaMessageContents": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"log":{"ref":"Log","required":true},"heliconeMeta":{"ref":"HeliconeMeta","required":true},"authorization":{"dataType":"string","required":true}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_any_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"any","required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_unknown_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"any","required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "KeyPermissions": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["w"]},{"dataType":"enum","enums":["rw"]},{"dataType":"undefined"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "GenerateHashQueryParams": {
        "dataType": "refObject",
        "properties": {
            "apiKey": {"dataType":"string","required":true},
            "governance": {"dataType":"boolean","required":true},
            "keyName": {"dataType":"string","required":true},
            "permissions": {"ref":"KeyPermissions","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "FineTuneResult": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"nestedObjectLiteral","nestedProperties":{"error":{"dataType":"string","required":true}}},{"dataType":"nestedObjectLiteral","nestedProperties":{"data":{"dataType":"nestedObjectLiteral","nestedProperties":{"url":{"dataType":"string","required":true},"fineTuneJob":{"dataType":"string","required":true}},"required":true},"success":{"dataType":"boolean","required":true}}}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "FineTuneBodyParams": {
        "dataType": "refObject",
        "properties": {
            "providerKeyId": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "FineTuneBody": {
        "dataType": "refObject",
        "properties": {
            "providerKeyId": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "StoreFilterType": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"createdAt":{"dataType":"string"},"filter":{"dataType":"any","required":true},"name":{"dataType":"string","required":true},"id":{"dataType":"string"}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_StoreFilterType-Array_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"array","array":{"dataType":"refAlias","ref":"StoreFilterType"},"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_StoreFilterType-Array.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_StoreFilterType-Array_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_StoreFilterType_": {
        "dataType": "refObject",
        "properties": {
            "data": {"ref":"StoreFilterType","required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_StoreFilterType.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_StoreFilterType_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess__id-string__": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"nestedObjectLiteral","nestedProperties":{"id":{"dataType":"string","required":true}},"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result__id-string_.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess__id-string__"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionTokenLogprob.TopLogprob": {
        "dataType": "refObject",
        "properties": {
            "token": {"dataType":"string","required":true},
            "bytes": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"double"}},{"dataType":"enum","enums":[null]}],"required":true},
            "logprob": {"dataType":"double","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionTokenLogprob": {
        "dataType": "refObject",
        "properties": {
            "token": {"dataType":"string","required":true},
            "bytes": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"double"}},{"dataType":"enum","enums":[null]}],"required":true},
            "logprob": {"dataType":"double","required":true},
            "top_logprobs": {"dataType":"array","array":{"dataType":"refObject","ref":"ChatCompletionTokenLogprob.TopLogprob"},"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletion.Choice.Logprobs": {
        "dataType": "refObject",
        "properties": {
            "content": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"ChatCompletionTokenLogprob"}},{"dataType":"enum","enums":[null]}],"required":true},
            "refusal": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"ChatCompletionTokenLogprob"}},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionAudio": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "data": {"dataType":"string","required":true},
            "expires_at": {"dataType":"double","required":true},
            "transcript": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionMessage.FunctionCall": {
        "dataType": "refObject",
        "properties": {
            "arguments": {"dataType":"string","required":true},
            "name": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionMessageToolCall.Function": {
        "dataType": "refObject",
        "properties": {
            "arguments": {"dataType":"string","required":true},
            "name": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionMessageToolCall": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "function": {"ref":"ChatCompletionMessageToolCall.Function","required":true},
            "type": {"dataType":"enum","enums":["function"],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionMessage": {
        "dataType": "refObject",
        "properties": {
            "content": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "refusal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "role": {"dataType":"enum","enums":["assistant"],"required":true},
            "audio": {"dataType":"union","subSchemas":[{"ref":"ChatCompletionAudio"},{"dataType":"enum","enums":[null]}]},
            "function_call": {"dataType":"union","subSchemas":[{"ref":"ChatCompletionMessage.FunctionCall"},{"dataType":"enum","enums":[null]}]},
            "tool_calls": {"dataType":"array","array":{"dataType":"refObject","ref":"ChatCompletionMessageToolCall"}},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletion.Choice": {
        "dataType": "refObject",
        "properties": {
            "finish_reason": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["stop"]},{"dataType":"enum","enums":["length"]},{"dataType":"enum","enums":["tool_calls"]},{"dataType":"enum","enums":["content_filter"]},{"dataType":"enum","enums":["function_call"]}],"required":true},
            "index": {"dataType":"double","required":true},
            "logprobs": {"dataType":"union","subSchemas":[{"ref":"ChatCompletion.Choice.Logprobs"},{"dataType":"enum","enums":[null]}],"required":true},
            "message": {"ref":"ChatCompletionMessage","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "CompletionUsage.CompletionTokensDetails": {
        "dataType": "refObject",
        "properties": {
            "audio_tokens": {"dataType":"double"},
            "reasoning_tokens": {"dataType":"double"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "CompletionUsage.PromptTokensDetails": {
        "dataType": "refObject",
        "properties": {
            "audio_tokens": {"dataType":"double"},
            "cached_tokens": {"dataType":"double"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "CompletionUsage": {
        "dataType": "refObject",
        "properties": {
            "completion_tokens": {"dataType":"double","required":true},
            "prompt_tokens": {"dataType":"double","required":true},
            "total_tokens": {"dataType":"double","required":true},
            "completion_tokens_details": {"ref":"CompletionUsage.CompletionTokensDetails"},
            "prompt_tokens_details": {"ref":"CompletionUsage.PromptTokensDetails"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletion": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "choices": {"dataType":"array","array":{"dataType":"refObject","ref":"ChatCompletion.Choice"},"required":true},
            "created": {"dataType":"double","required":true},
            "model": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["chat.completion"],"required":true},
            "service_tier": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["scale"]},{"dataType":"enum","enums":["default"]},{"dataType":"enum","enums":[null]}]},
            "system_fingerprint": {"dataType":"string"},
            "usage": {"ref":"CompletionUsage"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_ChatCompletion_": {
        "dataType": "refObject",
        "properties": {
            "data": {"ref":"ChatCompletion","required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_ChatCompletion.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_ChatCompletion_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionContentPartText": {
        "dataType": "refObject",
        "properties": {
            "text": {"dataType":"string","required":true},
            "type": {"dataType":"enum","enums":["text"],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionSystemMessageParam": {
        "dataType": "refObject",
        "properties": {
            "content": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"array","array":{"dataType":"refObject","ref":"ChatCompletionContentPartText"}}],"required":true},
            "role": {"dataType":"enum","enums":["system"],"required":true},
            "name": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionContentPartImage.ImageURL": {
        "dataType": "refObject",
        "properties": {
            "url": {"dataType":"string","required":true},
            "detail": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["auto"]},{"dataType":"enum","enums":["low"]},{"dataType":"enum","enums":["high"]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionContentPartImage": {
        "dataType": "refObject",
        "properties": {
            "image_url": {"ref":"ChatCompletionContentPartImage.ImageURL","required":true},
            "type": {"dataType":"enum","enums":["image_url"],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionContentPartInputAudio.InputAudio": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"string","required":true},
            "format": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["wav"]},{"dataType":"enum","enums":["mp3"]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionContentPartInputAudio": {
        "dataType": "refObject",
        "properties": {
            "input_audio": {"ref":"ChatCompletionContentPartInputAudio.InputAudio","required":true},
            "type": {"dataType":"enum","enums":["input_audio"],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionContentPart": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ChatCompletionContentPartText"},{"ref":"ChatCompletionContentPartImage"},{"ref":"ChatCompletionContentPartInputAudio"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionUserMessageParam": {
        "dataType": "refObject",
        "properties": {
            "content": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"array","array":{"dataType":"refAlias","ref":"ChatCompletionContentPart"}}],"required":true},
            "role": {"dataType":"enum","enums":["user"],"required":true},
            "name": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionAssistantMessageParam.Audio": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionContentPartRefusal": {
        "dataType": "refObject",
        "properties": {
            "refusal": {"dataType":"string","required":true},
            "type": {"dataType":"enum","enums":["refusal"],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionAssistantMessageParam.FunctionCall": {
        "dataType": "refObject",
        "properties": {
            "arguments": {"dataType":"string","required":true},
            "name": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionAssistantMessageParam": {
        "dataType": "refObject",
        "properties": {
            "role": {"dataType":"enum","enums":["assistant"],"required":true},
            "audio": {"dataType":"union","subSchemas":[{"ref":"ChatCompletionAssistantMessageParam.Audio"},{"dataType":"enum","enums":[null]}]},
            "content": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"array","array":{"dataType":"union","subSchemas":[{"ref":"ChatCompletionContentPartText"},{"ref":"ChatCompletionContentPartRefusal"}]}},{"dataType":"enum","enums":[null]}]},
            "function_call": {"dataType":"union","subSchemas":[{"ref":"ChatCompletionAssistantMessageParam.FunctionCall"},{"dataType":"enum","enums":[null]}]},
            "name": {"dataType":"string"},
            "refusal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "tool_calls": {"dataType":"array","array":{"dataType":"refObject","ref":"ChatCompletionMessageToolCall"}},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionToolMessageParam": {
        "dataType": "refObject",
        "properties": {
            "content": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"array","array":{"dataType":"refObject","ref":"ChatCompletionContentPartText"}}],"required":true},
            "role": {"dataType":"enum","enums":["tool"],"required":true},
            "tool_call_id": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionFunctionMessageParam": {
        "dataType": "refObject",
        "properties": {
            "content": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "name": {"dataType":"string","required":true},
            "role": {"dataType":"enum","enums":["function"],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionMessageParam": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ChatCompletionSystemMessageParam"},{"ref":"ChatCompletionUserMessageParam"},{"ref":"ChatCompletionAssistantMessageParam"},{"ref":"ChatCompletionToolMessageParam"},{"ref":"ChatCompletionFunctionMessageParam"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Record_string.unknown_": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{},"additionalProperties":{"dataType":"any"},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "FunctionParameters": {
        "dataType": "refAlias",
        "type": {"ref":"Record_string.unknown_","validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "FunctionDefinition": {
        "dataType": "refObject",
        "properties": {
            "name": {"dataType":"string","required":true},
            "description": {"dataType":"string"},
            "parameters": {"ref":"FunctionParameters"},
            "strict": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionTool": {
        "dataType": "refObject",
        "properties": {
            "function": {"ref":"FunctionDefinition","required":true},
            "type": {"dataType":"enum","enums":["function"],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionNamedToolChoice.Function": {
        "dataType": "refObject",
        "properties": {
            "name": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionNamedToolChoice": {
        "dataType": "refObject",
        "properties": {
            "function": {"ref":"ChatCompletionNamedToolChoice.Function","required":true},
            "type": {"dataType":"enum","enums":["function"],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ChatCompletionToolChoiceOption": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["none"]},{"dataType":"enum","enums":["auto"]},{"dataType":"enum","enums":["required"]},{"ref":"ChatCompletionNamedToolChoice"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "AlertResponse": {
        "dataType": "refObject",
        "properties": {
            "alerts": {"dataType":"array","array":{"dataType":"nestedObjectLiteral","nestedProperties":{"updated_at":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"time_window":{"dataType":"double","required":true},"time_block_duration":{"dataType":"double","required":true},"threshold":{"dataType":"double","required":true},"status":{"dataType":"string","required":true},"soft_delete":{"dataType":"boolean","required":true},"slack_channels":{"dataType":"array","array":{"dataType":"string"},"required":true},"org_id":{"dataType":"string","required":true},"name":{"dataType":"string","required":true},"minimum_request_count":{"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},"metric":{"dataType":"string","required":true},"id":{"dataType":"string","required":true},"emails":{"dataType":"array","array":{"dataType":"string"},"required":true},"created_at":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true}}},"required":true},
            "history": {"dataType":"array","array":{"dataType":"nestedObjectLiteral","nestedProperties":{"updated_at":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"triggered_value":{"dataType":"string","required":true},"status":{"dataType":"string","required":true},"soft_delete":{"dataType":"boolean","required":true},"org_id":{"dataType":"string","required":true},"id":{"dataType":"string","required":true},"created_at":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},"alert_start_time":{"dataType":"string","required":true},"alert_name":{"dataType":"string","required":true},"alert_metric":{"dataType":"string","required":true},"alert_id":{"dataType":"string","required":true},"alert_end_time":{"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true}}},"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess_AlertResponse_": {
        "dataType": "refObject",
        "properties": {
            "data": {"ref":"AlertResponse","required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result_AlertResponse.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess_AlertResponse_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "AlertRequest": {
        "dataType": "refObject",
        "properties": {
            "name": {"dataType":"string","required":true},
            "metric": {"dataType":"string","required":true},
            "threshold": {"dataType":"double","required":true},
            "time_window": {"dataType":"string","required":true},
            "emails": {"dataType":"array","array":{"dataType":"string"},"required":true},
            "slack_channels": {"dataType":"array","array":{"dataType":"string"},"required":true},
            "minimum_request_count": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"undefined"}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess__active-boolean--created_at-string--id-number--message-string--title-string--updated_at-string_-Array_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"array","array":{"dataType":"nestedObjectLiteral","nestedProperties":{"updated_at":{"dataType":"string","required":true},"title":{"dataType":"string","required":true},"message":{"dataType":"string","required":true},"id":{"dataType":"double","required":true},"created_at":{"dataType":"string","required":true},"active":{"dataType":"boolean","required":true}}},"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result__active-boolean--created_at-string--id-number--message-string--title-string--updated_at-string_-Array.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess__active-boolean--created_at-string--id-number--message-string--title-string--updated_at-string_-Array_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ResultSuccess__organization_id-string--name-string--flags-string-Array_-Array_": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"array","array":{"dataType":"nestedObjectLiteral","nestedProperties":{"flags":{"dataType":"array","array":{"dataType":"string"},"required":true},"name":{"dataType":"string","required":true},"organization_id":{"dataType":"string","required":true}}},"required":true},
            "error": {"dataType":"enum","enums":[null],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Result__organization_id-string--name-string--flags-string-Array_-Array.string_": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"ResultSuccess__organization_id-string--name-string--flags-string-Array_-Array_"},{"ref":"ResultError_string_"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "KafkaSettings": {
        "dataType": "refObject",
        "properties": {
            "miniBatchSize": {"dataType":"double","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "AzureExperiment": {
        "dataType": "refObject",
        "properties": {
            "azureBaseUri": {"dataType":"string","required":true},
            "azureApiVersion": {"dataType":"string","required":true},
            "azureDeploymentName": {"dataType":"string","required":true},
            "azureApiKey": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ApiKey": {
        "dataType": "refObject",
        "properties": {
            "apiKey": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Setting": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"KafkaSettings"},{"ref":"AzureExperiment"},{"ref":"ApiKey"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "SettingName": {
        "dataType": "refAlias",
        "type": {"dataType":"enum","enums":["kafka:dlq","kafka:log","kafka:score","kafka:dlq:score","kafka:dlq:eu","kafka:log:eu","kafka:orgs-to-dlq","azure:experiment","openai:apiKey","anthropic:apiKey","openrouter:apiKey"],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "url.URL": {
        "dataType": "refAlias",
        "type": {"dataType":"string","validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Application": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["application"],"required":true},
            "deleted": {"dataType":"void"},
            "name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.DeletedApplication": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["application"],"required":true},
            "deleted": {"dataType":"enum","enums":[true],"required":true},
            "name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.BusinessProfile.AnnualRevenue": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "currency": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "fiscal_year_end": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.BusinessProfile.MonthlyEstimatedRevenue": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Address": {
        "dataType": "refObject",
        "properties": {
            "city": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "line1": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "line2": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "postal_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "state": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.BusinessProfile": {
        "dataType": "refObject",
        "properties": {
            "annual_revenue": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Account.BusinessProfile.AnnualRevenue"},{"dataType":"enum","enums":[null]}],"required":true},
            "estimated_worker_count": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "mcc": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "monthly_estimated_revenue": {"ref":"stripe.Stripe.Account.BusinessProfile.MonthlyEstimatedRevenue"},
            "name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "product_description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "support_address": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Address"},{"dataType":"enum","enums":[null]}],"required":true},
            "support_email": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "support_phone": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "support_url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.BusinessType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["company"]},{"dataType":"enum","enums":["government_entity"]},{"dataType":"enum","enums":["individual"]},{"dataType":"enum","enums":["non_profit"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.AcssDebitPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.AffirmPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.AfterpayClearpayPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.AmazonPayPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.AuBecsDebitPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.BacsDebitPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.BancontactPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.BankTransferPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.BlikPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.BoletoPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.CardIssuing": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.CardPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.CartesBancairesPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.CashappPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.EpsPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.FpxPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.GbBankTransferPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.GiropayPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.GrabpayPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.IdealPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.IndiaInternationalPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.JcbPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.JpBankTransferPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.KlarnaPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.KonbiniPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.LegacyPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.LinkPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.MobilepayPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.MultibancoPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.MxBankTransferPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.OxxoPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.P24Payments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.PaynowPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.PromptpayPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.RevolutPayPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.SepaBankTransferPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.SepaDebitPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.SofortPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.SwishPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.TaxReportingUs1099K": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.TaxReportingUs1099Misc": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.Transfers": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.Treasury": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.TwintPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.UsBankAccountAchPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.UsBankTransferPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities.ZipPayments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Capabilities": {
        "dataType": "refObject",
        "properties": {
            "acss_debit_payments": {"ref":"stripe.Stripe.Account.Capabilities.AcssDebitPayments"},
            "affirm_payments": {"ref":"stripe.Stripe.Account.Capabilities.AffirmPayments"},
            "afterpay_clearpay_payments": {"ref":"stripe.Stripe.Account.Capabilities.AfterpayClearpayPayments"},
            "amazon_pay_payments": {"ref":"stripe.Stripe.Account.Capabilities.AmazonPayPayments"},
            "au_becs_debit_payments": {"ref":"stripe.Stripe.Account.Capabilities.AuBecsDebitPayments"},
            "bacs_debit_payments": {"ref":"stripe.Stripe.Account.Capabilities.BacsDebitPayments"},
            "bancontact_payments": {"ref":"stripe.Stripe.Account.Capabilities.BancontactPayments"},
            "bank_transfer_payments": {"ref":"stripe.Stripe.Account.Capabilities.BankTransferPayments"},
            "blik_payments": {"ref":"stripe.Stripe.Account.Capabilities.BlikPayments"},
            "boleto_payments": {"ref":"stripe.Stripe.Account.Capabilities.BoletoPayments"},
            "card_issuing": {"ref":"stripe.Stripe.Account.Capabilities.CardIssuing"},
            "card_payments": {"ref":"stripe.Stripe.Account.Capabilities.CardPayments"},
            "cartes_bancaires_payments": {"ref":"stripe.Stripe.Account.Capabilities.CartesBancairesPayments"},
            "cashapp_payments": {"ref":"stripe.Stripe.Account.Capabilities.CashappPayments"},
            "eps_payments": {"ref":"stripe.Stripe.Account.Capabilities.EpsPayments"},
            "fpx_payments": {"ref":"stripe.Stripe.Account.Capabilities.FpxPayments"},
            "gb_bank_transfer_payments": {"ref":"stripe.Stripe.Account.Capabilities.GbBankTransferPayments"},
            "giropay_payments": {"ref":"stripe.Stripe.Account.Capabilities.GiropayPayments"},
            "grabpay_payments": {"ref":"stripe.Stripe.Account.Capabilities.GrabpayPayments"},
            "ideal_payments": {"ref":"stripe.Stripe.Account.Capabilities.IdealPayments"},
            "india_international_payments": {"ref":"stripe.Stripe.Account.Capabilities.IndiaInternationalPayments"},
            "jcb_payments": {"ref":"stripe.Stripe.Account.Capabilities.JcbPayments"},
            "jp_bank_transfer_payments": {"ref":"stripe.Stripe.Account.Capabilities.JpBankTransferPayments"},
            "klarna_payments": {"ref":"stripe.Stripe.Account.Capabilities.KlarnaPayments"},
            "konbini_payments": {"ref":"stripe.Stripe.Account.Capabilities.KonbiniPayments"},
            "legacy_payments": {"ref":"stripe.Stripe.Account.Capabilities.LegacyPayments"},
            "link_payments": {"ref":"stripe.Stripe.Account.Capabilities.LinkPayments"},
            "mobilepay_payments": {"ref":"stripe.Stripe.Account.Capabilities.MobilepayPayments"},
            "multibanco_payments": {"ref":"stripe.Stripe.Account.Capabilities.MultibancoPayments"},
            "mx_bank_transfer_payments": {"ref":"stripe.Stripe.Account.Capabilities.MxBankTransferPayments"},
            "oxxo_payments": {"ref":"stripe.Stripe.Account.Capabilities.OxxoPayments"},
            "p24_payments": {"ref":"stripe.Stripe.Account.Capabilities.P24Payments"},
            "paynow_payments": {"ref":"stripe.Stripe.Account.Capabilities.PaynowPayments"},
            "promptpay_payments": {"ref":"stripe.Stripe.Account.Capabilities.PromptpayPayments"},
            "revolut_pay_payments": {"ref":"stripe.Stripe.Account.Capabilities.RevolutPayPayments"},
            "sepa_bank_transfer_payments": {"ref":"stripe.Stripe.Account.Capabilities.SepaBankTransferPayments"},
            "sepa_debit_payments": {"ref":"stripe.Stripe.Account.Capabilities.SepaDebitPayments"},
            "sofort_payments": {"ref":"stripe.Stripe.Account.Capabilities.SofortPayments"},
            "swish_payments": {"ref":"stripe.Stripe.Account.Capabilities.SwishPayments"},
            "tax_reporting_us_1099_k": {"ref":"stripe.Stripe.Account.Capabilities.TaxReportingUs1099K"},
            "tax_reporting_us_1099_misc": {"ref":"stripe.Stripe.Account.Capabilities.TaxReportingUs1099Misc"},
            "transfers": {"ref":"stripe.Stripe.Account.Capabilities.Transfers"},
            "treasury": {"ref":"stripe.Stripe.Account.Capabilities.Treasury"},
            "twint_payments": {"ref":"stripe.Stripe.Account.Capabilities.TwintPayments"},
            "us_bank_account_ach_payments": {"ref":"stripe.Stripe.Account.Capabilities.UsBankAccountAchPayments"},
            "us_bank_transfer_payments": {"ref":"stripe.Stripe.Account.Capabilities.UsBankTransferPayments"},
            "zip_payments": {"ref":"stripe.Stripe.Account.Capabilities.ZipPayments"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Company.AddressKana": {
        "dataType": "refObject",
        "properties": {
            "city": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "line1": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "line2": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "postal_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "state": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "town": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Company.AddressKanji": {
        "dataType": "refObject",
        "properties": {
            "city": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "line1": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "line2": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "postal_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "state": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "town": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Company.OwnershipDeclaration": {
        "dataType": "refObject",
        "properties": {
            "date": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "ip": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "user_agent": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Company.Structure": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["free_zone_establishment"]},{"dataType":"enum","enums":["free_zone_llc"]},{"dataType":"enum","enums":["government_instrumentality"]},{"dataType":"enum","enums":["governmental_unit"]},{"dataType":"enum","enums":["incorporated_non_profit"]},{"dataType":"enum","enums":["incorporated_partnership"]},{"dataType":"enum","enums":["limited_liability_partnership"]},{"dataType":"enum","enums":["llc"]},{"dataType":"enum","enums":["multi_member_llc"]},{"dataType":"enum","enums":["private_company"]},{"dataType":"enum","enums":["private_corporation"]},{"dataType":"enum","enums":["private_partnership"]},{"dataType":"enum","enums":["public_company"]},{"dataType":"enum","enums":["public_corporation"]},{"dataType":"enum","enums":["public_partnership"]},{"dataType":"enum","enums":["registered_charity"]},{"dataType":"enum","enums":["single_member_llc"]},{"dataType":"enum","enums":["sole_establishment"]},{"dataType":"enum","enums":["sole_proprietorship"]},{"dataType":"enum","enums":["tax_exempt_government_instrumentality"]},{"dataType":"enum","enums":["unincorporated_association"]},{"dataType":"enum","enums":["unincorporated_non_profit"]},{"dataType":"enum","enums":["unincorporated_partnership"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.File": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["file"],"required":true},
            "created": {"dataType":"double","required":true},
            "expires_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "filename": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "links": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.ApiList_stripe.Stripe.FileLink_"},{"dataType":"enum","enums":[null]}]},
            "purpose": {"ref":"stripe.Stripe.File.Purpose","required":true},
            "size": {"dataType":"double","required":true},
            "title": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "type": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Metadata": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": {"dataType":"string"},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.FileLink": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["file_link"],"required":true},
            "created": {"dataType":"double","required":true},
            "expired": {"dataType":"boolean","required":true},
            "expires_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "file": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"}],"required":true},
            "livemode": {"dataType":"boolean","required":true},
            "metadata": {"ref":"stripe.Stripe.Metadata","required":true},
            "url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ApiList_stripe.Stripe.FileLink_": {
        "dataType": "refObject",
        "properties": {
            "object": {"dataType":"enum","enums":["list"],"required":true},
            "data": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.FileLink"},"required":true},
            "has_more": {"dataType":"boolean","required":true},
            "url": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.File.Purpose": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["account_requirement"]},{"dataType":"enum","enums":["additional_verification"]},{"dataType":"enum","enums":["business_icon"]},{"dataType":"enum","enums":["business_logo"]},{"dataType":"enum","enums":["customer_signature"]},{"dataType":"enum","enums":["dispute_evidence"]},{"dataType":"enum","enums":["document_provider_identity_document"]},{"dataType":"enum","enums":["finance_report_run"]},{"dataType":"enum","enums":["identity_document"]},{"dataType":"enum","enums":["identity_document_downloadable"]},{"dataType":"enum","enums":["issuing_regulatory_reporting"]},{"dataType":"enum","enums":["pci_document"]},{"dataType":"enum","enums":["selfie"]},{"dataType":"enum","enums":["sigma_scheduled_query"]},{"dataType":"enum","enums":["tax_document_user_upload"]},{"dataType":"enum","enums":["terminal_reader_splashscreen"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Company.Verification.Document": {
        "dataType": "refObject",
        "properties": {
            "back": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "details": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "details_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "front": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Company.Verification": {
        "dataType": "refObject",
        "properties": {
            "document": {"ref":"stripe.Stripe.Account.Company.Verification.Document","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Company": {
        "dataType": "refObject",
        "properties": {
            "address": {"ref":"stripe.Stripe.Address"},
            "address_kana": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Account.Company.AddressKana"},{"dataType":"enum","enums":[null]}]},
            "address_kanji": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Account.Company.AddressKanji"},{"dataType":"enum","enums":[null]}]},
            "directors_provided": {"dataType":"boolean"},
            "executives_provided": {"dataType":"boolean"},
            "export_license_id": {"dataType":"string"},
            "export_purpose_code": {"dataType":"string"},
            "name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "name_kana": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "name_kanji": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "owners_provided": {"dataType":"boolean"},
            "ownership_declaration": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Account.Company.OwnershipDeclaration"},{"dataType":"enum","enums":[null]}]},
            "phone": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "structure": {"ref":"stripe.Stripe.Account.Company.Structure"},
            "tax_id_provided": {"dataType":"boolean"},
            "tax_id_registrar": {"dataType":"string"},
            "vat_id_provided": {"dataType":"boolean"},
            "verification": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Account.Company.Verification"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Controller.Fees.Payer": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["account"]},{"dataType":"enum","enums":["application"]},{"dataType":"enum","enums":["application_custom"]},{"dataType":"enum","enums":["application_express"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Controller.Fees": {
        "dataType": "refObject",
        "properties": {
            "payer": {"ref":"stripe.Stripe.Account.Controller.Fees.Payer","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Controller.Losses.Payments": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["application"]},{"dataType":"enum","enums":["stripe"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Controller.Losses": {
        "dataType": "refObject",
        "properties": {
            "payments": {"ref":"stripe.Stripe.Account.Controller.Losses.Payments","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Controller.RequirementCollection": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["application"]},{"dataType":"enum","enums":["stripe"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Controller.StripeDashboard.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["express"]},{"dataType":"enum","enums":["full"]},{"dataType":"enum","enums":["none"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Controller.StripeDashboard": {
        "dataType": "refObject",
        "properties": {
            "type": {"ref":"stripe.Stripe.Account.Controller.StripeDashboard.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Controller.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["account"]},{"dataType":"enum","enums":["application"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Controller": {
        "dataType": "refObject",
        "properties": {
            "fees": {"ref":"stripe.Stripe.Account.Controller.Fees"},
            "is_controller": {"dataType":"boolean"},
            "losses": {"ref":"stripe.Stripe.Account.Controller.Losses"},
            "requirement_collection": {"ref":"stripe.Stripe.Account.Controller.RequirementCollection"},
            "stripe_dashboard": {"ref":"stripe.Stripe.Account.Controller.StripeDashboard"},
            "type": {"ref":"stripe.Stripe.Account.Controller.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["account"],"required":true},
            "business_profile": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Account.BusinessProfile"},{"dataType":"enum","enums":[null]}]},
            "business_type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Account.BusinessType"},{"dataType":"enum","enums":[null]}]},
            "capabilities": {"ref":"stripe.Stripe.Account.Capabilities"},
            "charges_enabled": {"dataType":"boolean","required":true},
            "company": {"ref":"stripe.Stripe.Account.Company"},
            "controller": {"ref":"stripe.Stripe.Account.Controller"},
            "country": {"dataType":"string"},
            "created": {"dataType":"double"},
            "default_currency": {"dataType":"string"},
            "deleted": {"dataType":"void"},
            "details_submitted": {"dataType":"boolean","required":true},
            "email": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "external_accounts": {"ref":"stripe.Stripe.ApiList_stripe.Stripe.ExternalAccount_"},
            "future_requirements": {"ref":"stripe.Stripe.Account.FutureRequirements"},
            "individual": {"ref":"stripe.Stripe.Person"},
            "metadata": {"ref":"stripe.Stripe.Metadata"},
            "payouts_enabled": {"dataType":"boolean","required":true},
            "requirements": {"ref":"stripe.Stripe.Account.Requirements"},
            "settings": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Account.Settings"},{"dataType":"enum","enums":[null]}]},
            "tos_acceptance": {"ref":"stripe.Stripe.Account.TosAcceptance"},
            "type": {"ref":"stripe.Stripe.Account.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.BankAccount.AvailablePayoutMethod": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["instant"]},{"dataType":"enum","enums":["standard"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.CashBalance.Settings.ReconciliationMode": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["automatic"]},{"dataType":"enum","enums":["manual"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.CashBalance.Settings": {
        "dataType": "refObject",
        "properties": {
            "reconciliation_mode": {"ref":"stripe.Stripe.CashBalance.Settings.ReconciliationMode","required":true},
            "using_merchant_default": {"dataType":"boolean","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.CashBalance": {
        "dataType": "refObject",
        "properties": {
            "object": {"dataType":"enum","enums":["cash_balance"],"required":true},
            "available": {"dataType":"union","subSchemas":[{"dataType":"nestedObjectLiteral","nestedProperties":{},"additionalProperties":{"dataType":"double"}},{"dataType":"enum","enums":[null]}],"required":true},
            "customer": {"dataType":"string","required":true},
            "livemode": {"dataType":"boolean","required":true},
            "settings": {"ref":"stripe.Stripe.CashBalance.Settings","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.BankAccount": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["bank_account"],"required":true},
            "account": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"},{"dataType":"enum","enums":[null]}]},
            "account_holder_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "account_holder_type": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "account_type": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "available_payout_methods": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.BankAccount.AvailablePayoutMethod"}},{"dataType":"enum","enums":[null]}]},
            "bank_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "country": {"dataType":"string","required":true},
            "currency": {"dataType":"string","required":true},
            "customer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Customer"},{"ref":"stripe.Stripe.DeletedCustomer"},{"dataType":"enum","enums":[null]}]},
            "default_for_currency": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}]},
            "deleted": {"dataType":"void"},
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "future_requirements": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.BankAccount.FutureRequirements"},{"dataType":"enum","enums":[null]}]},
            "last4": {"dataType":"string","required":true},
            "metadata": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Metadata"},{"dataType":"enum","enums":[null]}]},
            "requirements": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.BankAccount.Requirements"},{"dataType":"enum","enums":[null]}]},
            "routing_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "status": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Card.AvailablePayoutMethod": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["instant"]},{"dataType":"enum","enums":["standard"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Customer": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["customer"],"required":true},
            "address": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Address"},{"dataType":"enum","enums":[null]}]},
            "balance": {"dataType":"double","required":true},
            "cash_balance": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.CashBalance"},{"dataType":"enum","enums":[null]}]},
            "created": {"dataType":"double","required":true},
            "currency": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "default_source": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.CustomerSource"},{"dataType":"enum","enums":[null]}],"required":true},
            "deleted": {"dataType":"void"},
            "delinquent": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}]},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "discount": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Discount"},{"dataType":"enum","enums":[null]}]},
            "email": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "invoice_credit_balance": {"dataType":"nestedObjectLiteral","nestedProperties":{},"additionalProperties":{"dataType":"double"}},
            "invoice_prefix": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "invoice_settings": {"ref":"stripe.Stripe.Customer.InvoiceSettings","required":true},
            "livemode": {"dataType":"boolean","required":true},
            "metadata": {"ref":"stripe.Stripe.Metadata","required":true},
            "name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "next_invoice_sequence": {"dataType":"double"},
            "phone": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "preferred_locales": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}]},
            "shipping": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Customer.Shipping"},{"dataType":"enum","enums":[null]}],"required":true},
            "sources": {"ref":"stripe.Stripe.ApiList_stripe.Stripe.CustomerSource_"},
            "subscriptions": {"ref":"stripe.Stripe.ApiList_stripe.Stripe.Subscription_"},
            "tax": {"ref":"stripe.Stripe.Customer.Tax"},
            "tax_exempt": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Customer.TaxExempt"},{"dataType":"enum","enums":[null]}]},
            "tax_ids": {"ref":"stripe.Stripe.ApiList_stripe.Stripe.TaxId_"},
            "test_clock": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.TestHelpers.TestClock"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.DeletedCustomer": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["customer"],"required":true},
            "deleted": {"dataType":"enum","enums":[true],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Card.Networks": {
        "dataType": "refObject",
        "properties": {
            "preferred": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Card": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["card"],"required":true},
            "account": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"},{"dataType":"enum","enums":[null]}]},
            "address_city": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "address_country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "address_line1": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "address_line1_check": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "address_line2": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "address_state": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "address_zip": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "address_zip_check": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "available_payout_methods": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.Card.AvailablePayoutMethod"}},{"dataType":"enum","enums":[null]}]},
            "brand": {"dataType":"string","required":true},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "currency": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "customer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Customer"},{"ref":"stripe.Stripe.DeletedCustomer"},{"dataType":"enum","enums":[null]}]},
            "cvc_check": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "default_for_currency": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}]},
            "deleted": {"dataType":"void"},
            "description": {"dataType":"string"},
            "dynamic_last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "exp_month": {"dataType":"double","required":true},
            "exp_year": {"dataType":"double","required":true},
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "funding": {"dataType":"string","required":true},
            "iin": {"dataType":"string"},
            "issuer": {"dataType":"string"},
            "last4": {"dataType":"string","required":true},
            "metadata": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Metadata"},{"dataType":"enum","enums":[null]}],"required":true},
            "name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "networks": {"ref":"stripe.Stripe.Card.Networks"},
            "status": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "tokenization_method": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.AchCreditTransfer": {
        "dataType": "refObject",
        "properties": {
            "account_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "bank_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "refund_account_holder_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "refund_account_holder_type": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "refund_routing_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "routing_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "swift_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.AchDebit": {
        "dataType": "refObject",
        "properties": {
            "bank_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "routing_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "type": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.AcssDebit": {
        "dataType": "refObject",
        "properties": {
            "bank_address_city": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "bank_address_line_1": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "bank_address_line_2": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "bank_address_postal_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "bank_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "category": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "routing_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.Alipay": {
        "dataType": "refObject",
        "properties": {
            "data_string": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "native_url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "statement_descriptor": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.AuBecsDebit": {
        "dataType": "refObject",
        "properties": {
            "bsb_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.Bancontact": {
        "dataType": "refObject",
        "properties": {
            "bank_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "bank_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "bic": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "iban_last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "preferred_language": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "statement_descriptor": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.Card": {
        "dataType": "refObject",
        "properties": {
            "address_line1_check": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "address_zip_check": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "brand": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "cvc_check": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "description": {"dataType":"string"},
            "dynamic_last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "exp_month": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}]},
            "exp_year": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}]},
            "fingerprint": {"dataType":"string"},
            "funding": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "iin": {"dataType":"string"},
            "issuer": {"dataType":"string"},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "three_d_secure": {"dataType":"string"},
            "tokenization_method": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.CardPresent": {
        "dataType": "refObject",
        "properties": {
            "application_cryptogram": {"dataType":"string"},
            "application_preferred_name": {"dataType":"string"},
            "authorization_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "authorization_response_code": {"dataType":"string"},
            "brand": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "cvm_type": {"dataType":"string"},
            "data_type": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "dedicated_file_name": {"dataType":"string"},
            "description": {"dataType":"string"},
            "emv_auth_data": {"dataType":"string"},
            "evidence_customer_signature": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "evidence_transaction_certificate": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "exp_month": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}]},
            "exp_year": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}]},
            "fingerprint": {"dataType":"string"},
            "funding": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "iin": {"dataType":"string"},
            "issuer": {"dataType":"string"},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "pos_device_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "pos_entry_mode": {"dataType":"string"},
            "read_method": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "reader": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "terminal_verification_results": {"dataType":"string"},
            "transaction_status_information": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.CodeVerification": {
        "dataType": "refObject",
        "properties": {
            "attempts_remaining": {"dataType":"double","required":true},
            "status": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.Eps": {
        "dataType": "refObject",
        "properties": {
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "statement_descriptor": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.Giropay": {
        "dataType": "refObject",
        "properties": {
            "bank_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "bank_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "bic": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "statement_descriptor": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.Ideal": {
        "dataType": "refObject",
        "properties": {
            "bank": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "bic": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "iban_last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "statement_descriptor": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.Klarna": {
        "dataType": "refObject",
        "properties": {
            "background_image_url": {"dataType":"string"},
            "client_token": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "first_name": {"dataType":"string"},
            "last_name": {"dataType":"string"},
            "locale": {"dataType":"string"},
            "logo_url": {"dataType":"string"},
            "page_title": {"dataType":"string"},
            "pay_later_asset_urls_descriptive": {"dataType":"string"},
            "pay_later_asset_urls_standard": {"dataType":"string"},
            "pay_later_name": {"dataType":"string"},
            "pay_later_redirect_url": {"dataType":"string"},
            "pay_now_asset_urls_descriptive": {"dataType":"string"},
            "pay_now_asset_urls_standard": {"dataType":"string"},
            "pay_now_name": {"dataType":"string"},
            "pay_now_redirect_url": {"dataType":"string"},
            "pay_over_time_asset_urls_descriptive": {"dataType":"string"},
            "pay_over_time_asset_urls_standard": {"dataType":"string"},
            "pay_over_time_name": {"dataType":"string"},
            "pay_over_time_redirect_url": {"dataType":"string"},
            "payment_method_categories": {"dataType":"string"},
            "purchase_country": {"dataType":"string"},
            "purchase_type": {"dataType":"string"},
            "redirect_url": {"dataType":"string"},
            "shipping_delay": {"dataType":"double"},
            "shipping_first_name": {"dataType":"string"},
            "shipping_last_name": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.Multibanco": {
        "dataType": "refObject",
        "properties": {
            "entity": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "refund_account_holder_address_city": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "refund_account_holder_address_country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "refund_account_holder_address_line1": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "refund_account_holder_address_line2": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "refund_account_holder_address_postal_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "refund_account_holder_address_state": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "refund_account_holder_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "refund_iban": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.Owner": {
        "dataType": "refObject",
        "properties": {
            "address": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Address"},{"dataType":"enum","enums":[null]}],"required":true},
            "email": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "phone": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "verified_address": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Address"},{"dataType":"enum","enums":[null]}],"required":true},
            "verified_email": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "verified_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "verified_phone": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.P24": {
        "dataType": "refObject",
        "properties": {
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.Receiver": {
        "dataType": "refObject",
        "properties": {
            "address": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "amount_charged": {"dataType":"double","required":true},
            "amount_received": {"dataType":"double","required":true},
            "amount_returned": {"dataType":"double","required":true},
            "refund_attributes_method": {"dataType":"string","required":true},
            "refund_attributes_status": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.Redirect": {
        "dataType": "refObject",
        "properties": {
            "failure_reason": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "return_url": {"dataType":"string","required":true},
            "status": {"dataType":"string","required":true},
            "url": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.SepaCreditTransfer": {
        "dataType": "refObject",
        "properties": {
            "bank_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "bic": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "iban": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "refund_account_holder_address_city": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "refund_account_holder_address_country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "refund_account_holder_address_line1": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "refund_account_holder_address_line2": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "refund_account_holder_address_postal_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "refund_account_holder_address_state": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "refund_account_holder_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "refund_iban": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.SepaDebit": {
        "dataType": "refObject",
        "properties": {
            "bank_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "branch_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "mandate_reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "mandate_url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.Sofort": {
        "dataType": "refObject",
        "properties": {
            "bank_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "bank_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "bic": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "iban_last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "preferred_language": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "statement_descriptor": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.SourceOrder.Item": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "currency": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "parent": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "quantity": {"dataType":"double"},
            "type": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.SourceOrder.Shipping": {
        "dataType": "refObject",
        "properties": {
            "address": {"ref":"stripe.Stripe.Address"},
            "carrier": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "name": {"dataType":"string"},
            "phone": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "tracking_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.SourceOrder": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "email": {"dataType":"string"},
            "items": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Source.SourceOrder.Item"}},{"dataType":"enum","enums":[null]}],"required":true},
            "shipping": {"ref":"stripe.Stripe.Source.SourceOrder.Shipping"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.ThreeDSecure": {
        "dataType": "refObject",
        "properties": {
            "address_line1_check": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "address_zip_check": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "authenticated": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}]},
            "brand": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "card": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "customer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "cvc_check": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "description": {"dataType":"string"},
            "dynamic_last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "exp_month": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}]},
            "exp_year": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}]},
            "fingerprint": {"dataType":"string"},
            "funding": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "iin": {"dataType":"string"},
            "issuer": {"dataType":"string"},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "three_d_secure": {"dataType":"string"},
            "tokenization_method": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["ach_credit_transfer"]},{"dataType":"enum","enums":["ach_debit"]},{"dataType":"enum","enums":["acss_debit"]},{"dataType":"enum","enums":["alipay"]},{"dataType":"enum","enums":["au_becs_debit"]},{"dataType":"enum","enums":["bancontact"]},{"dataType":"enum","enums":["card"]},{"dataType":"enum","enums":["card_present"]},{"dataType":"enum","enums":["eps"]},{"dataType":"enum","enums":["giropay"]},{"dataType":"enum","enums":["ideal"]},{"dataType":"enum","enums":["klarna"]},{"dataType":"enum","enums":["multibanco"]},{"dataType":"enum","enums":["p24"]},{"dataType":"enum","enums":["sepa_credit_transfer"]},{"dataType":"enum","enums":["sepa_debit"]},{"dataType":"enum","enums":["sofort"]},{"dataType":"enum","enums":["three_d_secure"]},{"dataType":"enum","enums":["wechat"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source.Wechat": {
        "dataType": "refObject",
        "properties": {
            "prepay_id": {"dataType":"string"},
            "qr_code_url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "statement_descriptor": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Source": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["source"],"required":true},
            "ach_credit_transfer": {"ref":"stripe.Stripe.Source.AchCreditTransfer"},
            "ach_debit": {"ref":"stripe.Stripe.Source.AchDebit"},
            "acss_debit": {"ref":"stripe.Stripe.Source.AcssDebit"},
            "alipay": {"ref":"stripe.Stripe.Source.Alipay"},
            "amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "au_becs_debit": {"ref":"stripe.Stripe.Source.AuBecsDebit"},
            "bancontact": {"ref":"stripe.Stripe.Source.Bancontact"},
            "card": {"ref":"stripe.Stripe.Source.Card"},
            "card_present": {"ref":"stripe.Stripe.Source.CardPresent"},
            "client_secret": {"dataType":"string","required":true},
            "code_verification": {"ref":"stripe.Stripe.Source.CodeVerification"},
            "created": {"dataType":"double","required":true},
            "currency": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "customer": {"dataType":"string"},
            "eps": {"ref":"stripe.Stripe.Source.Eps"},
            "flow": {"dataType":"string","required":true},
            "giropay": {"ref":"stripe.Stripe.Source.Giropay"},
            "ideal": {"ref":"stripe.Stripe.Source.Ideal"},
            "klarna": {"ref":"stripe.Stripe.Source.Klarna"},
            "livemode": {"dataType":"boolean","required":true},
            "metadata": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Metadata"},{"dataType":"enum","enums":[null]}],"required":true},
            "multibanco": {"ref":"stripe.Stripe.Source.Multibanco"},
            "owner": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Source.Owner"},{"dataType":"enum","enums":[null]}],"required":true},
            "p24": {"ref":"stripe.Stripe.Source.P24"},
            "receiver": {"ref":"stripe.Stripe.Source.Receiver"},
            "redirect": {"ref":"stripe.Stripe.Source.Redirect"},
            "sepa_credit_transfer": {"ref":"stripe.Stripe.Source.SepaCreditTransfer"},
            "sepa_debit": {"ref":"stripe.Stripe.Source.SepaDebit"},
            "sofort": {"ref":"stripe.Stripe.Source.Sofort"},
            "source_order": {"ref":"stripe.Stripe.Source.SourceOrder"},
            "statement_descriptor": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "status": {"dataType":"string","required":true},
            "three_d_secure": {"ref":"stripe.Stripe.Source.ThreeDSecure"},
            "type": {"ref":"stripe.Stripe.Source.Type","required":true},
            "usage": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "wechat": {"ref":"stripe.Stripe.Source.Wechat"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.CustomerSource": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Account"},{"ref":"stripe.Stripe.BankAccount"},{"ref":"stripe.Stripe.Card"},{"ref":"stripe.Stripe.Source"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Coupon.AppliesTo": {
        "dataType": "refObject",
        "properties": {
            "products": {"dataType":"array","array":{"dataType":"string"},"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Coupon.CurrencyOptions": {
        "dataType": "refObject",
        "properties": {
            "amount_off": {"dataType":"double","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Coupon.Duration": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["forever"]},{"dataType":"enum","enums":["once"]},{"dataType":"enum","enums":["repeating"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Coupon": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["coupon"],"required":true},
            "amount_off": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "applies_to": {"ref":"stripe.Stripe.Coupon.AppliesTo"},
            "created": {"dataType":"double","required":true},
            "currency": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "currency_options": {"dataType":"nestedObjectLiteral","nestedProperties":{},"additionalProperties":{"ref":"stripe.Stripe.Coupon.CurrencyOptions"}},
            "deleted": {"dataType":"void"},
            "duration": {"ref":"stripe.Stripe.Coupon.Duration","required":true},
            "duration_in_months": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "livemode": {"dataType":"boolean","required":true},
            "max_redemptions": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "metadata": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Metadata"},{"dataType":"enum","enums":[null]}],"required":true},
            "name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "percent_off": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "redeem_by": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "times_redeemed": {"dataType":"double","required":true},
            "valid": {"dataType":"boolean","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PromotionCode.Restrictions.CurrencyOptions": {
        "dataType": "refObject",
        "properties": {
            "minimum_amount": {"dataType":"double","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PromotionCode.Restrictions": {
        "dataType": "refObject",
        "properties": {
            "currency_options": {"dataType":"nestedObjectLiteral","nestedProperties":{},"additionalProperties":{"ref":"stripe.Stripe.PromotionCode.Restrictions.CurrencyOptions"}},
            "first_time_transaction": {"dataType":"boolean","required":true},
            "minimum_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "minimum_amount_currency": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PromotionCode": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["promotion_code"],"required":true},
            "active": {"dataType":"boolean","required":true},
            "code": {"dataType":"string","required":true},
            "coupon": {"ref":"stripe.Stripe.Coupon","required":true},
            "created": {"dataType":"double","required":true},
            "customer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Customer"},{"ref":"stripe.Stripe.DeletedCustomer"},{"dataType":"enum","enums":[null]}],"required":true},
            "expires_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "livemode": {"dataType":"boolean","required":true},
            "max_redemptions": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "metadata": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Metadata"},{"dataType":"enum","enums":[null]}],"required":true},
            "restrictions": {"ref":"stripe.Stripe.PromotionCode.Restrictions","required":true},
            "times_redeemed": {"dataType":"double","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Discount": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["discount"],"required":true},
            "checkout_session": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "coupon": {"ref":"stripe.Stripe.Coupon","required":true},
            "customer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Customer"},{"ref":"stripe.Stripe.DeletedCustomer"},{"dataType":"enum","enums":[null]}],"required":true},
            "deleted": {"dataType":"void"},
            "end": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "invoice": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "invoice_item": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "promotion_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PromotionCode"},{"dataType":"enum","enums":[null]}],"required":true},
            "start": {"dataType":"double","required":true},
            "subscription": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "subscription_item": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Customer.InvoiceSettings.CustomField": {
        "dataType": "refObject",
        "properties": {
            "name": {"dataType":"string","required":true},
            "value": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.AcssDebit": {
        "dataType": "refObject",
        "properties": {
            "bank_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "institution_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "transit_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Affirm": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.AfterpayClearpay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Alipay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.AllowRedisplay": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["always"]},{"dataType":"enum","enums":["limited"]},{"dataType":"enum","enums":["unspecified"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.AmazonPay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.AuBecsDebit": {
        "dataType": "refObject",
        "properties": {
            "bsb_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.BacsDebit": {
        "dataType": "refObject",
        "properties": {
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "sort_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Bancontact": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.BillingDetails": {
        "dataType": "refObject",
        "properties": {
            "address": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Address"},{"dataType":"enum","enums":[null]}],"required":true},
            "email": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "phone": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Blik": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Boleto": {
        "dataType": "refObject",
        "properties": {
            "tax_id": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Card.Checks": {
        "dataType": "refObject",
        "properties": {
            "address_line1_check": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "address_postal_code_check": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "cvc_check": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Card.GeneratedFrom.PaymentMethodDetails.CardPresent.Offline": {
        "dataType": "refObject",
        "properties": {
            "stored_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["deferred"]},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Card.GeneratedFrom.PaymentMethodDetails.CardPresent.ReadMethod": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["contact_emv"]},{"dataType":"enum","enums":["contactless_emv"]},{"dataType":"enum","enums":["contactless_magstripe_mode"]},{"dataType":"enum","enums":["magnetic_stripe_fallback"]},{"dataType":"enum","enums":["magnetic_stripe_track2"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Card.GeneratedFrom.PaymentMethodDetails.CardPresent.Receipt.AccountType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["checking"]},{"dataType":"enum","enums":["credit"]},{"dataType":"enum","enums":["prepaid"]},{"dataType":"enum","enums":["unknown"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Card.GeneratedFrom.PaymentMethodDetails.CardPresent.Receipt": {
        "dataType": "refObject",
        "properties": {
            "account_type": {"ref":"stripe.Stripe.PaymentMethod.Card.GeneratedFrom.PaymentMethodDetails.CardPresent.Receipt.AccountType"},
            "application_cryptogram": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "application_preferred_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "authorization_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "authorization_response_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "cardholder_verification_method": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "dedicated_file_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "terminal_verification_results": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "transaction_status_information": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Card.GeneratedFrom.PaymentMethodDetails.CardPresent.Wallet.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["apple_pay"]},{"dataType":"enum","enums":["google_pay"]},{"dataType":"enum","enums":["samsung_pay"]},{"dataType":"enum","enums":["unknown"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Card.GeneratedFrom.PaymentMethodDetails.CardPresent.Wallet": {
        "dataType": "refObject",
        "properties": {
            "type": {"ref":"stripe.Stripe.PaymentMethod.Card.GeneratedFrom.PaymentMethodDetails.CardPresent.Wallet.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Card.GeneratedFrom.PaymentMethodDetails.CardPresent": {
        "dataType": "refObject",
        "properties": {
            "amount_authorized": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "brand": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "brand_product": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "capture_before": {"dataType":"double"},
            "cardholder_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "emv_auth_data": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "exp_month": {"dataType":"double","required":true},
            "exp_year": {"dataType":"double","required":true},
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "funding": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "generated_card": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "iin": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "incremental_authorization_supported": {"dataType":"boolean","required":true},
            "issuer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "network": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "network_transaction_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "offline": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.Card.GeneratedFrom.PaymentMethodDetails.CardPresent.Offline"},{"dataType":"enum","enums":[null]}],"required":true},
            "overcapture_supported": {"dataType":"boolean","required":true},
            "preferred_locales": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
            "read_method": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.Card.GeneratedFrom.PaymentMethodDetails.CardPresent.ReadMethod"},{"dataType":"enum","enums":[null]}],"required":true},
            "receipt": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.Card.GeneratedFrom.PaymentMethodDetails.CardPresent.Receipt"},{"dataType":"enum","enums":[null]}],"required":true},
            "wallet": {"ref":"stripe.Stripe.PaymentMethod.Card.GeneratedFrom.PaymentMethodDetails.CardPresent.Wallet"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Card.GeneratedFrom.PaymentMethodDetails": {
        "dataType": "refObject",
        "properties": {
            "card_present": {"ref":"stripe.Stripe.PaymentMethod.Card.GeneratedFrom.PaymentMethodDetails.CardPresent"},
            "type": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.FlowDirection": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["inbound"]},{"dataType":"enum","enums":["outbound"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["payment_method"],"required":true},
            "acss_debit": {"ref":"stripe.Stripe.PaymentMethod.AcssDebit"},
            "affirm": {"ref":"stripe.Stripe.PaymentMethod.Affirm"},
            "afterpay_clearpay": {"ref":"stripe.Stripe.PaymentMethod.AfterpayClearpay"},
            "alipay": {"ref":"stripe.Stripe.PaymentMethod.Alipay"},
            "allow_redisplay": {"ref":"stripe.Stripe.PaymentMethod.AllowRedisplay"},
            "amazon_pay": {"ref":"stripe.Stripe.PaymentMethod.AmazonPay"},
            "au_becs_debit": {"ref":"stripe.Stripe.PaymentMethod.AuBecsDebit"},
            "bacs_debit": {"ref":"stripe.Stripe.PaymentMethod.BacsDebit"},
            "bancontact": {"ref":"stripe.Stripe.PaymentMethod.Bancontact"},
            "billing_details": {"ref":"stripe.Stripe.PaymentMethod.BillingDetails","required":true},
            "blik": {"ref":"stripe.Stripe.PaymentMethod.Blik"},
            "boleto": {"ref":"stripe.Stripe.PaymentMethod.Boleto"},
            "card": {"ref":"stripe.Stripe.PaymentMethod.Card"},
            "card_present": {"ref":"stripe.Stripe.PaymentMethod.CardPresent"},
            "cashapp": {"ref":"stripe.Stripe.PaymentMethod.Cashapp"},
            "created": {"dataType":"double","required":true},
            "customer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Customer"},{"dataType":"enum","enums":[null]}],"required":true},
            "customer_balance": {"ref":"stripe.Stripe.PaymentMethod.CustomerBalance"},
            "eps": {"ref":"stripe.Stripe.PaymentMethod.Eps"},
            "fpx": {"ref":"stripe.Stripe.PaymentMethod.Fpx"},
            "giropay": {"ref":"stripe.Stripe.PaymentMethod.Giropay"},
            "grabpay": {"ref":"stripe.Stripe.PaymentMethod.Grabpay"},
            "ideal": {"ref":"stripe.Stripe.PaymentMethod.Ideal"},
            "interac_present": {"ref":"stripe.Stripe.PaymentMethod.InteracPresent"},
            "klarna": {"ref":"stripe.Stripe.PaymentMethod.Klarna"},
            "konbini": {"ref":"stripe.Stripe.PaymentMethod.Konbini"},
            "link": {"ref":"stripe.Stripe.PaymentMethod.Link"},
            "livemode": {"dataType":"boolean","required":true},
            "metadata": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Metadata"},{"dataType":"enum","enums":[null]}],"required":true},
            "mobilepay": {"ref":"stripe.Stripe.PaymentMethod.Mobilepay"},
            "multibanco": {"ref":"stripe.Stripe.PaymentMethod.Multibanco"},
            "oxxo": {"ref":"stripe.Stripe.PaymentMethod.Oxxo"},
            "p24": {"ref":"stripe.Stripe.PaymentMethod.P24"},
            "paynow": {"ref":"stripe.Stripe.PaymentMethod.Paynow"},
            "paypal": {"ref":"stripe.Stripe.PaymentMethod.Paypal"},
            "pix": {"ref":"stripe.Stripe.PaymentMethod.Pix"},
            "promptpay": {"ref":"stripe.Stripe.PaymentMethod.Promptpay"},
            "radar_options": {"ref":"stripe.Stripe.PaymentMethod.RadarOptions"},
            "revolut_pay": {"ref":"stripe.Stripe.PaymentMethod.RevolutPay"},
            "sepa_debit": {"ref":"stripe.Stripe.PaymentMethod.SepaDebit"},
            "sofort": {"ref":"stripe.Stripe.PaymentMethod.Sofort"},
            "swish": {"ref":"stripe.Stripe.PaymentMethod.Swish"},
            "twint": {"ref":"stripe.Stripe.PaymentMethod.Twint"},
            "type": {"ref":"stripe.Stripe.PaymentMethod.Type","required":true},
            "us_bank_account": {"ref":"stripe.Stripe.PaymentMethod.UsBankAccount"},
            "wechat_pay": {"ref":"stripe.Stripe.PaymentMethod.WechatPay"},
            "zip": {"ref":"stripe.Stripe.PaymentMethod.Zip"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.AcssDebit": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.AmazonPay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.AuBecsDebit": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.BacsDebit": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate.CustomerAcceptance.Offline": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate.CustomerAcceptance.Online": {
        "dataType": "refObject",
        "properties": {
            "ip_address": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "user_agent": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate.CustomerAcceptance.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["offline"]},{"dataType":"enum","enums":["online"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate.CustomerAcceptance": {
        "dataType": "refObject",
        "properties": {
            "accepted_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "offline": {"ref":"stripe.Stripe.Mandate.CustomerAcceptance.Offline"},
            "online": {"ref":"stripe.Stripe.Mandate.CustomerAcceptance.Online"},
            "type": {"ref":"stripe.Stripe.Mandate.CustomerAcceptance.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate.MultiUse": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate.PaymentMethodDetails.AcssDebit.DefaultFor": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["invoice"]},{"dataType":"enum","enums":["subscription"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate.PaymentMethodDetails.AcssDebit.PaymentSchedule": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["combined"]},{"dataType":"enum","enums":["interval"]},{"dataType":"enum","enums":["sporadic"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate.PaymentMethodDetails.AcssDebit.TransactionType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["business"]},{"dataType":"enum","enums":["personal"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate.PaymentMethodDetails.AcssDebit": {
        "dataType": "refObject",
        "properties": {
            "default_for": {"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.Mandate.PaymentMethodDetails.AcssDebit.DefaultFor"}},
            "interval_description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "payment_schedule": {"ref":"stripe.Stripe.Mandate.PaymentMethodDetails.AcssDebit.PaymentSchedule","required":true},
            "transaction_type": {"ref":"stripe.Stripe.Mandate.PaymentMethodDetails.AcssDebit.TransactionType","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate.PaymentMethodDetails.AmazonPay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate.PaymentMethodDetails.AuBecsDebit": {
        "dataType": "refObject",
        "properties": {
            "url": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate.PaymentMethodDetails.BacsDebit.NetworkStatus": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["accepted"]},{"dataType":"enum","enums":["pending"]},{"dataType":"enum","enums":["refused"]},{"dataType":"enum","enums":["revoked"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate.PaymentMethodDetails.BacsDebit.RevocationReason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["account_closed"]},{"dataType":"enum","enums":["bank_account_restricted"]},{"dataType":"enum","enums":["bank_ownership_changed"]},{"dataType":"enum","enums":["could_not_process"]},{"dataType":"enum","enums":["debit_not_authorized"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate.PaymentMethodDetails.BacsDebit": {
        "dataType": "refObject",
        "properties": {
            "network_status": {"ref":"stripe.Stripe.Mandate.PaymentMethodDetails.BacsDebit.NetworkStatus","required":true},
            "reference": {"dataType":"string","required":true},
            "revocation_reason": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Mandate.PaymentMethodDetails.BacsDebit.RevocationReason"},{"dataType":"enum","enums":[null]}],"required":true},
            "url": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate.PaymentMethodDetails.Card": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate.PaymentMethodDetails.Cashapp": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate.PaymentMethodDetails.Link": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate.PaymentMethodDetails.Paypal": {
        "dataType": "refObject",
        "properties": {
            "billing_agreement_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "payer_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate.PaymentMethodDetails.RevolutPay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate.PaymentMethodDetails.SepaDebit": {
        "dataType": "refObject",
        "properties": {
            "reference": {"dataType":"string","required":true},
            "url": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate.PaymentMethodDetails.UsBankAccount": {
        "dataType": "refObject",
        "properties": {
            "collection_method": {"dataType":"enum","enums":["paper"]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate.PaymentMethodDetails": {
        "dataType": "refObject",
        "properties": {
            "acss_debit": {"ref":"stripe.Stripe.Mandate.PaymentMethodDetails.AcssDebit"},
            "amazon_pay": {"ref":"stripe.Stripe.Mandate.PaymentMethodDetails.AmazonPay"},
            "au_becs_debit": {"ref":"stripe.Stripe.Mandate.PaymentMethodDetails.AuBecsDebit"},
            "bacs_debit": {"ref":"stripe.Stripe.Mandate.PaymentMethodDetails.BacsDebit"},
            "card": {"ref":"stripe.Stripe.Mandate.PaymentMethodDetails.Card"},
            "cashapp": {"ref":"stripe.Stripe.Mandate.PaymentMethodDetails.Cashapp"},
            "link": {"ref":"stripe.Stripe.Mandate.PaymentMethodDetails.Link"},
            "paypal": {"ref":"stripe.Stripe.Mandate.PaymentMethodDetails.Paypal"},
            "revolut_pay": {"ref":"stripe.Stripe.Mandate.PaymentMethodDetails.RevolutPay"},
            "sepa_debit": {"ref":"stripe.Stripe.Mandate.PaymentMethodDetails.SepaDebit"},
            "type": {"dataType":"string","required":true},
            "us_bank_account": {"ref":"stripe.Stripe.Mandate.PaymentMethodDetails.UsBankAccount"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate.SingleUse": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["pending"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["multi_use"]},{"dataType":"enum","enums":["single_use"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Mandate": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["mandate"],"required":true},
            "customer_acceptance": {"ref":"stripe.Stripe.Mandate.CustomerAcceptance","required":true},
            "livemode": {"dataType":"boolean","required":true},
            "multi_use": {"ref":"stripe.Stripe.Mandate.MultiUse"},
            "on_behalf_of": {"dataType":"string"},
            "payment_method": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PaymentMethod"}],"required":true},
            "payment_method_details": {"ref":"stripe.Stripe.Mandate.PaymentMethodDetails","required":true},
            "single_use": {"ref":"stripe.Stripe.Mandate.SingleUse"},
            "status": {"ref":"stripe.Stripe.Mandate.Status","required":true},
            "type": {"ref":"stripe.Stripe.Mandate.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.Bancontact.PreferredLanguage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["de"]},{"dataType":"enum","enums":["en"]},{"dataType":"enum","enums":["fr"]},{"dataType":"enum","enums":["nl"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.Bancontact": {
        "dataType": "refObject",
        "properties": {
            "bank_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "bank_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "bic": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "generated_sepa_debit": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PaymentMethod"},{"dataType":"enum","enums":[null]}],"required":true},
            "generated_sepa_debit_mandate": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Mandate"},{"dataType":"enum","enums":[null]}],"required":true},
            "iban_last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "preferred_language": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.Bancontact.PreferredLanguage"},{"dataType":"enum","enums":[null]}],"required":true},
            "verified_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.Boleto": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.Card.Checks": {
        "dataType": "refObject",
        "properties": {
            "address_line1_check": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "address_postal_code_check": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "cvc_check": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.Card.ThreeDSecure.AuthenticationFlow": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["challenge"]},{"dataType":"enum","enums":["frictionless"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.Card.ThreeDSecure.ElectronicCommerceIndicator": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["01"]},{"dataType":"enum","enums":["02"]},{"dataType":"enum","enums":["05"]},{"dataType":"enum","enums":["06"]},{"dataType":"enum","enums":["07"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.Card.ThreeDSecure.Result": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["attempt_acknowledged"]},{"dataType":"enum","enums":["authenticated"]},{"dataType":"enum","enums":["exempted"]},{"dataType":"enum","enums":["failed"]},{"dataType":"enum","enums":["not_supported"]},{"dataType":"enum","enums":["processing_error"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.Card.ThreeDSecure.ResultReason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["abandoned"]},{"dataType":"enum","enums":["bypassed"]},{"dataType":"enum","enums":["canceled"]},{"dataType":"enum","enums":["card_not_enrolled"]},{"dataType":"enum","enums":["network_not_supported"]},{"dataType":"enum","enums":["protocol_error"]},{"dataType":"enum","enums":["rejected"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.Card.ThreeDSecure.Version": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["1.0.2"]},{"dataType":"enum","enums":["2.1.0"]},{"dataType":"enum","enums":["2.2.0"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.Card.ThreeDSecure": {
        "dataType": "refObject",
        "properties": {
            "authentication_flow": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.Card.ThreeDSecure.AuthenticationFlow"},{"dataType":"enum","enums":[null]}],"required":true},
            "electronic_commerce_indicator": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.Card.ThreeDSecure.ElectronicCommerceIndicator"},{"dataType":"enum","enums":[null]}],"required":true},
            "result": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.Card.ThreeDSecure.Result"},{"dataType":"enum","enums":[null]}],"required":true},
            "result_reason": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.Card.ThreeDSecure.ResultReason"},{"dataType":"enum","enums":[null]}],"required":true},
            "transaction_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "version": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.Card.ThreeDSecure.Version"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.Card.Wallet.ApplePay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.Card.Wallet.GooglePay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.Card.Wallet.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["apple_pay"]},{"dataType":"enum","enums":["google_pay"]},{"dataType":"enum","enums":["link"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.Card.Wallet": {
        "dataType": "refObject",
        "properties": {
            "apple_pay": {"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.Card.Wallet.ApplePay"},
            "google_pay": {"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.Card.Wallet.GooglePay"},
            "type": {"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.Card.Wallet.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.Card": {
        "dataType": "refObject",
        "properties": {
            "brand": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "checks": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.Card.Checks"},{"dataType":"enum","enums":[null]}],"required":true},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "exp_month": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "exp_year": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "funding": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "iin": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "issuer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "network": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "three_d_secure": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.Card.ThreeDSecure"},{"dataType":"enum","enums":[null]}],"required":true},
            "wallet": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.Card.Wallet"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.CardPresent.Offline": {
        "dataType": "refObject",
        "properties": {
            "stored_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["deferred"]},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.CardPresent": {
        "dataType": "refObject",
        "properties": {
            "generated_card": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PaymentMethod"},{"dataType":"enum","enums":[null]}],"required":true},
            "offline": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.CardPresent.Offline"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.Cashapp": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.Ideal.Bank": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["abn_amro"]},{"dataType":"enum","enums":["asn_bank"]},{"dataType":"enum","enums":["bunq"]},{"dataType":"enum","enums":["handelsbanken"]},{"dataType":"enum","enums":["ing"]},{"dataType":"enum","enums":["knab"]},{"dataType":"enum","enums":["moneyou"]},{"dataType":"enum","enums":["n26"]},{"dataType":"enum","enums":["nn"]},{"dataType":"enum","enums":["rabobank"]},{"dataType":"enum","enums":["regiobank"]},{"dataType":"enum","enums":["revolut"]},{"dataType":"enum","enums":["sns_bank"]},{"dataType":"enum","enums":["triodos_bank"]},{"dataType":"enum","enums":["van_lanschot"]},{"dataType":"enum","enums":["yoursafe"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.Ideal.Bic": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["ABNANL2A"]},{"dataType":"enum","enums":["ASNBNL21"]},{"dataType":"enum","enums":["BITSNL2A"]},{"dataType":"enum","enums":["BUNQNL2A"]},{"dataType":"enum","enums":["FVLBNL22"]},{"dataType":"enum","enums":["HANDNL2A"]},{"dataType":"enum","enums":["INGBNL2A"]},{"dataType":"enum","enums":["KNABNL2H"]},{"dataType":"enum","enums":["MOYONL21"]},{"dataType":"enum","enums":["NNBANL2G"]},{"dataType":"enum","enums":["NTSBDEB1"]},{"dataType":"enum","enums":["RABONL2U"]},{"dataType":"enum","enums":["RBRBNL21"]},{"dataType":"enum","enums":["REVOIE23"]},{"dataType":"enum","enums":["REVOLT21"]},{"dataType":"enum","enums":["SNSBNL2A"]},{"dataType":"enum","enums":["TRIONL2U"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.Ideal": {
        "dataType": "refObject",
        "properties": {
            "bank": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.Ideal.Bank"},{"dataType":"enum","enums":[null]}],"required":true},
            "bic": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.Ideal.Bic"},{"dataType":"enum","enums":[null]}],"required":true},
            "generated_sepa_debit": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PaymentMethod"},{"dataType":"enum","enums":[null]}],"required":true},
            "generated_sepa_debit_mandate": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Mandate"},{"dataType":"enum","enums":[null]}],"required":true},
            "iban_last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "verified_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.Klarna": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.Link": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.Paypal": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.RevolutPay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.SepaDebit": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.Sofort.PreferredLanguage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["de"]},{"dataType":"enum","enums":["en"]},{"dataType":"enum","enums":["fr"]},{"dataType":"enum","enums":["nl"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.Sofort": {
        "dataType": "refObject",
        "properties": {
            "bank_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "bank_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "bic": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "generated_sepa_debit": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PaymentMethod"},{"dataType":"enum","enums":[null]}],"required":true},
            "generated_sepa_debit_mandate": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Mandate"},{"dataType":"enum","enums":[null]}],"required":true},
            "iban_last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "preferred_language": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.Sofort.PreferredLanguage"},{"dataType":"enum","enums":[null]}],"required":true},
            "verified_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails.UsBankAccount": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.PaymentMethodDetails": {
        "dataType": "refObject",
        "properties": {
            "acss_debit": {"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.AcssDebit"},
            "amazon_pay": {"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.AmazonPay"},
            "au_becs_debit": {"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.AuBecsDebit"},
            "bacs_debit": {"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.BacsDebit"},
            "bancontact": {"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.Bancontact"},
            "boleto": {"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.Boleto"},
            "card": {"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.Card"},
            "card_present": {"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.CardPresent"},
            "cashapp": {"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.Cashapp"},
            "ideal": {"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.Ideal"},
            "klarna": {"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.Klarna"},
            "link": {"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.Link"},
            "paypal": {"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.Paypal"},
            "revolut_pay": {"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.RevolutPay"},
            "sepa_debit": {"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.SepaDebit"},
            "sofort": {"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.Sofort"},
            "type": {"dataType":"string","required":true},
            "us_bank_account": {"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails.UsBankAccount"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.SetupError.Code": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["account_closed"]},{"dataType":"enum","enums":["account_country_invalid_address"]},{"dataType":"enum","enums":["account_error_country_change_requires_additional_steps"]},{"dataType":"enum","enums":["account_information_mismatch"]},{"dataType":"enum","enums":["account_invalid"]},{"dataType":"enum","enums":["account_number_invalid"]},{"dataType":"enum","enums":["acss_debit_session_incomplete"]},{"dataType":"enum","enums":["alipay_upgrade_required"]},{"dataType":"enum","enums":["amount_too_large"]},{"dataType":"enum","enums":["amount_too_small"]},{"dataType":"enum","enums":["api_key_expired"]},{"dataType":"enum","enums":["application_fees_not_allowed"]},{"dataType":"enum","enums":["authentication_required"]},{"dataType":"enum","enums":["balance_insufficient"]},{"dataType":"enum","enums":["balance_invalid_parameter"]},{"dataType":"enum","enums":["bank_account_bad_routing_numbers"]},{"dataType":"enum","enums":["bank_account_declined"]},{"dataType":"enum","enums":["bank_account_exists"]},{"dataType":"enum","enums":["bank_account_restricted"]},{"dataType":"enum","enums":["bank_account_unusable"]},{"dataType":"enum","enums":["bank_account_unverified"]},{"dataType":"enum","enums":["bank_account_verification_failed"]},{"dataType":"enum","enums":["billing_invalid_mandate"]},{"dataType":"enum","enums":["bitcoin_upgrade_required"]},{"dataType":"enum","enums":["capture_charge_authorization_expired"]},{"dataType":"enum","enums":["capture_unauthorized_payment"]},{"dataType":"enum","enums":["card_decline_rate_limit_exceeded"]},{"dataType":"enum","enums":["card_declined"]},{"dataType":"enum","enums":["cardholder_phone_number_required"]},{"dataType":"enum","enums":["charge_already_captured"]},{"dataType":"enum","enums":["charge_already_refunded"]},{"dataType":"enum","enums":["charge_disputed"]},{"dataType":"enum","enums":["charge_exceeds_source_limit"]},{"dataType":"enum","enums":["charge_exceeds_transaction_limit"]},{"dataType":"enum","enums":["charge_expired_for_capture"]},{"dataType":"enum","enums":["charge_invalid_parameter"]},{"dataType":"enum","enums":["charge_not_refundable"]},{"dataType":"enum","enums":["clearing_code_unsupported"]},{"dataType":"enum","enums":["country_code_invalid"]},{"dataType":"enum","enums":["country_unsupported"]},{"dataType":"enum","enums":["coupon_expired"]},{"dataType":"enum","enums":["customer_max_payment_methods"]},{"dataType":"enum","enums":["customer_max_subscriptions"]},{"dataType":"enum","enums":["customer_tax_location_invalid"]},{"dataType":"enum","enums":["debit_not_authorized"]},{"dataType":"enum","enums":["email_invalid"]},{"dataType":"enum","enums":["expired_card"]},{"dataType":"enum","enums":["financial_connections_account_inactive"]},{"dataType":"enum","enums":["financial_connections_no_successful_transaction_refresh"]},{"dataType":"enum","enums":["forwarding_api_inactive"]},{"dataType":"enum","enums":["forwarding_api_invalid_parameter"]},{"dataType":"enum","enums":["forwarding_api_upstream_connection_error"]},{"dataType":"enum","enums":["forwarding_api_upstream_connection_timeout"]},{"dataType":"enum","enums":["idempotency_key_in_use"]},{"dataType":"enum","enums":["incorrect_address"]},{"dataType":"enum","enums":["incorrect_cvc"]},{"dataType":"enum","enums":["incorrect_number"]},{"dataType":"enum","enums":["incorrect_zip"]},{"dataType":"enum","enums":["instant_payouts_config_disabled"]},{"dataType":"enum","enums":["instant_payouts_currency_disabled"]},{"dataType":"enum","enums":["instant_payouts_limit_exceeded"]},{"dataType":"enum","enums":["instant_payouts_unsupported"]},{"dataType":"enum","enums":["insufficient_funds"]},{"dataType":"enum","enums":["intent_invalid_state"]},{"dataType":"enum","enums":["intent_verification_method_missing"]},{"dataType":"enum","enums":["invalid_card_type"]},{"dataType":"enum","enums":["invalid_characters"]},{"dataType":"enum","enums":["invalid_charge_amount"]},{"dataType":"enum","enums":["invalid_cvc"]},{"dataType":"enum","enums":["invalid_expiry_month"]},{"dataType":"enum","enums":["invalid_expiry_year"]},{"dataType":"enum","enums":["invalid_mandate_reference_prefix_format"]},{"dataType":"enum","enums":["invalid_number"]},{"dataType":"enum","enums":["invalid_source_usage"]},{"dataType":"enum","enums":["invalid_tax_location"]},{"dataType":"enum","enums":["invoice_no_customer_line_items"]},{"dataType":"enum","enums":["invoice_no_payment_method_types"]},{"dataType":"enum","enums":["invoice_no_subscription_line_items"]},{"dataType":"enum","enums":["invoice_not_editable"]},{"dataType":"enum","enums":["invoice_on_behalf_of_not_editable"]},{"dataType":"enum","enums":["invoice_payment_intent_requires_action"]},{"dataType":"enum","enums":["invoice_upcoming_none"]},{"dataType":"enum","enums":["livemode_mismatch"]},{"dataType":"enum","enums":["lock_timeout"]},{"dataType":"enum","enums":["missing"]},{"dataType":"enum","enums":["no_account"]},{"dataType":"enum","enums":["not_allowed_on_standard_account"]},{"dataType":"enum","enums":["out_of_inventory"]},{"dataType":"enum","enums":["ownership_declaration_not_allowed"]},{"dataType":"enum","enums":["parameter_invalid_empty"]},{"dataType":"enum","enums":["parameter_invalid_integer"]},{"dataType":"enum","enums":["parameter_invalid_string_blank"]},{"dataType":"enum","enums":["parameter_invalid_string_empty"]},{"dataType":"enum","enums":["parameter_missing"]},{"dataType":"enum","enums":["parameter_unknown"]},{"dataType":"enum","enums":["parameters_exclusive"]},{"dataType":"enum","enums":["payment_intent_action_required"]},{"dataType":"enum","enums":["payment_intent_authentication_failure"]},{"dataType":"enum","enums":["payment_intent_incompatible_payment_method"]},{"dataType":"enum","enums":["payment_intent_invalid_parameter"]},{"dataType":"enum","enums":["payment_intent_konbini_rejected_confirmation_number"]},{"dataType":"enum","enums":["payment_intent_mandate_invalid"]},{"dataType":"enum","enums":["payment_intent_payment_attempt_expired"]},{"dataType":"enum","enums":["payment_intent_payment_attempt_failed"]},{"dataType":"enum","enums":["payment_intent_unexpected_state"]},{"dataType":"enum","enums":["payment_method_bank_account_already_verified"]},{"dataType":"enum","enums":["payment_method_bank_account_blocked"]},{"dataType":"enum","enums":["payment_method_billing_details_address_missing"]},{"dataType":"enum","enums":["payment_method_configuration_failures"]},{"dataType":"enum","enums":["payment_method_currency_mismatch"]},{"dataType":"enum","enums":["payment_method_customer_decline"]},{"dataType":"enum","enums":["payment_method_invalid_parameter"]},{"dataType":"enum","enums":["payment_method_invalid_parameter_testmode"]},{"dataType":"enum","enums":["payment_method_microdeposit_failed"]},{"dataType":"enum","enums":["payment_method_microdeposit_verification_amounts_invalid"]},{"dataType":"enum","enums":["payment_method_microdeposit_verification_amounts_mismatch"]},{"dataType":"enum","enums":["payment_method_microdeposit_verification_attempts_exceeded"]},{"dataType":"enum","enums":["payment_method_microdeposit_verification_descriptor_code_mismatch"]},{"dataType":"enum","enums":["payment_method_microdeposit_verification_timeout"]},{"dataType":"enum","enums":["payment_method_not_available"]},{"dataType":"enum","enums":["payment_method_provider_decline"]},{"dataType":"enum","enums":["payment_method_provider_timeout"]},{"dataType":"enum","enums":["payment_method_unactivated"]},{"dataType":"enum","enums":["payment_method_unexpected_state"]},{"dataType":"enum","enums":["payment_method_unsupported_type"]},{"dataType":"enum","enums":["payout_reconciliation_not_ready"]},{"dataType":"enum","enums":["payouts_limit_exceeded"]},{"dataType":"enum","enums":["payouts_not_allowed"]},{"dataType":"enum","enums":["platform_account_required"]},{"dataType":"enum","enums":["platform_api_key_expired"]},{"dataType":"enum","enums":["postal_code_invalid"]},{"dataType":"enum","enums":["processing_error"]},{"dataType":"enum","enums":["product_inactive"]},{"dataType":"enum","enums":["progressive_onboarding_limit_exceeded"]},{"dataType":"enum","enums":["rate_limit"]},{"dataType":"enum","enums":["refer_to_customer"]},{"dataType":"enum","enums":["refund_disputed_payment"]},{"dataType":"enum","enums":["resource_already_exists"]},{"dataType":"enum","enums":["resource_missing"]},{"dataType":"enum","enums":["return_intent_already_processed"]},{"dataType":"enum","enums":["routing_number_invalid"]},{"dataType":"enum","enums":["secret_key_required"]},{"dataType":"enum","enums":["sepa_unsupported_account"]},{"dataType":"enum","enums":["setup_attempt_failed"]},{"dataType":"enum","enums":["setup_intent_authentication_failure"]},{"dataType":"enum","enums":["setup_intent_invalid_parameter"]},{"dataType":"enum","enums":["setup_intent_mandate_invalid"]},{"dataType":"enum","enums":["setup_intent_setup_attempt_expired"]},{"dataType":"enum","enums":["setup_intent_unexpected_state"]},{"dataType":"enum","enums":["shipping_address_invalid"]},{"dataType":"enum","enums":["shipping_calculation_failed"]},{"dataType":"enum","enums":["sku_inactive"]},{"dataType":"enum","enums":["state_unsupported"]},{"dataType":"enum","enums":["status_transition_invalid"]},{"dataType":"enum","enums":["stripe_tax_inactive"]},{"dataType":"enum","enums":["tax_id_invalid"]},{"dataType":"enum","enums":["taxes_calculation_failed"]},{"dataType":"enum","enums":["terminal_location_country_unsupported"]},{"dataType":"enum","enums":["terminal_reader_busy"]},{"dataType":"enum","enums":["terminal_reader_hardware_fault"]},{"dataType":"enum","enums":["terminal_reader_invalid_location_for_activation"]},{"dataType":"enum","enums":["terminal_reader_invalid_location_for_payment"]},{"dataType":"enum","enums":["terminal_reader_offline"]},{"dataType":"enum","enums":["terminal_reader_timeout"]},{"dataType":"enum","enums":["testmode_charges_only"]},{"dataType":"enum","enums":["tls_version_unsupported"]},{"dataType":"enum","enums":["token_already_used"]},{"dataType":"enum","enums":["token_card_network_invalid"]},{"dataType":"enum","enums":["token_in_use"]},{"dataType":"enum","enums":["transfer_source_balance_parameters_mismatch"]},{"dataType":"enum","enums":["transfers_not_allowed"]},{"dataType":"enum","enums":["url_invalid"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.AmountDetails.Tip": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.AmountDetails": {
        "dataType": "refObject",
        "properties": {
            "tip": {"ref":"stripe.Stripe.PaymentIntent.AmountDetails.Tip"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.AutomaticPaymentMethods.AllowRedirects": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["always"]},{"dataType":"enum","enums":["never"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.AutomaticPaymentMethods": {
        "dataType": "refObject",
        "properties": {
            "allow_redirects": {"ref":"stripe.Stripe.PaymentIntent.AutomaticPaymentMethods.AllowRedirects"},
            "enabled": {"dataType":"boolean","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.CancellationReason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["abandoned"]},{"dataType":"enum","enums":["automatic"]},{"dataType":"enum","enums":["duplicate"]},{"dataType":"enum","enums":["failed_invoice"]},{"dataType":"enum","enums":["fraudulent"]},{"dataType":"enum","enums":["requested_by_customer"]},{"dataType":"enum","enums":["void_invoice"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.CaptureMethod": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["automatic"]},{"dataType":"enum","enums":["automatic_async"]},{"dataType":"enum","enums":["manual"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.ConfirmationMethod": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["automatic"]},{"dataType":"enum","enums":["manual"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.TaxId.Owner.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["account"]},{"dataType":"enum","enums":["application"]},{"dataType":"enum","enums":["customer"]},{"dataType":"enum","enums":["self"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.TaxId.Owner": {
        "dataType": "refObject",
        "properties": {
            "account": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"}]},
            "application": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Application"}]},
            "customer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Customer"}]},
            "type": {"ref":"stripe.Stripe.TaxId.Owner.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.TaxId.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["ad_nrt"]},{"dataType":"enum","enums":["ae_trn"]},{"dataType":"enum","enums":["ar_cuit"]},{"dataType":"enum","enums":["au_abn"]},{"dataType":"enum","enums":["au_arn"]},{"dataType":"enum","enums":["bg_uic"]},{"dataType":"enum","enums":["bh_vat"]},{"dataType":"enum","enums":["bo_tin"]},{"dataType":"enum","enums":["br_cnpj"]},{"dataType":"enum","enums":["br_cpf"]},{"dataType":"enum","enums":["ca_bn"]},{"dataType":"enum","enums":["ca_gst_hst"]},{"dataType":"enum","enums":["ca_pst_bc"]},{"dataType":"enum","enums":["ca_pst_mb"]},{"dataType":"enum","enums":["ca_pst_sk"]},{"dataType":"enum","enums":["ca_qst"]},{"dataType":"enum","enums":["ch_uid"]},{"dataType":"enum","enums":["ch_vat"]},{"dataType":"enum","enums":["cl_tin"]},{"dataType":"enum","enums":["cn_tin"]},{"dataType":"enum","enums":["co_nit"]},{"dataType":"enum","enums":["cr_tin"]},{"dataType":"enum","enums":["de_stn"]},{"dataType":"enum","enums":["do_rcn"]},{"dataType":"enum","enums":["ec_ruc"]},{"dataType":"enum","enums":["eg_tin"]},{"dataType":"enum","enums":["es_cif"]},{"dataType":"enum","enums":["eu_oss_vat"]},{"dataType":"enum","enums":["eu_vat"]},{"dataType":"enum","enums":["gb_vat"]},{"dataType":"enum","enums":["ge_vat"]},{"dataType":"enum","enums":["hk_br"]},{"dataType":"enum","enums":["hr_oib"]},{"dataType":"enum","enums":["hu_tin"]},{"dataType":"enum","enums":["id_npwp"]},{"dataType":"enum","enums":["il_vat"]},{"dataType":"enum","enums":["in_gst"]},{"dataType":"enum","enums":["is_vat"]},{"dataType":"enum","enums":["jp_cn"]},{"dataType":"enum","enums":["jp_rn"]},{"dataType":"enum","enums":["jp_trn"]},{"dataType":"enum","enums":["ke_pin"]},{"dataType":"enum","enums":["kr_brn"]},{"dataType":"enum","enums":["kz_bin"]},{"dataType":"enum","enums":["li_uid"]},{"dataType":"enum","enums":["mx_rfc"]},{"dataType":"enum","enums":["my_frp"]},{"dataType":"enum","enums":["my_itn"]},{"dataType":"enum","enums":["my_sst"]},{"dataType":"enum","enums":["ng_tin"]},{"dataType":"enum","enums":["no_vat"]},{"dataType":"enum","enums":["no_voec"]},{"dataType":"enum","enums":["nz_gst"]},{"dataType":"enum","enums":["om_vat"]},{"dataType":"enum","enums":["pe_ruc"]},{"dataType":"enum","enums":["ph_tin"]},{"dataType":"enum","enums":["ro_tin"]},{"dataType":"enum","enums":["rs_pib"]},{"dataType":"enum","enums":["ru_inn"]},{"dataType":"enum","enums":["ru_kpp"]},{"dataType":"enum","enums":["sa_vat"]},{"dataType":"enum","enums":["sg_gst"]},{"dataType":"enum","enums":["sg_uen"]},{"dataType":"enum","enums":["si_tin"]},{"dataType":"enum","enums":["sv_nit"]},{"dataType":"enum","enums":["th_vat"]},{"dataType":"enum","enums":["tr_tin"]},{"dataType":"enum","enums":["tw_vat"]},{"dataType":"enum","enums":["ua_vat"]},{"dataType":"enum","enums":["unknown"]},{"dataType":"enum","enums":["us_ein"]},{"dataType":"enum","enums":["uy_ruc"]},{"dataType":"enum","enums":["ve_rif"]},{"dataType":"enum","enums":["vn_tin"]},{"dataType":"enum","enums":["za_vat"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.TaxId.Verification.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["pending"]},{"dataType":"enum","enums":["unavailable"]},{"dataType":"enum","enums":["unverified"]},{"dataType":"enum","enums":["verified"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.TaxId.Verification": {
        "dataType": "refObject",
        "properties": {
            "status": {"ref":"stripe.Stripe.TaxId.Verification.Status","required":true},
            "verified_address": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "verified_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.TaxId": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["tax_id"],"required":true},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "created": {"dataType":"double","required":true},
            "customer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Customer"},{"dataType":"enum","enums":[null]}],"required":true},
            "deleted": {"dataType":"void"},
            "livemode": {"dataType":"boolean","required":true},
            "owner": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.TaxId.Owner"},{"dataType":"enum","enums":[null]}],"required":true},
            "type": {"ref":"stripe.Stripe.TaxId.Type","required":true},
            "value": {"dataType":"string","required":true},
            "verification": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.TaxId.Verification"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.DeletedTaxId": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["tax_id"],"required":true},
            "deleted": {"dataType":"enum","enums":[true],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.AutomaticTax.Liability.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["account"]},{"dataType":"enum","enums":["self"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.AutomaticTax.Liability": {
        "dataType": "refObject",
        "properties": {
            "account": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"}]},
            "type": {"ref":"stripe.Stripe.Invoice.AutomaticTax.Liability.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.AutomaticTax.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["complete"]},{"dataType":"enum","enums":["failed"]},{"dataType":"enum","enums":["requires_location_inputs"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.AutomaticTax": {
        "dataType": "refObject",
        "properties": {
            "enabled": {"dataType":"boolean","required":true},
            "liability": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.AutomaticTax.Liability"},{"dataType":"enum","enums":[null]}],"required":true},
            "status": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.AutomaticTax.Status"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.BillingReason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["automatic_pending_invoice_item_invoice"]},{"dataType":"enum","enums":["manual"]},{"dataType":"enum","enums":["quote_accept"]},{"dataType":"enum","enums":["subscription"]},{"dataType":"enum","enums":["subscription_create"]},{"dataType":"enum","enums":["subscription_cycle"]},{"dataType":"enum","enums":["subscription_threshold"]},{"dataType":"enum","enums":["subscription_update"]},{"dataType":"enum","enums":["upcoming"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.BalanceTransaction.FeeDetail": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double","required":true},
            "application": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "currency": {"dataType":"string","required":true},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "type": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ApplicationFee": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["application_fee"],"required":true},
            "account": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"}],"required":true},
            "amount": {"dataType":"double","required":true},
            "amount_refunded": {"dataType":"double","required":true},
            "application": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Application"}],"required":true},
            "balance_transaction": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.BalanceTransaction"},{"dataType":"enum","enums":[null]}],"required":true},
            "charge": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Charge"}],"required":true},
            "created": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "fee_source": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.ApplicationFee.FeeSource"},{"dataType":"enum","enums":[null]}],"required":true},
            "livemode": {"dataType":"boolean","required":true},
            "originating_transaction": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Charge"},{"dataType":"enum","enums":[null]}],"required":true},
            "refunded": {"dataType":"boolean","required":true},
            "refunds": {"ref":"stripe.Stripe.ApiList_stripe.Stripe.FeeRefund_","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["charge"],"required":true},
            "amount": {"dataType":"double","required":true},
            "amount_captured": {"dataType":"double","required":true},
            "amount_refunded": {"dataType":"double","required":true},
            "application": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Application"},{"dataType":"enum","enums":[null]}],"required":true},
            "application_fee": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.ApplicationFee"},{"dataType":"enum","enums":[null]}],"required":true},
            "application_fee_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "authorization_code": {"dataType":"string"},
            "balance_transaction": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.BalanceTransaction"},{"dataType":"enum","enums":[null]}],"required":true},
            "billing_details": {"ref":"stripe.Stripe.Charge.BillingDetails","required":true},
            "calculated_statement_descriptor": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "captured": {"dataType":"boolean","required":true},
            "created": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "customer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Customer"},{"ref":"stripe.Stripe.DeletedCustomer"},{"dataType":"enum","enums":[null]}],"required":true},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "disputed": {"dataType":"boolean","required":true},
            "failure_balance_transaction": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.BalanceTransaction"},{"dataType":"enum","enums":[null]}],"required":true},
            "failure_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "failure_message": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "fraud_details": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.FraudDetails"},{"dataType":"enum","enums":[null]}],"required":true},
            "invoice": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Invoice"},{"dataType":"enum","enums":[null]}],"required":true},
            "level3": {"ref":"stripe.Stripe.Charge.Level3"},
            "livemode": {"dataType":"boolean","required":true},
            "metadata": {"ref":"stripe.Stripe.Metadata","required":true},
            "on_behalf_of": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"},{"dataType":"enum","enums":[null]}],"required":true},
            "outcome": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.Outcome"},{"dataType":"enum","enums":[null]}],"required":true},
            "paid": {"dataType":"boolean","required":true},
            "payment_intent": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PaymentIntent"},{"dataType":"enum","enums":[null]}],"required":true},
            "payment_method": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "payment_method_details": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails"},{"dataType":"enum","enums":[null]}],"required":true},
            "radar_options": {"ref":"stripe.Stripe.Charge.RadarOptions"},
            "receipt_email": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "receipt_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "receipt_url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "refunded": {"dataType":"boolean","required":true},
            "refunds": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.ApiList_stripe.Stripe.Refund_"},{"dataType":"enum","enums":[null]}]},
            "review": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Review"},{"dataType":"enum","enums":[null]}],"required":true},
            "shipping": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.Shipping"},{"dataType":"enum","enums":[null]}],"required":true},
            "source": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.CustomerSource"},{"dataType":"enum","enums":[null]}],"required":true},
            "source_transfer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Transfer"},{"dataType":"enum","enums":[null]}],"required":true},
            "statement_descriptor": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "statement_descriptor_suffix": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "status": {"ref":"stripe.Stripe.Charge.Status","required":true},
            "transfer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Transfer"}]},
            "transfer_data": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.TransferData"},{"dataType":"enum","enums":[null]}],"required":true},
            "transfer_group": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ConnectCollectionTransfer": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["connect_collection_transfer"],"required":true},
            "amount": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "destination": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"}],"required":true},
            "livemode": {"dataType":"boolean","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.BalanceTransaction": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["balance_transaction"],"required":true},
            "amount": {"dataType":"double","required":true},
            "available_on": {"dataType":"double","required":true},
            "created": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "exchange_rate": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "fee": {"dataType":"double","required":true},
            "fee_details": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.BalanceTransaction.FeeDetail"},"required":true},
            "net": {"dataType":"double","required":true},
            "reporting_category": {"dataType":"string","required":true},
            "source": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.BalanceTransactionSource"},{"dataType":"enum","enums":[null]}],"required":true},
            "status": {"dataType":"string","required":true},
            "type": {"ref":"stripe.Stripe.BalanceTransaction.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.CustomerCashBalanceTransaction": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["customer_cash_balance_transaction"],"required":true},
            "adjusted_for_overdraft": {"ref":"stripe.Stripe.CustomerCashBalanceTransaction.AdjustedForOverdraft"},
            "applied_to_payment": {"ref":"stripe.Stripe.CustomerCashBalanceTransaction.AppliedToPayment"},
            "created": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "customer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Customer"}],"required":true},
            "ending_balance": {"dataType":"double","required":true},
            "funded": {"ref":"stripe.Stripe.CustomerCashBalanceTransaction.Funded"},
            "livemode": {"dataType":"boolean","required":true},
            "net_amount": {"dataType":"double","required":true},
            "refunded_from_payment": {"ref":"stripe.Stripe.CustomerCashBalanceTransaction.RefundedFromPayment"},
            "transferred_to_balance": {"ref":"stripe.Stripe.CustomerCashBalanceTransaction.TransferredToBalance"},
            "type": {"ref":"stripe.Stripe.CustomerCashBalanceTransaction.Type","required":true},
            "unapplied_from_payment": {"ref":"stripe.Stripe.CustomerCashBalanceTransaction.UnappliedFromPayment"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.CustomerCashBalanceTransaction.AdjustedForOverdraft": {
        "dataType": "refObject",
        "properties": {
            "balance_transaction": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.BalanceTransaction"}],"required":true},
            "linked_transaction": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.CustomerCashBalanceTransaction"}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["payment_intent"],"required":true},
            "amount": {"dataType":"double","required":true},
            "amount_capturable": {"dataType":"double","required":true},
            "amount_details": {"ref":"stripe.Stripe.PaymentIntent.AmountDetails"},
            "amount_received": {"dataType":"double","required":true},
            "application": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Application"},{"dataType":"enum","enums":[null]}],"required":true},
            "application_fee_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "automatic_payment_methods": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.AutomaticPaymentMethods"},{"dataType":"enum","enums":[null]}],"required":true},
            "canceled_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "cancellation_reason": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.CancellationReason"},{"dataType":"enum","enums":[null]}],"required":true},
            "capture_method": {"ref":"stripe.Stripe.PaymentIntent.CaptureMethod","required":true},
            "client_secret": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "confirmation_method": {"ref":"stripe.Stripe.PaymentIntent.ConfirmationMethod","required":true},
            "created": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "customer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Customer"},{"ref":"stripe.Stripe.DeletedCustomer"},{"dataType":"enum","enums":[null]}],"required":true},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "invoice": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Invoice"},{"dataType":"enum","enums":[null]}],"required":true},
            "last_payment_error": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.LastPaymentError"},{"dataType":"enum","enums":[null]}],"required":true},
            "latest_charge": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Charge"},{"dataType":"enum","enums":[null]}],"required":true},
            "livemode": {"dataType":"boolean","required":true},
            "metadata": {"ref":"stripe.Stripe.Metadata","required":true},
            "next_action": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.NextAction"},{"dataType":"enum","enums":[null]}],"required":true},
            "on_behalf_of": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"},{"dataType":"enum","enums":[null]}],"required":true},
            "payment_method": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PaymentMethod"},{"dataType":"enum","enums":[null]}],"required":true},
            "payment_method_configuration_details": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.PaymentMethodConfigurationDetails"},{"dataType":"enum","enums":[null]}],"required":true},
            "payment_method_options": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions"},{"dataType":"enum","enums":[null]}],"required":true},
            "payment_method_types": {"dataType":"array","array":{"dataType":"string"},"required":true},
            "processing": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.Processing"},{"dataType":"enum","enums":[null]}],"required":true},
            "receipt_email": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "review": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Review"},{"dataType":"enum","enums":[null]}],"required":true},
            "setup_future_usage": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.SetupFutureUsage"},{"dataType":"enum","enums":[null]}],"required":true},
            "shipping": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.Shipping"},{"dataType":"enum","enums":[null]}],"required":true},
            "source": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.CustomerSource"},{"ref":"stripe.Stripe.DeletedCustomerSource"},{"dataType":"enum","enums":[null]}],"required":true},
            "statement_descriptor": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "statement_descriptor_suffix": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "status": {"ref":"stripe.Stripe.PaymentIntent.Status","required":true},
            "transfer_data": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.TransferData"},{"dataType":"enum","enums":[null]}],"required":true},
            "transfer_group": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.CustomerCashBalanceTransaction.AppliedToPayment": {
        "dataType": "refObject",
        "properties": {
            "payment_intent": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PaymentIntent"}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.CustomerCashBalanceTransaction.Funded.BankTransfer.EuBankTransfer": {
        "dataType": "refObject",
        "properties": {
            "bic": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "iban_last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "sender_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.CustomerCashBalanceTransaction.Funded.BankTransfer.GbBankTransfer": {
        "dataType": "refObject",
        "properties": {
            "account_number_last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "sender_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "sort_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.CustomerCashBalanceTransaction.Funded.BankTransfer.JpBankTransfer": {
        "dataType": "refObject",
        "properties": {
            "sender_bank": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "sender_branch": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "sender_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.CustomerCashBalanceTransaction.Funded.BankTransfer.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["eu_bank_transfer"]},{"dataType":"enum","enums":["gb_bank_transfer"]},{"dataType":"enum","enums":["jp_bank_transfer"]},{"dataType":"enum","enums":["mx_bank_transfer"]},{"dataType":"enum","enums":["us_bank_transfer"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.CustomerCashBalanceTransaction.Funded.BankTransfer.UsBankTransfer.Network": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["ach"]},{"dataType":"enum","enums":["domestic_wire_us"]},{"dataType":"enum","enums":["swift"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.CustomerCashBalanceTransaction.Funded.BankTransfer.UsBankTransfer": {
        "dataType": "refObject",
        "properties": {
            "network": {"ref":"stripe.Stripe.CustomerCashBalanceTransaction.Funded.BankTransfer.UsBankTransfer.Network"},
            "sender_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.CustomerCashBalanceTransaction.Funded.BankTransfer": {
        "dataType": "refObject",
        "properties": {
            "eu_bank_transfer": {"ref":"stripe.Stripe.CustomerCashBalanceTransaction.Funded.BankTransfer.EuBankTransfer"},
            "gb_bank_transfer": {"ref":"stripe.Stripe.CustomerCashBalanceTransaction.Funded.BankTransfer.GbBankTransfer"},
            "jp_bank_transfer": {"ref":"stripe.Stripe.CustomerCashBalanceTransaction.Funded.BankTransfer.JpBankTransfer"},
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "type": {"ref":"stripe.Stripe.CustomerCashBalanceTransaction.Funded.BankTransfer.Type","required":true},
            "us_bank_transfer": {"ref":"stripe.Stripe.CustomerCashBalanceTransaction.Funded.BankTransfer.UsBankTransfer"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.CustomerCashBalanceTransaction.Funded": {
        "dataType": "refObject",
        "properties": {
            "bank_transfer": {"ref":"stripe.Stripe.CustomerCashBalanceTransaction.Funded.BankTransfer","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.Affirm": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.AfterpayClearpay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.Alipay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.AmazonPay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.AuBankTransfer": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.Blik": {
        "dataType": "refObject",
        "properties": {
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "reference_status": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.BrBankTransfer": {
        "dataType": "refObject",
        "properties": {
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "reference_status": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.Card.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["pending"]},{"dataType":"enum","enums":["refund"]},{"dataType":"enum","enums":["reversal"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.Card": {
        "dataType": "refObject",
        "properties": {
            "reference": {"dataType":"string"},
            "reference_status": {"dataType":"string"},
            "reference_type": {"dataType":"string"},
            "type": {"ref":"stripe.Stripe.Refund.DestinationDetails.Card.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.Cashapp": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.CustomerCashBalance": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.Eps": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.EuBankTransfer": {
        "dataType": "refObject",
        "properties": {
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "reference_status": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.GbBankTransfer": {
        "dataType": "refObject",
        "properties": {
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "reference_status": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.Giropay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.Grabpay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.JpBankTransfer": {
        "dataType": "refObject",
        "properties": {
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "reference_status": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.Klarna": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.Multibanco": {
        "dataType": "refObject",
        "properties": {
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "reference_status": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.MxBankTransfer": {
        "dataType": "refObject",
        "properties": {
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "reference_status": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.P24": {
        "dataType": "refObject",
        "properties": {
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "reference_status": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.Paynow": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.Paypal": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.Pix": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.Revolut": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.Sofort": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.Swish": {
        "dataType": "refObject",
        "properties": {
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "reference_status": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.ThBankTransfer": {
        "dataType": "refObject",
        "properties": {
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "reference_status": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.UsBankTransfer": {
        "dataType": "refObject",
        "properties": {
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "reference_status": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.WechatPay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails.Zip": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.DestinationDetails": {
        "dataType": "refObject",
        "properties": {
            "affirm": {"ref":"stripe.Stripe.Refund.DestinationDetails.Affirm"},
            "afterpay_clearpay": {"ref":"stripe.Stripe.Refund.DestinationDetails.AfterpayClearpay"},
            "alipay": {"ref":"stripe.Stripe.Refund.DestinationDetails.Alipay"},
            "amazon_pay": {"ref":"stripe.Stripe.Refund.DestinationDetails.AmazonPay"},
            "au_bank_transfer": {"ref":"stripe.Stripe.Refund.DestinationDetails.AuBankTransfer"},
            "blik": {"ref":"stripe.Stripe.Refund.DestinationDetails.Blik"},
            "br_bank_transfer": {"ref":"stripe.Stripe.Refund.DestinationDetails.BrBankTransfer"},
            "card": {"ref":"stripe.Stripe.Refund.DestinationDetails.Card"},
            "cashapp": {"ref":"stripe.Stripe.Refund.DestinationDetails.Cashapp"},
            "customer_cash_balance": {"ref":"stripe.Stripe.Refund.DestinationDetails.CustomerCashBalance"},
            "eps": {"ref":"stripe.Stripe.Refund.DestinationDetails.Eps"},
            "eu_bank_transfer": {"ref":"stripe.Stripe.Refund.DestinationDetails.EuBankTransfer"},
            "gb_bank_transfer": {"ref":"stripe.Stripe.Refund.DestinationDetails.GbBankTransfer"},
            "giropay": {"ref":"stripe.Stripe.Refund.DestinationDetails.Giropay"},
            "grabpay": {"ref":"stripe.Stripe.Refund.DestinationDetails.Grabpay"},
            "jp_bank_transfer": {"ref":"stripe.Stripe.Refund.DestinationDetails.JpBankTransfer"},
            "klarna": {"ref":"stripe.Stripe.Refund.DestinationDetails.Klarna"},
            "multibanco": {"ref":"stripe.Stripe.Refund.DestinationDetails.Multibanco"},
            "mx_bank_transfer": {"ref":"stripe.Stripe.Refund.DestinationDetails.MxBankTransfer"},
            "p24": {"ref":"stripe.Stripe.Refund.DestinationDetails.P24"},
            "paynow": {"ref":"stripe.Stripe.Refund.DestinationDetails.Paynow"},
            "paypal": {"ref":"stripe.Stripe.Refund.DestinationDetails.Paypal"},
            "pix": {"ref":"stripe.Stripe.Refund.DestinationDetails.Pix"},
            "revolut": {"ref":"stripe.Stripe.Refund.DestinationDetails.Revolut"},
            "sofort": {"ref":"stripe.Stripe.Refund.DestinationDetails.Sofort"},
            "swish": {"ref":"stripe.Stripe.Refund.DestinationDetails.Swish"},
            "th_bank_transfer": {"ref":"stripe.Stripe.Refund.DestinationDetails.ThBankTransfer"},
            "type": {"dataType":"string","required":true},
            "us_bank_transfer": {"ref":"stripe.Stripe.Refund.DestinationDetails.UsBankTransfer"},
            "wechat_pay": {"ref":"stripe.Stripe.Refund.DestinationDetails.WechatPay"},
            "zip": {"ref":"stripe.Stripe.Refund.DestinationDetails.Zip"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.NextAction.DisplayDetails.EmailSent": {
        "dataType": "refObject",
        "properties": {
            "email_sent_at": {"dataType":"double","required":true},
            "email_sent_to": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.NextAction.DisplayDetails": {
        "dataType": "refObject",
        "properties": {
            "email_sent": {"ref":"stripe.Stripe.Refund.NextAction.DisplayDetails.EmailSent","required":true},
            "expires_at": {"dataType":"double","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.NextAction": {
        "dataType": "refObject",
        "properties": {
            "display_details": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Refund.NextAction.DisplayDetails"},{"dataType":"enum","enums":[null]}],"required":true},
            "type": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund.Reason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["duplicate"]},{"dataType":"enum","enums":["expired_uncaptured_charge"]},{"dataType":"enum","enums":["fraudulent"]},{"dataType":"enum","enums":["requested_by_customer"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Refund": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["refund"],"required":true},
            "amount": {"dataType":"double","required":true},
            "balance_transaction": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.BalanceTransaction"},{"dataType":"enum","enums":[null]}],"required":true},
            "charge": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Charge"},{"dataType":"enum","enums":[null]}],"required":true},
            "created": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "description": {"dataType":"string"},
            "destination_details": {"ref":"stripe.Stripe.Refund.DestinationDetails"},
            "failure_balance_transaction": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.BalanceTransaction"}]},
            "failure_reason": {"dataType":"string"},
            "instructions_email": {"dataType":"string"},
            "metadata": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Metadata"},{"dataType":"enum","enums":[null]}],"required":true},
            "next_action": {"ref":"stripe.Stripe.Refund.NextAction"},
            "payment_intent": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PaymentIntent"},{"dataType":"enum","enums":[null]}],"required":true},
            "reason": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Refund.Reason"},{"dataType":"enum","enums":[null]}],"required":true},
            "receipt_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "source_transfer_reversal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.TransferReversal"},{"dataType":"enum","enums":[null]}],"required":true},
            "status": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "transfer_reversal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.TransferReversal"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.TransferReversal": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["transfer_reversal"],"required":true},
            "amount": {"dataType":"double","required":true},
            "balance_transaction": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.BalanceTransaction"},{"dataType":"enum","enums":[null]}],"required":true},
            "created": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "destination_payment_refund": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Refund"},{"dataType":"enum","enums":[null]}],"required":true},
            "metadata": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Metadata"},{"dataType":"enum","enums":[null]}],"required":true},
            "source_refund": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Refund"},{"dataType":"enum","enums":[null]}],"required":true},
            "transfer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Transfer"}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ApiList_stripe.Stripe.TransferReversal_": {
        "dataType": "refObject",
        "properties": {
            "object": {"dataType":"enum","enums":["list"],"required":true},
            "data": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.TransferReversal"},"required":true},
            "has_more": {"dataType":"boolean","required":true},
            "url": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Transfer": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["transfer"],"required":true},
            "amount": {"dataType":"double","required":true},
            "amount_reversed": {"dataType":"double","required":true},
            "balance_transaction": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.BalanceTransaction"},{"dataType":"enum","enums":[null]}],"required":true},
            "created": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "destination": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"},{"dataType":"enum","enums":[null]}],"required":true},
            "destination_payment": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Charge"}]},
            "livemode": {"dataType":"boolean","required":true},
            "metadata": {"ref":"stripe.Stripe.Metadata","required":true},
            "reversals": {"ref":"stripe.Stripe.ApiList_stripe.Stripe.TransferReversal_","required":true},
            "reversed": {"dataType":"boolean","required":true},
            "source_transaction": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Charge"},{"dataType":"enum","enums":[null]}],"required":true},
            "source_type": {"dataType":"string"},
            "transfer_group": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.CustomerCashBalanceTransaction.RefundedFromPayment": {
        "dataType": "refObject",
        "properties": {
            "refund": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Refund"}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.CustomerCashBalanceTransaction.TransferredToBalance": {
        "dataType": "refObject",
        "properties": {
            "balance_transaction": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.BalanceTransaction"}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.CustomerCashBalanceTransaction.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["adjusted_for_overdraft"]},{"dataType":"enum","enums":["applied_to_payment"]},{"dataType":"enum","enums":["funded"]},{"dataType":"enum","enums":["funding_reversed"]},{"dataType":"enum","enums":["refunded_from_payment"]},{"dataType":"enum","enums":["return_canceled"]},{"dataType":"enum","enums":["return_initiated"]},{"dataType":"enum","enums":["transferred_to_balance"]},{"dataType":"enum","enums":["unapplied_from_payment"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.CustomerCashBalanceTransaction.UnappliedFromPayment": {
        "dataType": "refObject",
        "properties": {
            "payment_intent": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PaymentIntent"}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Dispute.Evidence": {
        "dataType": "refObject",
        "properties": {
            "access_activity_log": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "billing_address": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "cancellation_policy": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "cancellation_policy_disclosure": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "cancellation_rebuttal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "customer_communication": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "customer_email_address": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "customer_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "customer_purchase_ip": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "customer_signature": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "duplicate_charge_documentation": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "duplicate_charge_explanation": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "duplicate_charge_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "product_description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "receipt": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "refund_policy": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "refund_policy_disclosure": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "refund_refusal_explanation": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "service_date": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "service_documentation": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "shipping_address": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "shipping_carrier": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "shipping_date": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "shipping_documentation": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "shipping_tracking_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "uncategorized_file": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "uncategorized_text": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Dispute.EvidenceDetails": {
        "dataType": "refObject",
        "properties": {
            "due_by": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "has_evidence": {"dataType":"boolean","required":true},
            "past_due": {"dataType":"boolean","required":true},
            "submission_count": {"dataType":"double","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Dispute.PaymentMethodDetails.AmazonPay.DisputeType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["chargeback"]},{"dataType":"enum","enums":["claim"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Dispute.PaymentMethodDetails.AmazonPay": {
        "dataType": "refObject",
        "properties": {
            "dispute_type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Dispute.PaymentMethodDetails.AmazonPay.DisputeType"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Dispute.PaymentMethodDetails.Card.CaseType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["chargeback"]},{"dataType":"enum","enums":["inquiry"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Dispute.PaymentMethodDetails.Card": {
        "dataType": "refObject",
        "properties": {
            "brand": {"dataType":"string","required":true},
            "case_type": {"ref":"stripe.Stripe.Dispute.PaymentMethodDetails.Card.CaseType","required":true},
            "network_reason_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Dispute.PaymentMethodDetails.Klarna": {
        "dataType": "refObject",
        "properties": {
            "reason_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Dispute.PaymentMethodDetails.Paypal": {
        "dataType": "refObject",
        "properties": {
            "case_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "reason_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Dispute.PaymentMethodDetails.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["amazon_pay"]},{"dataType":"enum","enums":["card"]},{"dataType":"enum","enums":["klarna"]},{"dataType":"enum","enums":["paypal"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Dispute.PaymentMethodDetails": {
        "dataType": "refObject",
        "properties": {
            "amazon_pay": {"ref":"stripe.Stripe.Dispute.PaymentMethodDetails.AmazonPay"},
            "card": {"ref":"stripe.Stripe.Dispute.PaymentMethodDetails.Card"},
            "klarna": {"ref":"stripe.Stripe.Dispute.PaymentMethodDetails.Klarna"},
            "paypal": {"ref":"stripe.Stripe.Dispute.PaymentMethodDetails.Paypal"},
            "type": {"ref":"stripe.Stripe.Dispute.PaymentMethodDetails.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Dispute.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["lost"]},{"dataType":"enum","enums":["needs_response"]},{"dataType":"enum","enums":["under_review"]},{"dataType":"enum","enums":["warning_closed"]},{"dataType":"enum","enums":["warning_needs_response"]},{"dataType":"enum","enums":["warning_under_review"]},{"dataType":"enum","enums":["won"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Dispute": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["dispute"],"required":true},
            "amount": {"dataType":"double","required":true},
            "balance_transactions": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.BalanceTransaction"},"required":true},
            "charge": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Charge"}],"required":true},
            "created": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "evidence": {"ref":"stripe.Stripe.Dispute.Evidence","required":true},
            "evidence_details": {"ref":"stripe.Stripe.Dispute.EvidenceDetails","required":true},
            "is_charge_refundable": {"dataType":"boolean","required":true},
            "livemode": {"dataType":"boolean","required":true},
            "metadata": {"ref":"stripe.Stripe.Metadata","required":true},
            "network_reason_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "payment_intent": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PaymentIntent"},{"dataType":"enum","enums":[null]}],"required":true},
            "payment_method_details": {"ref":"stripe.Stripe.Dispute.PaymentMethodDetails"},
            "reason": {"dataType":"string","required":true},
            "status": {"ref":"stripe.Stripe.Dispute.Status","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.FeeRefund": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["fee_refund"],"required":true},
            "amount": {"dataType":"double","required":true},
            "balance_transaction": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.BalanceTransaction"},{"dataType":"enum","enums":[null]}],"required":true},
            "created": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "fee": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.ApplicationFee"}],"required":true},
            "metadata": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Metadata"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.AmountDetails": {
        "dataType": "refObject",
        "properties": {
            "atm_fee": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "cashback_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.AuthorizationMethod": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["chip"]},{"dataType":"enum","enums":["contactless"]},{"dataType":"enum","enums":["keyed_in"]},{"dataType":"enum","enums":["online"]},{"dataType":"enum","enums":["swipe"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Card.CancellationReason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["design_rejected"]},{"dataType":"enum","enums":["lost"]},{"dataType":"enum","enums":["stolen"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Cardholder.Billing": {
        "dataType": "refObject",
        "properties": {
            "address": {"ref":"stripe.Stripe.Address","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Cardholder.Company": {
        "dataType": "refObject",
        "properties": {
            "tax_id_provided": {"dataType":"boolean","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Cardholder.Individual.CardIssuing.UserTermsAcceptance": {
        "dataType": "refObject",
        "properties": {
            "date": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "ip": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "user_agent": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Cardholder.Individual.CardIssuing": {
        "dataType": "refObject",
        "properties": {
            "user_terms_acceptance": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Cardholder.Individual.CardIssuing.UserTermsAcceptance"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Cardholder.Individual.Dob": {
        "dataType": "refObject",
        "properties": {
            "day": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "month": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "year": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Cardholder.Individual.Verification.Document": {
        "dataType": "refObject",
        "properties": {
            "back": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "front": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Cardholder.Individual.Verification": {
        "dataType": "refObject",
        "properties": {
            "document": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Cardholder.Individual.Verification.Document"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Cardholder.Individual": {
        "dataType": "refObject",
        "properties": {
            "card_issuing": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Cardholder.Individual.CardIssuing"},{"dataType":"enum","enums":[null]}]},
            "dob": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Cardholder.Individual.Dob"},{"dataType":"enum","enums":[null]}],"required":true},
            "first_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "last_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "verification": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Cardholder.Individual.Verification"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Cardholder.PreferredLocale": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["de"]},{"dataType":"enum","enums":["en"]},{"dataType":"enum","enums":["es"]},{"dataType":"enum","enums":["fr"]},{"dataType":"enum","enums":["it"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Cardholder.Requirements.DisabledReason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["listed"]},{"dataType":"enum","enums":["rejected.listed"]},{"dataType":"enum","enums":["requirements.past_due"]},{"dataType":"enum","enums":["under_review"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Cardholder.Requirements.PastDue": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["company.tax_id"]},{"dataType":"enum","enums":["individual.card_issuing.user_terms_acceptance.date"]},{"dataType":"enum","enums":["individual.card_issuing.user_terms_acceptance.ip"]},{"dataType":"enum","enums":["individual.dob.day"]},{"dataType":"enum","enums":["individual.dob.month"]},{"dataType":"enum","enums":["individual.dob.year"]},{"dataType":"enum","enums":["individual.first_name"]},{"dataType":"enum","enums":["individual.last_name"]},{"dataType":"enum","enums":["individual.verification.document"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Cardholder.Requirements": {
        "dataType": "refObject",
        "properties": {
            "disabled_reason": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Cardholder.Requirements.DisabledReason"},{"dataType":"enum","enums":[null]}],"required":true},
            "past_due": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.Issuing.Cardholder.Requirements.PastDue"}},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Cardholder.SpendingControls.AllowedCategory": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["ac_refrigeration_repair"]},{"dataType":"enum","enums":["accounting_bookkeeping_services"]},{"dataType":"enum","enums":["advertising_services"]},{"dataType":"enum","enums":["agricultural_cooperative"]},{"dataType":"enum","enums":["airlines_air_carriers"]},{"dataType":"enum","enums":["airports_flying_fields"]},{"dataType":"enum","enums":["ambulance_services"]},{"dataType":"enum","enums":["amusement_parks_carnivals"]},{"dataType":"enum","enums":["antique_reproductions"]},{"dataType":"enum","enums":["antique_shops"]},{"dataType":"enum","enums":["aquariums"]},{"dataType":"enum","enums":["architectural_surveying_services"]},{"dataType":"enum","enums":["art_dealers_and_galleries"]},{"dataType":"enum","enums":["artists_supply_and_craft_shops"]},{"dataType":"enum","enums":["auto_and_home_supply_stores"]},{"dataType":"enum","enums":["auto_body_repair_shops"]},{"dataType":"enum","enums":["auto_paint_shops"]},{"dataType":"enum","enums":["auto_service_shops"]},{"dataType":"enum","enums":["automated_cash_disburse"]},{"dataType":"enum","enums":["automated_fuel_dispensers"]},{"dataType":"enum","enums":["automobile_associations"]},{"dataType":"enum","enums":["automotive_parts_and_accessories_stores"]},{"dataType":"enum","enums":["automotive_tire_stores"]},{"dataType":"enum","enums":["bail_and_bond_payments"]},{"dataType":"enum","enums":["bakeries"]},{"dataType":"enum","enums":["bands_orchestras"]},{"dataType":"enum","enums":["barber_and_beauty_shops"]},{"dataType":"enum","enums":["betting_casino_gambling"]},{"dataType":"enum","enums":["bicycle_shops"]},{"dataType":"enum","enums":["billiard_pool_establishments"]},{"dataType":"enum","enums":["boat_dealers"]},{"dataType":"enum","enums":["boat_rentals_and_leases"]},{"dataType":"enum","enums":["book_stores"]},{"dataType":"enum","enums":["books_periodicals_and_newspapers"]},{"dataType":"enum","enums":["bowling_alleys"]},{"dataType":"enum","enums":["bus_lines"]},{"dataType":"enum","enums":["business_secretarial_schools"]},{"dataType":"enum","enums":["buying_shopping_services"]},{"dataType":"enum","enums":["cable_satellite_and_other_pay_television_and_radio"]},{"dataType":"enum","enums":["camera_and_photographic_supply_stores"]},{"dataType":"enum","enums":["candy_nut_and_confectionery_stores"]},{"dataType":"enum","enums":["car_and_truck_dealers_new_used"]},{"dataType":"enum","enums":["car_and_truck_dealers_used_only"]},{"dataType":"enum","enums":["car_rental_agencies"]},{"dataType":"enum","enums":["car_washes"]},{"dataType":"enum","enums":["carpentry_services"]},{"dataType":"enum","enums":["carpet_upholstery_cleaning"]},{"dataType":"enum","enums":["caterers"]},{"dataType":"enum","enums":["charitable_and_social_service_organizations_fundraising"]},{"dataType":"enum","enums":["chemicals_and_allied_products"]},{"dataType":"enum","enums":["child_care_services"]},{"dataType":"enum","enums":["childrens_and_infants_wear_stores"]},{"dataType":"enum","enums":["chiropodists_podiatrists"]},{"dataType":"enum","enums":["chiropractors"]},{"dataType":"enum","enums":["cigar_stores_and_stands"]},{"dataType":"enum","enums":["civic_social_fraternal_associations"]},{"dataType":"enum","enums":["cleaning_and_maintenance"]},{"dataType":"enum","enums":["clothing_rental"]},{"dataType":"enum","enums":["colleges_universities"]},{"dataType":"enum","enums":["commercial_equipment"]},{"dataType":"enum","enums":["commercial_footwear"]},{"dataType":"enum","enums":["commercial_photography_art_and_graphics"]},{"dataType":"enum","enums":["commuter_transport_and_ferries"]},{"dataType":"enum","enums":["computer_network_services"]},{"dataType":"enum","enums":["computer_programming"]},{"dataType":"enum","enums":["computer_repair"]},{"dataType":"enum","enums":["computer_software_stores"]},{"dataType":"enum","enums":["computers_peripherals_and_software"]},{"dataType":"enum","enums":["concrete_work_services"]},{"dataType":"enum","enums":["construction_materials"]},{"dataType":"enum","enums":["consulting_public_relations"]},{"dataType":"enum","enums":["correspondence_schools"]},{"dataType":"enum","enums":["cosmetic_stores"]},{"dataType":"enum","enums":["counseling_services"]},{"dataType":"enum","enums":["country_clubs"]},{"dataType":"enum","enums":["courier_services"]},{"dataType":"enum","enums":["court_costs"]},{"dataType":"enum","enums":["credit_reporting_agencies"]},{"dataType":"enum","enums":["cruise_lines"]},{"dataType":"enum","enums":["dairy_products_stores"]},{"dataType":"enum","enums":["dance_hall_studios_schools"]},{"dataType":"enum","enums":["dating_escort_services"]},{"dataType":"enum","enums":["dentists_orthodontists"]},{"dataType":"enum","enums":["department_stores"]},{"dataType":"enum","enums":["detective_agencies"]},{"dataType":"enum","enums":["digital_goods_applications"]},{"dataType":"enum","enums":["digital_goods_games"]},{"dataType":"enum","enums":["digital_goods_large_volume"]},{"dataType":"enum","enums":["digital_goods_media"]},{"dataType":"enum","enums":["direct_marketing_catalog_merchant"]},{"dataType":"enum","enums":["direct_marketing_combination_catalog_and_retail_merchant"]},{"dataType":"enum","enums":["direct_marketing_inbound_telemarketing"]},{"dataType":"enum","enums":["direct_marketing_insurance_services"]},{"dataType":"enum","enums":["direct_marketing_other"]},{"dataType":"enum","enums":["direct_marketing_outbound_telemarketing"]},{"dataType":"enum","enums":["direct_marketing_subscription"]},{"dataType":"enum","enums":["direct_marketing_travel"]},{"dataType":"enum","enums":["discount_stores"]},{"dataType":"enum","enums":["doctors"]},{"dataType":"enum","enums":["door_to_door_sales"]},{"dataType":"enum","enums":["drapery_window_covering_and_upholstery_stores"]},{"dataType":"enum","enums":["drinking_places"]},{"dataType":"enum","enums":["drug_stores_and_pharmacies"]},{"dataType":"enum","enums":["drugs_drug_proprietaries_and_druggist_sundries"]},{"dataType":"enum","enums":["dry_cleaners"]},{"dataType":"enum","enums":["durable_goods"]},{"dataType":"enum","enums":["duty_free_stores"]},{"dataType":"enum","enums":["eating_places_restaurants"]},{"dataType":"enum","enums":["educational_services"]},{"dataType":"enum","enums":["electric_razor_stores"]},{"dataType":"enum","enums":["electric_vehicle_charging"]},{"dataType":"enum","enums":["electrical_parts_and_equipment"]},{"dataType":"enum","enums":["electrical_services"]},{"dataType":"enum","enums":["electronics_repair_shops"]},{"dataType":"enum","enums":["electronics_stores"]},{"dataType":"enum","enums":["elementary_secondary_schools"]},{"dataType":"enum","enums":["emergency_services_gcas_visa_use_only"]},{"dataType":"enum","enums":["employment_temp_agencies"]},{"dataType":"enum","enums":["equipment_rental"]},{"dataType":"enum","enums":["exterminating_services"]},{"dataType":"enum","enums":["family_clothing_stores"]},{"dataType":"enum","enums":["fast_food_restaurants"]},{"dataType":"enum","enums":["financial_institutions"]},{"dataType":"enum","enums":["fines_government_administrative_entities"]},{"dataType":"enum","enums":["fireplace_fireplace_screens_and_accessories_stores"]},{"dataType":"enum","enums":["floor_covering_stores"]},{"dataType":"enum","enums":["florists"]},{"dataType":"enum","enums":["florists_supplies_nursery_stock_and_flowers"]},{"dataType":"enum","enums":["freezer_and_locker_meat_provisioners"]},{"dataType":"enum","enums":["fuel_dealers_non_automotive"]},{"dataType":"enum","enums":["funeral_services_crematories"]},{"dataType":"enum","enums":["furniture_home_furnishings_and_equipment_stores_except_appliances"]},{"dataType":"enum","enums":["furniture_repair_refinishing"]},{"dataType":"enum","enums":["furriers_and_fur_shops"]},{"dataType":"enum","enums":["general_services"]},{"dataType":"enum","enums":["gift_card_novelty_and_souvenir_shops"]},{"dataType":"enum","enums":["glass_paint_and_wallpaper_stores"]},{"dataType":"enum","enums":["glassware_crystal_stores"]},{"dataType":"enum","enums":["golf_courses_public"]},{"dataType":"enum","enums":["government_licensed_horse_dog_racing_us_region_only"]},{"dataType":"enum","enums":["government_licensed_online_casions_online_gambling_us_region_only"]},{"dataType":"enum","enums":["government_owned_lotteries_non_us_region"]},{"dataType":"enum","enums":["government_owned_lotteries_us_region_only"]},{"dataType":"enum","enums":["government_services"]},{"dataType":"enum","enums":["grocery_stores_supermarkets"]},{"dataType":"enum","enums":["hardware_equipment_and_supplies"]},{"dataType":"enum","enums":["hardware_stores"]},{"dataType":"enum","enums":["health_and_beauty_spas"]},{"dataType":"enum","enums":["hearing_aids_sales_and_supplies"]},{"dataType":"enum","enums":["heating_plumbing_a_c"]},{"dataType":"enum","enums":["hobby_toy_and_game_shops"]},{"dataType":"enum","enums":["home_supply_warehouse_stores"]},{"dataType":"enum","enums":["hospitals"]},{"dataType":"enum","enums":["hotels_motels_and_resorts"]},{"dataType":"enum","enums":["household_appliance_stores"]},{"dataType":"enum","enums":["industrial_supplies"]},{"dataType":"enum","enums":["information_retrieval_services"]},{"dataType":"enum","enums":["insurance_default"]},{"dataType":"enum","enums":["insurance_underwriting_premiums"]},{"dataType":"enum","enums":["intra_company_purchases"]},{"dataType":"enum","enums":["jewelry_stores_watches_clocks_and_silverware_stores"]},{"dataType":"enum","enums":["landscaping_services"]},{"dataType":"enum","enums":["laundries"]},{"dataType":"enum","enums":["laundry_cleaning_services"]},{"dataType":"enum","enums":["legal_services_attorneys"]},{"dataType":"enum","enums":["luggage_and_leather_goods_stores"]},{"dataType":"enum","enums":["lumber_building_materials_stores"]},{"dataType":"enum","enums":["manual_cash_disburse"]},{"dataType":"enum","enums":["marinas_service_and_supplies"]},{"dataType":"enum","enums":["marketplaces"]},{"dataType":"enum","enums":["masonry_stonework_and_plaster"]},{"dataType":"enum","enums":["massage_parlors"]},{"dataType":"enum","enums":["medical_and_dental_labs"]},{"dataType":"enum","enums":["medical_dental_ophthalmic_and_hospital_equipment_and_supplies"]},{"dataType":"enum","enums":["medical_services"]},{"dataType":"enum","enums":["membership_organizations"]},{"dataType":"enum","enums":["mens_and_boys_clothing_and_accessories_stores"]},{"dataType":"enum","enums":["mens_womens_clothing_stores"]},{"dataType":"enum","enums":["metal_service_centers"]},{"dataType":"enum","enums":["miscellaneous"]},{"dataType":"enum","enums":["miscellaneous_apparel_and_accessory_shops"]},{"dataType":"enum","enums":["miscellaneous_auto_dealers"]},{"dataType":"enum","enums":["miscellaneous_business_services"]},{"dataType":"enum","enums":["miscellaneous_food_stores"]},{"dataType":"enum","enums":["miscellaneous_general_merchandise"]},{"dataType":"enum","enums":["miscellaneous_general_services"]},{"dataType":"enum","enums":["miscellaneous_home_furnishing_specialty_stores"]},{"dataType":"enum","enums":["miscellaneous_publishing_and_printing"]},{"dataType":"enum","enums":["miscellaneous_recreation_services"]},{"dataType":"enum","enums":["miscellaneous_repair_shops"]},{"dataType":"enum","enums":["miscellaneous_specialty_retail"]},{"dataType":"enum","enums":["mobile_home_dealers"]},{"dataType":"enum","enums":["motion_picture_theaters"]},{"dataType":"enum","enums":["motor_freight_carriers_and_trucking"]},{"dataType":"enum","enums":["motor_homes_dealers"]},{"dataType":"enum","enums":["motor_vehicle_supplies_and_new_parts"]},{"dataType":"enum","enums":["motorcycle_shops_and_dealers"]},{"dataType":"enum","enums":["motorcycle_shops_dealers"]},{"dataType":"enum","enums":["music_stores_musical_instruments_pianos_and_sheet_music"]},{"dataType":"enum","enums":["news_dealers_and_newsstands"]},{"dataType":"enum","enums":["non_fi_money_orders"]},{"dataType":"enum","enums":["non_fi_stored_value_card_purchase_load"]},{"dataType":"enum","enums":["nondurable_goods"]},{"dataType":"enum","enums":["nurseries_lawn_and_garden_supply_stores"]},{"dataType":"enum","enums":["nursing_personal_care"]},{"dataType":"enum","enums":["office_and_commercial_furniture"]},{"dataType":"enum","enums":["opticians_eyeglasses"]},{"dataType":"enum","enums":["optometrists_ophthalmologist"]},{"dataType":"enum","enums":["orthopedic_goods_prosthetic_devices"]},{"dataType":"enum","enums":["osteopaths"]},{"dataType":"enum","enums":["package_stores_beer_wine_and_liquor"]},{"dataType":"enum","enums":["paints_varnishes_and_supplies"]},{"dataType":"enum","enums":["parking_lots_garages"]},{"dataType":"enum","enums":["passenger_railways"]},{"dataType":"enum","enums":["pawn_shops"]},{"dataType":"enum","enums":["pet_shops_pet_food_and_supplies"]},{"dataType":"enum","enums":["petroleum_and_petroleum_products"]},{"dataType":"enum","enums":["photo_developing"]},{"dataType":"enum","enums":["photographic_photocopy_microfilm_equipment_and_supplies"]},{"dataType":"enum","enums":["photographic_studios"]},{"dataType":"enum","enums":["picture_video_production"]},{"dataType":"enum","enums":["piece_goods_notions_and_other_dry_goods"]},{"dataType":"enum","enums":["plumbing_heating_equipment_and_supplies"]},{"dataType":"enum","enums":["political_organizations"]},{"dataType":"enum","enums":["postal_services_government_only"]},{"dataType":"enum","enums":["precious_stones_and_metals_watches_and_jewelry"]},{"dataType":"enum","enums":["professional_services"]},{"dataType":"enum","enums":["public_warehousing_and_storage"]},{"dataType":"enum","enums":["quick_copy_repro_and_blueprint"]},{"dataType":"enum","enums":["railroads"]},{"dataType":"enum","enums":["real_estate_agents_and_managers_rentals"]},{"dataType":"enum","enums":["record_stores"]},{"dataType":"enum","enums":["recreational_vehicle_rentals"]},{"dataType":"enum","enums":["religious_goods_stores"]},{"dataType":"enum","enums":["religious_organizations"]},{"dataType":"enum","enums":["roofing_siding_sheet_metal"]},{"dataType":"enum","enums":["secretarial_support_services"]},{"dataType":"enum","enums":["security_brokers_dealers"]},{"dataType":"enum","enums":["service_stations"]},{"dataType":"enum","enums":["sewing_needlework_fabric_and_piece_goods_stores"]},{"dataType":"enum","enums":["shoe_repair_hat_cleaning"]},{"dataType":"enum","enums":["shoe_stores"]},{"dataType":"enum","enums":["small_appliance_repair"]},{"dataType":"enum","enums":["snowmobile_dealers"]},{"dataType":"enum","enums":["special_trade_services"]},{"dataType":"enum","enums":["specialty_cleaning"]},{"dataType":"enum","enums":["sporting_goods_stores"]},{"dataType":"enum","enums":["sporting_recreation_camps"]},{"dataType":"enum","enums":["sports_and_riding_apparel_stores"]},{"dataType":"enum","enums":["sports_clubs_fields"]},{"dataType":"enum","enums":["stamp_and_coin_stores"]},{"dataType":"enum","enums":["stationary_office_supplies_printing_and_writing_paper"]},{"dataType":"enum","enums":["stationery_stores_office_and_school_supply_stores"]},{"dataType":"enum","enums":["swimming_pools_sales"]},{"dataType":"enum","enums":["t_ui_travel_germany"]},{"dataType":"enum","enums":["tailors_alterations"]},{"dataType":"enum","enums":["tax_payments_government_agencies"]},{"dataType":"enum","enums":["tax_preparation_services"]},{"dataType":"enum","enums":["taxicabs_limousines"]},{"dataType":"enum","enums":["telecommunication_equipment_and_telephone_sales"]},{"dataType":"enum","enums":["telecommunication_services"]},{"dataType":"enum","enums":["telegraph_services"]},{"dataType":"enum","enums":["tent_and_awning_shops"]},{"dataType":"enum","enums":["testing_laboratories"]},{"dataType":"enum","enums":["theatrical_ticket_agencies"]},{"dataType":"enum","enums":["timeshares"]},{"dataType":"enum","enums":["tire_retreading_and_repair"]},{"dataType":"enum","enums":["tolls_bridge_fees"]},{"dataType":"enum","enums":["tourist_attractions_and_exhibits"]},{"dataType":"enum","enums":["towing_services"]},{"dataType":"enum","enums":["trailer_parks_campgrounds"]},{"dataType":"enum","enums":["transportation_services"]},{"dataType":"enum","enums":["travel_agencies_tour_operators"]},{"dataType":"enum","enums":["truck_stop_iteration"]},{"dataType":"enum","enums":["truck_utility_trailer_rentals"]},{"dataType":"enum","enums":["typesetting_plate_making_and_related_services"]},{"dataType":"enum","enums":["typewriter_stores"]},{"dataType":"enum","enums":["u_s_federal_government_agencies_or_departments"]},{"dataType":"enum","enums":["uniforms_commercial_clothing"]},{"dataType":"enum","enums":["used_merchandise_and_secondhand_stores"]},{"dataType":"enum","enums":["utilities"]},{"dataType":"enum","enums":["variety_stores"]},{"dataType":"enum","enums":["veterinary_services"]},{"dataType":"enum","enums":["video_amusement_game_supplies"]},{"dataType":"enum","enums":["video_game_arcades"]},{"dataType":"enum","enums":["video_tape_rental_stores"]},{"dataType":"enum","enums":["vocational_trade_schools"]},{"dataType":"enum","enums":["watch_jewelry_repair"]},{"dataType":"enum","enums":["welding_repair"]},{"dataType":"enum","enums":["wholesale_clubs"]},{"dataType":"enum","enums":["wig_and_toupee_stores"]},{"dataType":"enum","enums":["wires_money_orders"]},{"dataType":"enum","enums":["womens_accessory_and_specialty_shops"]},{"dataType":"enum","enums":["womens_ready_to_wear_stores"]},{"dataType":"enum","enums":["wrecking_and_salvage_yards"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Cardholder.SpendingControls.BlockedCategory": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["ac_refrigeration_repair"]},{"dataType":"enum","enums":["accounting_bookkeeping_services"]},{"dataType":"enum","enums":["advertising_services"]},{"dataType":"enum","enums":["agricultural_cooperative"]},{"dataType":"enum","enums":["airlines_air_carriers"]},{"dataType":"enum","enums":["airports_flying_fields"]},{"dataType":"enum","enums":["ambulance_services"]},{"dataType":"enum","enums":["amusement_parks_carnivals"]},{"dataType":"enum","enums":["antique_reproductions"]},{"dataType":"enum","enums":["antique_shops"]},{"dataType":"enum","enums":["aquariums"]},{"dataType":"enum","enums":["architectural_surveying_services"]},{"dataType":"enum","enums":["art_dealers_and_galleries"]},{"dataType":"enum","enums":["artists_supply_and_craft_shops"]},{"dataType":"enum","enums":["auto_and_home_supply_stores"]},{"dataType":"enum","enums":["auto_body_repair_shops"]},{"dataType":"enum","enums":["auto_paint_shops"]},{"dataType":"enum","enums":["auto_service_shops"]},{"dataType":"enum","enums":["automated_cash_disburse"]},{"dataType":"enum","enums":["automated_fuel_dispensers"]},{"dataType":"enum","enums":["automobile_associations"]},{"dataType":"enum","enums":["automotive_parts_and_accessories_stores"]},{"dataType":"enum","enums":["automotive_tire_stores"]},{"dataType":"enum","enums":["bail_and_bond_payments"]},{"dataType":"enum","enums":["bakeries"]},{"dataType":"enum","enums":["bands_orchestras"]},{"dataType":"enum","enums":["barber_and_beauty_shops"]},{"dataType":"enum","enums":["betting_casino_gambling"]},{"dataType":"enum","enums":["bicycle_shops"]},{"dataType":"enum","enums":["billiard_pool_establishments"]},{"dataType":"enum","enums":["boat_dealers"]},{"dataType":"enum","enums":["boat_rentals_and_leases"]},{"dataType":"enum","enums":["book_stores"]},{"dataType":"enum","enums":["books_periodicals_and_newspapers"]},{"dataType":"enum","enums":["bowling_alleys"]},{"dataType":"enum","enums":["bus_lines"]},{"dataType":"enum","enums":["business_secretarial_schools"]},{"dataType":"enum","enums":["buying_shopping_services"]},{"dataType":"enum","enums":["cable_satellite_and_other_pay_television_and_radio"]},{"dataType":"enum","enums":["camera_and_photographic_supply_stores"]},{"dataType":"enum","enums":["candy_nut_and_confectionery_stores"]},{"dataType":"enum","enums":["car_and_truck_dealers_new_used"]},{"dataType":"enum","enums":["car_and_truck_dealers_used_only"]},{"dataType":"enum","enums":["car_rental_agencies"]},{"dataType":"enum","enums":["car_washes"]},{"dataType":"enum","enums":["carpentry_services"]},{"dataType":"enum","enums":["carpet_upholstery_cleaning"]},{"dataType":"enum","enums":["caterers"]},{"dataType":"enum","enums":["charitable_and_social_service_organizations_fundraising"]},{"dataType":"enum","enums":["chemicals_and_allied_products"]},{"dataType":"enum","enums":["child_care_services"]},{"dataType":"enum","enums":["childrens_and_infants_wear_stores"]},{"dataType":"enum","enums":["chiropodists_podiatrists"]},{"dataType":"enum","enums":["chiropractors"]},{"dataType":"enum","enums":["cigar_stores_and_stands"]},{"dataType":"enum","enums":["civic_social_fraternal_associations"]},{"dataType":"enum","enums":["cleaning_and_maintenance"]},{"dataType":"enum","enums":["clothing_rental"]},{"dataType":"enum","enums":["colleges_universities"]},{"dataType":"enum","enums":["commercial_equipment"]},{"dataType":"enum","enums":["commercial_footwear"]},{"dataType":"enum","enums":["commercial_photography_art_and_graphics"]},{"dataType":"enum","enums":["commuter_transport_and_ferries"]},{"dataType":"enum","enums":["computer_network_services"]},{"dataType":"enum","enums":["computer_programming"]},{"dataType":"enum","enums":["computer_repair"]},{"dataType":"enum","enums":["computer_software_stores"]},{"dataType":"enum","enums":["computers_peripherals_and_software"]},{"dataType":"enum","enums":["concrete_work_services"]},{"dataType":"enum","enums":["construction_materials"]},{"dataType":"enum","enums":["consulting_public_relations"]},{"dataType":"enum","enums":["correspondence_schools"]},{"dataType":"enum","enums":["cosmetic_stores"]},{"dataType":"enum","enums":["counseling_services"]},{"dataType":"enum","enums":["country_clubs"]},{"dataType":"enum","enums":["courier_services"]},{"dataType":"enum","enums":["court_costs"]},{"dataType":"enum","enums":["credit_reporting_agencies"]},{"dataType":"enum","enums":["cruise_lines"]},{"dataType":"enum","enums":["dairy_products_stores"]},{"dataType":"enum","enums":["dance_hall_studios_schools"]},{"dataType":"enum","enums":["dating_escort_services"]},{"dataType":"enum","enums":["dentists_orthodontists"]},{"dataType":"enum","enums":["department_stores"]},{"dataType":"enum","enums":["detective_agencies"]},{"dataType":"enum","enums":["digital_goods_applications"]},{"dataType":"enum","enums":["digital_goods_games"]},{"dataType":"enum","enums":["digital_goods_large_volume"]},{"dataType":"enum","enums":["digital_goods_media"]},{"dataType":"enum","enums":["direct_marketing_catalog_merchant"]},{"dataType":"enum","enums":["direct_marketing_combination_catalog_and_retail_merchant"]},{"dataType":"enum","enums":["direct_marketing_inbound_telemarketing"]},{"dataType":"enum","enums":["direct_marketing_insurance_services"]},{"dataType":"enum","enums":["direct_marketing_other"]},{"dataType":"enum","enums":["direct_marketing_outbound_telemarketing"]},{"dataType":"enum","enums":["direct_marketing_subscription"]},{"dataType":"enum","enums":["direct_marketing_travel"]},{"dataType":"enum","enums":["discount_stores"]},{"dataType":"enum","enums":["doctors"]},{"dataType":"enum","enums":["door_to_door_sales"]},{"dataType":"enum","enums":["drapery_window_covering_and_upholstery_stores"]},{"dataType":"enum","enums":["drinking_places"]},{"dataType":"enum","enums":["drug_stores_and_pharmacies"]},{"dataType":"enum","enums":["drugs_drug_proprietaries_and_druggist_sundries"]},{"dataType":"enum","enums":["dry_cleaners"]},{"dataType":"enum","enums":["durable_goods"]},{"dataType":"enum","enums":["duty_free_stores"]},{"dataType":"enum","enums":["eating_places_restaurants"]},{"dataType":"enum","enums":["educational_services"]},{"dataType":"enum","enums":["electric_razor_stores"]},{"dataType":"enum","enums":["electric_vehicle_charging"]},{"dataType":"enum","enums":["electrical_parts_and_equipment"]},{"dataType":"enum","enums":["electrical_services"]},{"dataType":"enum","enums":["electronics_repair_shops"]},{"dataType":"enum","enums":["electronics_stores"]},{"dataType":"enum","enums":["elementary_secondary_schools"]},{"dataType":"enum","enums":["emergency_services_gcas_visa_use_only"]},{"dataType":"enum","enums":["employment_temp_agencies"]},{"dataType":"enum","enums":["equipment_rental"]},{"dataType":"enum","enums":["exterminating_services"]},{"dataType":"enum","enums":["family_clothing_stores"]},{"dataType":"enum","enums":["fast_food_restaurants"]},{"dataType":"enum","enums":["financial_institutions"]},{"dataType":"enum","enums":["fines_government_administrative_entities"]},{"dataType":"enum","enums":["fireplace_fireplace_screens_and_accessories_stores"]},{"dataType":"enum","enums":["floor_covering_stores"]},{"dataType":"enum","enums":["florists"]},{"dataType":"enum","enums":["florists_supplies_nursery_stock_and_flowers"]},{"dataType":"enum","enums":["freezer_and_locker_meat_provisioners"]},{"dataType":"enum","enums":["fuel_dealers_non_automotive"]},{"dataType":"enum","enums":["funeral_services_crematories"]},{"dataType":"enum","enums":["furniture_home_furnishings_and_equipment_stores_except_appliances"]},{"dataType":"enum","enums":["furniture_repair_refinishing"]},{"dataType":"enum","enums":["furriers_and_fur_shops"]},{"dataType":"enum","enums":["general_services"]},{"dataType":"enum","enums":["gift_card_novelty_and_souvenir_shops"]},{"dataType":"enum","enums":["glass_paint_and_wallpaper_stores"]},{"dataType":"enum","enums":["glassware_crystal_stores"]},{"dataType":"enum","enums":["golf_courses_public"]},{"dataType":"enum","enums":["government_licensed_horse_dog_racing_us_region_only"]},{"dataType":"enum","enums":["government_licensed_online_casions_online_gambling_us_region_only"]},{"dataType":"enum","enums":["government_owned_lotteries_non_us_region"]},{"dataType":"enum","enums":["government_owned_lotteries_us_region_only"]},{"dataType":"enum","enums":["government_services"]},{"dataType":"enum","enums":["grocery_stores_supermarkets"]},{"dataType":"enum","enums":["hardware_equipment_and_supplies"]},{"dataType":"enum","enums":["hardware_stores"]},{"dataType":"enum","enums":["health_and_beauty_spas"]},{"dataType":"enum","enums":["hearing_aids_sales_and_supplies"]},{"dataType":"enum","enums":["heating_plumbing_a_c"]},{"dataType":"enum","enums":["hobby_toy_and_game_shops"]},{"dataType":"enum","enums":["home_supply_warehouse_stores"]},{"dataType":"enum","enums":["hospitals"]},{"dataType":"enum","enums":["hotels_motels_and_resorts"]},{"dataType":"enum","enums":["household_appliance_stores"]},{"dataType":"enum","enums":["industrial_supplies"]},{"dataType":"enum","enums":["information_retrieval_services"]},{"dataType":"enum","enums":["insurance_default"]},{"dataType":"enum","enums":["insurance_underwriting_premiums"]},{"dataType":"enum","enums":["intra_company_purchases"]},{"dataType":"enum","enums":["jewelry_stores_watches_clocks_and_silverware_stores"]},{"dataType":"enum","enums":["landscaping_services"]},{"dataType":"enum","enums":["laundries"]},{"dataType":"enum","enums":["laundry_cleaning_services"]},{"dataType":"enum","enums":["legal_services_attorneys"]},{"dataType":"enum","enums":["luggage_and_leather_goods_stores"]},{"dataType":"enum","enums":["lumber_building_materials_stores"]},{"dataType":"enum","enums":["manual_cash_disburse"]},{"dataType":"enum","enums":["marinas_service_and_supplies"]},{"dataType":"enum","enums":["marketplaces"]},{"dataType":"enum","enums":["masonry_stonework_and_plaster"]},{"dataType":"enum","enums":["massage_parlors"]},{"dataType":"enum","enums":["medical_and_dental_labs"]},{"dataType":"enum","enums":["medical_dental_ophthalmic_and_hospital_equipment_and_supplies"]},{"dataType":"enum","enums":["medical_services"]},{"dataType":"enum","enums":["membership_organizations"]},{"dataType":"enum","enums":["mens_and_boys_clothing_and_accessories_stores"]},{"dataType":"enum","enums":["mens_womens_clothing_stores"]},{"dataType":"enum","enums":["metal_service_centers"]},{"dataType":"enum","enums":["miscellaneous"]},{"dataType":"enum","enums":["miscellaneous_apparel_and_accessory_shops"]},{"dataType":"enum","enums":["miscellaneous_auto_dealers"]},{"dataType":"enum","enums":["miscellaneous_business_services"]},{"dataType":"enum","enums":["miscellaneous_food_stores"]},{"dataType":"enum","enums":["miscellaneous_general_merchandise"]},{"dataType":"enum","enums":["miscellaneous_general_services"]},{"dataType":"enum","enums":["miscellaneous_home_furnishing_specialty_stores"]},{"dataType":"enum","enums":["miscellaneous_publishing_and_printing"]},{"dataType":"enum","enums":["miscellaneous_recreation_services"]},{"dataType":"enum","enums":["miscellaneous_repair_shops"]},{"dataType":"enum","enums":["miscellaneous_specialty_retail"]},{"dataType":"enum","enums":["mobile_home_dealers"]},{"dataType":"enum","enums":["motion_picture_theaters"]},{"dataType":"enum","enums":["motor_freight_carriers_and_trucking"]},{"dataType":"enum","enums":["motor_homes_dealers"]},{"dataType":"enum","enums":["motor_vehicle_supplies_and_new_parts"]},{"dataType":"enum","enums":["motorcycle_shops_and_dealers"]},{"dataType":"enum","enums":["motorcycle_shops_dealers"]},{"dataType":"enum","enums":["music_stores_musical_instruments_pianos_and_sheet_music"]},{"dataType":"enum","enums":["news_dealers_and_newsstands"]},{"dataType":"enum","enums":["non_fi_money_orders"]},{"dataType":"enum","enums":["non_fi_stored_value_card_purchase_load"]},{"dataType":"enum","enums":["nondurable_goods"]},{"dataType":"enum","enums":["nurseries_lawn_and_garden_supply_stores"]},{"dataType":"enum","enums":["nursing_personal_care"]},{"dataType":"enum","enums":["office_and_commercial_furniture"]},{"dataType":"enum","enums":["opticians_eyeglasses"]},{"dataType":"enum","enums":["optometrists_ophthalmologist"]},{"dataType":"enum","enums":["orthopedic_goods_prosthetic_devices"]},{"dataType":"enum","enums":["osteopaths"]},{"dataType":"enum","enums":["package_stores_beer_wine_and_liquor"]},{"dataType":"enum","enums":["paints_varnishes_and_supplies"]},{"dataType":"enum","enums":["parking_lots_garages"]},{"dataType":"enum","enums":["passenger_railways"]},{"dataType":"enum","enums":["pawn_shops"]},{"dataType":"enum","enums":["pet_shops_pet_food_and_supplies"]},{"dataType":"enum","enums":["petroleum_and_petroleum_products"]},{"dataType":"enum","enums":["photo_developing"]},{"dataType":"enum","enums":["photographic_photocopy_microfilm_equipment_and_supplies"]},{"dataType":"enum","enums":["photographic_studios"]},{"dataType":"enum","enums":["picture_video_production"]},{"dataType":"enum","enums":["piece_goods_notions_and_other_dry_goods"]},{"dataType":"enum","enums":["plumbing_heating_equipment_and_supplies"]},{"dataType":"enum","enums":["political_organizations"]},{"dataType":"enum","enums":["postal_services_government_only"]},{"dataType":"enum","enums":["precious_stones_and_metals_watches_and_jewelry"]},{"dataType":"enum","enums":["professional_services"]},{"dataType":"enum","enums":["public_warehousing_and_storage"]},{"dataType":"enum","enums":["quick_copy_repro_and_blueprint"]},{"dataType":"enum","enums":["railroads"]},{"dataType":"enum","enums":["real_estate_agents_and_managers_rentals"]},{"dataType":"enum","enums":["record_stores"]},{"dataType":"enum","enums":["recreational_vehicle_rentals"]},{"dataType":"enum","enums":["religious_goods_stores"]},{"dataType":"enum","enums":["religious_organizations"]},{"dataType":"enum","enums":["roofing_siding_sheet_metal"]},{"dataType":"enum","enums":["secretarial_support_services"]},{"dataType":"enum","enums":["security_brokers_dealers"]},{"dataType":"enum","enums":["service_stations"]},{"dataType":"enum","enums":["sewing_needlework_fabric_and_piece_goods_stores"]},{"dataType":"enum","enums":["shoe_repair_hat_cleaning"]},{"dataType":"enum","enums":["shoe_stores"]},{"dataType":"enum","enums":["small_appliance_repair"]},{"dataType":"enum","enums":["snowmobile_dealers"]},{"dataType":"enum","enums":["special_trade_services"]},{"dataType":"enum","enums":["specialty_cleaning"]},{"dataType":"enum","enums":["sporting_goods_stores"]},{"dataType":"enum","enums":["sporting_recreation_camps"]},{"dataType":"enum","enums":["sports_and_riding_apparel_stores"]},{"dataType":"enum","enums":["sports_clubs_fields"]},{"dataType":"enum","enums":["stamp_and_coin_stores"]},{"dataType":"enum","enums":["stationary_office_supplies_printing_and_writing_paper"]},{"dataType":"enum","enums":["stationery_stores_office_and_school_supply_stores"]},{"dataType":"enum","enums":["swimming_pools_sales"]},{"dataType":"enum","enums":["t_ui_travel_germany"]},{"dataType":"enum","enums":["tailors_alterations"]},{"dataType":"enum","enums":["tax_payments_government_agencies"]},{"dataType":"enum","enums":["tax_preparation_services"]},{"dataType":"enum","enums":["taxicabs_limousines"]},{"dataType":"enum","enums":["telecommunication_equipment_and_telephone_sales"]},{"dataType":"enum","enums":["telecommunication_services"]},{"dataType":"enum","enums":["telegraph_services"]},{"dataType":"enum","enums":["tent_and_awning_shops"]},{"dataType":"enum","enums":["testing_laboratories"]},{"dataType":"enum","enums":["theatrical_ticket_agencies"]},{"dataType":"enum","enums":["timeshares"]},{"dataType":"enum","enums":["tire_retreading_and_repair"]},{"dataType":"enum","enums":["tolls_bridge_fees"]},{"dataType":"enum","enums":["tourist_attractions_and_exhibits"]},{"dataType":"enum","enums":["towing_services"]},{"dataType":"enum","enums":["trailer_parks_campgrounds"]},{"dataType":"enum","enums":["transportation_services"]},{"dataType":"enum","enums":["travel_agencies_tour_operators"]},{"dataType":"enum","enums":["truck_stop_iteration"]},{"dataType":"enum","enums":["truck_utility_trailer_rentals"]},{"dataType":"enum","enums":["typesetting_plate_making_and_related_services"]},{"dataType":"enum","enums":["typewriter_stores"]},{"dataType":"enum","enums":["u_s_federal_government_agencies_or_departments"]},{"dataType":"enum","enums":["uniforms_commercial_clothing"]},{"dataType":"enum","enums":["used_merchandise_and_secondhand_stores"]},{"dataType":"enum","enums":["utilities"]},{"dataType":"enum","enums":["variety_stores"]},{"dataType":"enum","enums":["veterinary_services"]},{"dataType":"enum","enums":["video_amusement_game_supplies"]},{"dataType":"enum","enums":["video_game_arcades"]},{"dataType":"enum","enums":["video_tape_rental_stores"]},{"dataType":"enum","enums":["vocational_trade_schools"]},{"dataType":"enum","enums":["watch_jewelry_repair"]},{"dataType":"enum","enums":["welding_repair"]},{"dataType":"enum","enums":["wholesale_clubs"]},{"dataType":"enum","enums":["wig_and_toupee_stores"]},{"dataType":"enum","enums":["wires_money_orders"]},{"dataType":"enum","enums":["womens_accessory_and_specialty_shops"]},{"dataType":"enum","enums":["womens_ready_to_wear_stores"]},{"dataType":"enum","enums":["wrecking_and_salvage_yards"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Cardholder.SpendingControls.SpendingLimit.Category": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["ac_refrigeration_repair"]},{"dataType":"enum","enums":["accounting_bookkeeping_services"]},{"dataType":"enum","enums":["advertising_services"]},{"dataType":"enum","enums":["agricultural_cooperative"]},{"dataType":"enum","enums":["airlines_air_carriers"]},{"dataType":"enum","enums":["airports_flying_fields"]},{"dataType":"enum","enums":["ambulance_services"]},{"dataType":"enum","enums":["amusement_parks_carnivals"]},{"dataType":"enum","enums":["antique_reproductions"]},{"dataType":"enum","enums":["antique_shops"]},{"dataType":"enum","enums":["aquariums"]},{"dataType":"enum","enums":["architectural_surveying_services"]},{"dataType":"enum","enums":["art_dealers_and_galleries"]},{"dataType":"enum","enums":["artists_supply_and_craft_shops"]},{"dataType":"enum","enums":["auto_and_home_supply_stores"]},{"dataType":"enum","enums":["auto_body_repair_shops"]},{"dataType":"enum","enums":["auto_paint_shops"]},{"dataType":"enum","enums":["auto_service_shops"]},{"dataType":"enum","enums":["automated_cash_disburse"]},{"dataType":"enum","enums":["automated_fuel_dispensers"]},{"dataType":"enum","enums":["automobile_associations"]},{"dataType":"enum","enums":["automotive_parts_and_accessories_stores"]},{"dataType":"enum","enums":["automotive_tire_stores"]},{"dataType":"enum","enums":["bail_and_bond_payments"]},{"dataType":"enum","enums":["bakeries"]},{"dataType":"enum","enums":["bands_orchestras"]},{"dataType":"enum","enums":["barber_and_beauty_shops"]},{"dataType":"enum","enums":["betting_casino_gambling"]},{"dataType":"enum","enums":["bicycle_shops"]},{"dataType":"enum","enums":["billiard_pool_establishments"]},{"dataType":"enum","enums":["boat_dealers"]},{"dataType":"enum","enums":["boat_rentals_and_leases"]},{"dataType":"enum","enums":["book_stores"]},{"dataType":"enum","enums":["books_periodicals_and_newspapers"]},{"dataType":"enum","enums":["bowling_alleys"]},{"dataType":"enum","enums":["bus_lines"]},{"dataType":"enum","enums":["business_secretarial_schools"]},{"dataType":"enum","enums":["buying_shopping_services"]},{"dataType":"enum","enums":["cable_satellite_and_other_pay_television_and_radio"]},{"dataType":"enum","enums":["camera_and_photographic_supply_stores"]},{"dataType":"enum","enums":["candy_nut_and_confectionery_stores"]},{"dataType":"enum","enums":["car_and_truck_dealers_new_used"]},{"dataType":"enum","enums":["car_and_truck_dealers_used_only"]},{"dataType":"enum","enums":["car_rental_agencies"]},{"dataType":"enum","enums":["car_washes"]},{"dataType":"enum","enums":["carpentry_services"]},{"dataType":"enum","enums":["carpet_upholstery_cleaning"]},{"dataType":"enum","enums":["caterers"]},{"dataType":"enum","enums":["charitable_and_social_service_organizations_fundraising"]},{"dataType":"enum","enums":["chemicals_and_allied_products"]},{"dataType":"enum","enums":["child_care_services"]},{"dataType":"enum","enums":["childrens_and_infants_wear_stores"]},{"dataType":"enum","enums":["chiropodists_podiatrists"]},{"dataType":"enum","enums":["chiropractors"]},{"dataType":"enum","enums":["cigar_stores_and_stands"]},{"dataType":"enum","enums":["civic_social_fraternal_associations"]},{"dataType":"enum","enums":["cleaning_and_maintenance"]},{"dataType":"enum","enums":["clothing_rental"]},{"dataType":"enum","enums":["colleges_universities"]},{"dataType":"enum","enums":["commercial_equipment"]},{"dataType":"enum","enums":["commercial_footwear"]},{"dataType":"enum","enums":["commercial_photography_art_and_graphics"]},{"dataType":"enum","enums":["commuter_transport_and_ferries"]},{"dataType":"enum","enums":["computer_network_services"]},{"dataType":"enum","enums":["computer_programming"]},{"dataType":"enum","enums":["computer_repair"]},{"dataType":"enum","enums":["computer_software_stores"]},{"dataType":"enum","enums":["computers_peripherals_and_software"]},{"dataType":"enum","enums":["concrete_work_services"]},{"dataType":"enum","enums":["construction_materials"]},{"dataType":"enum","enums":["consulting_public_relations"]},{"dataType":"enum","enums":["correspondence_schools"]},{"dataType":"enum","enums":["cosmetic_stores"]},{"dataType":"enum","enums":["counseling_services"]},{"dataType":"enum","enums":["country_clubs"]},{"dataType":"enum","enums":["courier_services"]},{"dataType":"enum","enums":["court_costs"]},{"dataType":"enum","enums":["credit_reporting_agencies"]},{"dataType":"enum","enums":["cruise_lines"]},{"dataType":"enum","enums":["dairy_products_stores"]},{"dataType":"enum","enums":["dance_hall_studios_schools"]},{"dataType":"enum","enums":["dating_escort_services"]},{"dataType":"enum","enums":["dentists_orthodontists"]},{"dataType":"enum","enums":["department_stores"]},{"dataType":"enum","enums":["detective_agencies"]},{"dataType":"enum","enums":["digital_goods_applications"]},{"dataType":"enum","enums":["digital_goods_games"]},{"dataType":"enum","enums":["digital_goods_large_volume"]},{"dataType":"enum","enums":["digital_goods_media"]},{"dataType":"enum","enums":["direct_marketing_catalog_merchant"]},{"dataType":"enum","enums":["direct_marketing_combination_catalog_and_retail_merchant"]},{"dataType":"enum","enums":["direct_marketing_inbound_telemarketing"]},{"dataType":"enum","enums":["direct_marketing_insurance_services"]},{"dataType":"enum","enums":["direct_marketing_other"]},{"dataType":"enum","enums":["direct_marketing_outbound_telemarketing"]},{"dataType":"enum","enums":["direct_marketing_subscription"]},{"dataType":"enum","enums":["direct_marketing_travel"]},{"dataType":"enum","enums":["discount_stores"]},{"dataType":"enum","enums":["doctors"]},{"dataType":"enum","enums":["door_to_door_sales"]},{"dataType":"enum","enums":["drapery_window_covering_and_upholstery_stores"]},{"dataType":"enum","enums":["drinking_places"]},{"dataType":"enum","enums":["drug_stores_and_pharmacies"]},{"dataType":"enum","enums":["drugs_drug_proprietaries_and_druggist_sundries"]},{"dataType":"enum","enums":["dry_cleaners"]},{"dataType":"enum","enums":["durable_goods"]},{"dataType":"enum","enums":["duty_free_stores"]},{"dataType":"enum","enums":["eating_places_restaurants"]},{"dataType":"enum","enums":["educational_services"]},{"dataType":"enum","enums":["electric_razor_stores"]},{"dataType":"enum","enums":["electric_vehicle_charging"]},{"dataType":"enum","enums":["electrical_parts_and_equipment"]},{"dataType":"enum","enums":["electrical_services"]},{"dataType":"enum","enums":["electronics_repair_shops"]},{"dataType":"enum","enums":["electronics_stores"]},{"dataType":"enum","enums":["elementary_secondary_schools"]},{"dataType":"enum","enums":["emergency_services_gcas_visa_use_only"]},{"dataType":"enum","enums":["employment_temp_agencies"]},{"dataType":"enum","enums":["equipment_rental"]},{"dataType":"enum","enums":["exterminating_services"]},{"dataType":"enum","enums":["family_clothing_stores"]},{"dataType":"enum","enums":["fast_food_restaurants"]},{"dataType":"enum","enums":["financial_institutions"]},{"dataType":"enum","enums":["fines_government_administrative_entities"]},{"dataType":"enum","enums":["fireplace_fireplace_screens_and_accessories_stores"]},{"dataType":"enum","enums":["floor_covering_stores"]},{"dataType":"enum","enums":["florists"]},{"dataType":"enum","enums":["florists_supplies_nursery_stock_and_flowers"]},{"dataType":"enum","enums":["freezer_and_locker_meat_provisioners"]},{"dataType":"enum","enums":["fuel_dealers_non_automotive"]},{"dataType":"enum","enums":["funeral_services_crematories"]},{"dataType":"enum","enums":["furniture_home_furnishings_and_equipment_stores_except_appliances"]},{"dataType":"enum","enums":["furniture_repair_refinishing"]},{"dataType":"enum","enums":["furriers_and_fur_shops"]},{"dataType":"enum","enums":["general_services"]},{"dataType":"enum","enums":["gift_card_novelty_and_souvenir_shops"]},{"dataType":"enum","enums":["glass_paint_and_wallpaper_stores"]},{"dataType":"enum","enums":["glassware_crystal_stores"]},{"dataType":"enum","enums":["golf_courses_public"]},{"dataType":"enum","enums":["government_licensed_horse_dog_racing_us_region_only"]},{"dataType":"enum","enums":["government_licensed_online_casions_online_gambling_us_region_only"]},{"dataType":"enum","enums":["government_owned_lotteries_non_us_region"]},{"dataType":"enum","enums":["government_owned_lotteries_us_region_only"]},{"dataType":"enum","enums":["government_services"]},{"dataType":"enum","enums":["grocery_stores_supermarkets"]},{"dataType":"enum","enums":["hardware_equipment_and_supplies"]},{"dataType":"enum","enums":["hardware_stores"]},{"dataType":"enum","enums":["health_and_beauty_spas"]},{"dataType":"enum","enums":["hearing_aids_sales_and_supplies"]},{"dataType":"enum","enums":["heating_plumbing_a_c"]},{"dataType":"enum","enums":["hobby_toy_and_game_shops"]},{"dataType":"enum","enums":["home_supply_warehouse_stores"]},{"dataType":"enum","enums":["hospitals"]},{"dataType":"enum","enums":["hotels_motels_and_resorts"]},{"dataType":"enum","enums":["household_appliance_stores"]},{"dataType":"enum","enums":["industrial_supplies"]},{"dataType":"enum","enums":["information_retrieval_services"]},{"dataType":"enum","enums":["insurance_default"]},{"dataType":"enum","enums":["insurance_underwriting_premiums"]},{"dataType":"enum","enums":["intra_company_purchases"]},{"dataType":"enum","enums":["jewelry_stores_watches_clocks_and_silverware_stores"]},{"dataType":"enum","enums":["landscaping_services"]},{"dataType":"enum","enums":["laundries"]},{"dataType":"enum","enums":["laundry_cleaning_services"]},{"dataType":"enum","enums":["legal_services_attorneys"]},{"dataType":"enum","enums":["luggage_and_leather_goods_stores"]},{"dataType":"enum","enums":["lumber_building_materials_stores"]},{"dataType":"enum","enums":["manual_cash_disburse"]},{"dataType":"enum","enums":["marinas_service_and_supplies"]},{"dataType":"enum","enums":["marketplaces"]},{"dataType":"enum","enums":["masonry_stonework_and_plaster"]},{"dataType":"enum","enums":["massage_parlors"]},{"dataType":"enum","enums":["medical_and_dental_labs"]},{"dataType":"enum","enums":["medical_dental_ophthalmic_and_hospital_equipment_and_supplies"]},{"dataType":"enum","enums":["medical_services"]},{"dataType":"enum","enums":["membership_organizations"]},{"dataType":"enum","enums":["mens_and_boys_clothing_and_accessories_stores"]},{"dataType":"enum","enums":["mens_womens_clothing_stores"]},{"dataType":"enum","enums":["metal_service_centers"]},{"dataType":"enum","enums":["miscellaneous"]},{"dataType":"enum","enums":["miscellaneous_apparel_and_accessory_shops"]},{"dataType":"enum","enums":["miscellaneous_auto_dealers"]},{"dataType":"enum","enums":["miscellaneous_business_services"]},{"dataType":"enum","enums":["miscellaneous_food_stores"]},{"dataType":"enum","enums":["miscellaneous_general_merchandise"]},{"dataType":"enum","enums":["miscellaneous_general_services"]},{"dataType":"enum","enums":["miscellaneous_home_furnishing_specialty_stores"]},{"dataType":"enum","enums":["miscellaneous_publishing_and_printing"]},{"dataType":"enum","enums":["miscellaneous_recreation_services"]},{"dataType":"enum","enums":["miscellaneous_repair_shops"]},{"dataType":"enum","enums":["miscellaneous_specialty_retail"]},{"dataType":"enum","enums":["mobile_home_dealers"]},{"dataType":"enum","enums":["motion_picture_theaters"]},{"dataType":"enum","enums":["motor_freight_carriers_and_trucking"]},{"dataType":"enum","enums":["motor_homes_dealers"]},{"dataType":"enum","enums":["motor_vehicle_supplies_and_new_parts"]},{"dataType":"enum","enums":["motorcycle_shops_and_dealers"]},{"dataType":"enum","enums":["motorcycle_shops_dealers"]},{"dataType":"enum","enums":["music_stores_musical_instruments_pianos_and_sheet_music"]},{"dataType":"enum","enums":["news_dealers_and_newsstands"]},{"dataType":"enum","enums":["non_fi_money_orders"]},{"dataType":"enum","enums":["non_fi_stored_value_card_purchase_load"]},{"dataType":"enum","enums":["nondurable_goods"]},{"dataType":"enum","enums":["nurseries_lawn_and_garden_supply_stores"]},{"dataType":"enum","enums":["nursing_personal_care"]},{"dataType":"enum","enums":["office_and_commercial_furniture"]},{"dataType":"enum","enums":["opticians_eyeglasses"]},{"dataType":"enum","enums":["optometrists_ophthalmologist"]},{"dataType":"enum","enums":["orthopedic_goods_prosthetic_devices"]},{"dataType":"enum","enums":["osteopaths"]},{"dataType":"enum","enums":["package_stores_beer_wine_and_liquor"]},{"dataType":"enum","enums":["paints_varnishes_and_supplies"]},{"dataType":"enum","enums":["parking_lots_garages"]},{"dataType":"enum","enums":["passenger_railways"]},{"dataType":"enum","enums":["pawn_shops"]},{"dataType":"enum","enums":["pet_shops_pet_food_and_supplies"]},{"dataType":"enum","enums":["petroleum_and_petroleum_products"]},{"dataType":"enum","enums":["photo_developing"]},{"dataType":"enum","enums":["photographic_photocopy_microfilm_equipment_and_supplies"]},{"dataType":"enum","enums":["photographic_studios"]},{"dataType":"enum","enums":["picture_video_production"]},{"dataType":"enum","enums":["piece_goods_notions_and_other_dry_goods"]},{"dataType":"enum","enums":["plumbing_heating_equipment_and_supplies"]},{"dataType":"enum","enums":["political_organizations"]},{"dataType":"enum","enums":["postal_services_government_only"]},{"dataType":"enum","enums":["precious_stones_and_metals_watches_and_jewelry"]},{"dataType":"enum","enums":["professional_services"]},{"dataType":"enum","enums":["public_warehousing_and_storage"]},{"dataType":"enum","enums":["quick_copy_repro_and_blueprint"]},{"dataType":"enum","enums":["railroads"]},{"dataType":"enum","enums":["real_estate_agents_and_managers_rentals"]},{"dataType":"enum","enums":["record_stores"]},{"dataType":"enum","enums":["recreational_vehicle_rentals"]},{"dataType":"enum","enums":["religious_goods_stores"]},{"dataType":"enum","enums":["religious_organizations"]},{"dataType":"enum","enums":["roofing_siding_sheet_metal"]},{"dataType":"enum","enums":["secretarial_support_services"]},{"dataType":"enum","enums":["security_brokers_dealers"]},{"dataType":"enum","enums":["service_stations"]},{"dataType":"enum","enums":["sewing_needlework_fabric_and_piece_goods_stores"]},{"dataType":"enum","enums":["shoe_repair_hat_cleaning"]},{"dataType":"enum","enums":["shoe_stores"]},{"dataType":"enum","enums":["small_appliance_repair"]},{"dataType":"enum","enums":["snowmobile_dealers"]},{"dataType":"enum","enums":["special_trade_services"]},{"dataType":"enum","enums":["specialty_cleaning"]},{"dataType":"enum","enums":["sporting_goods_stores"]},{"dataType":"enum","enums":["sporting_recreation_camps"]},{"dataType":"enum","enums":["sports_and_riding_apparel_stores"]},{"dataType":"enum","enums":["sports_clubs_fields"]},{"dataType":"enum","enums":["stamp_and_coin_stores"]},{"dataType":"enum","enums":["stationary_office_supplies_printing_and_writing_paper"]},{"dataType":"enum","enums":["stationery_stores_office_and_school_supply_stores"]},{"dataType":"enum","enums":["swimming_pools_sales"]},{"dataType":"enum","enums":["t_ui_travel_germany"]},{"dataType":"enum","enums":["tailors_alterations"]},{"dataType":"enum","enums":["tax_payments_government_agencies"]},{"dataType":"enum","enums":["tax_preparation_services"]},{"dataType":"enum","enums":["taxicabs_limousines"]},{"dataType":"enum","enums":["telecommunication_equipment_and_telephone_sales"]},{"dataType":"enum","enums":["telecommunication_services"]},{"dataType":"enum","enums":["telegraph_services"]},{"dataType":"enum","enums":["tent_and_awning_shops"]},{"dataType":"enum","enums":["testing_laboratories"]},{"dataType":"enum","enums":["theatrical_ticket_agencies"]},{"dataType":"enum","enums":["timeshares"]},{"dataType":"enum","enums":["tire_retreading_and_repair"]},{"dataType":"enum","enums":["tolls_bridge_fees"]},{"dataType":"enum","enums":["tourist_attractions_and_exhibits"]},{"dataType":"enum","enums":["towing_services"]},{"dataType":"enum","enums":["trailer_parks_campgrounds"]},{"dataType":"enum","enums":["transportation_services"]},{"dataType":"enum","enums":["travel_agencies_tour_operators"]},{"dataType":"enum","enums":["truck_stop_iteration"]},{"dataType":"enum","enums":["truck_utility_trailer_rentals"]},{"dataType":"enum","enums":["typesetting_plate_making_and_related_services"]},{"dataType":"enum","enums":["typewriter_stores"]},{"dataType":"enum","enums":["u_s_federal_government_agencies_or_departments"]},{"dataType":"enum","enums":["uniforms_commercial_clothing"]},{"dataType":"enum","enums":["used_merchandise_and_secondhand_stores"]},{"dataType":"enum","enums":["utilities"]},{"dataType":"enum","enums":["variety_stores"]},{"dataType":"enum","enums":["veterinary_services"]},{"dataType":"enum","enums":["video_amusement_game_supplies"]},{"dataType":"enum","enums":["video_game_arcades"]},{"dataType":"enum","enums":["video_tape_rental_stores"]},{"dataType":"enum","enums":["vocational_trade_schools"]},{"dataType":"enum","enums":["watch_jewelry_repair"]},{"dataType":"enum","enums":["welding_repair"]},{"dataType":"enum","enums":["wholesale_clubs"]},{"dataType":"enum","enums":["wig_and_toupee_stores"]},{"dataType":"enum","enums":["wires_money_orders"]},{"dataType":"enum","enums":["womens_accessory_and_specialty_shops"]},{"dataType":"enum","enums":["womens_ready_to_wear_stores"]},{"dataType":"enum","enums":["wrecking_and_salvage_yards"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Cardholder.SpendingControls.SpendingLimit.Interval": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["all_time"]},{"dataType":"enum","enums":["daily"]},{"dataType":"enum","enums":["monthly"]},{"dataType":"enum","enums":["per_authorization"]},{"dataType":"enum","enums":["weekly"]},{"dataType":"enum","enums":["yearly"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Cardholder.SpendingControls.SpendingLimit": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double","required":true},
            "categories": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.Issuing.Cardholder.SpendingControls.SpendingLimit.Category"}},{"dataType":"enum","enums":[null]}],"required":true},
            "interval": {"ref":"stripe.Stripe.Issuing.Cardholder.SpendingControls.SpendingLimit.Interval","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Cardholder.SpendingControls": {
        "dataType": "refObject",
        "properties": {
            "allowed_categories": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.Issuing.Cardholder.SpendingControls.AllowedCategory"}},{"dataType":"enum","enums":[null]}],"required":true},
            "allowed_merchant_countries": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
            "blocked_categories": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.Issuing.Cardholder.SpendingControls.BlockedCategory"}},{"dataType":"enum","enums":[null]}],"required":true},
            "blocked_merchant_countries": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
            "spending_limits": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Issuing.Cardholder.SpendingControls.SpendingLimit"}},{"dataType":"enum","enums":[null]}],"required":true},
            "spending_limits_currency": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Cardholder.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["blocked"]},{"dataType":"enum","enums":["inactive"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Cardholder.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["company"]},{"dataType":"enum","enums":["individual"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Cardholder": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["issuing.cardholder"],"required":true},
            "billing": {"ref":"stripe.Stripe.Issuing.Cardholder.Billing","required":true},
            "company": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Cardholder.Company"},{"dataType":"enum","enums":[null]}],"required":true},
            "created": {"dataType":"double","required":true},
            "email": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "individual": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Cardholder.Individual"},{"dataType":"enum","enums":[null]}],"required":true},
            "livemode": {"dataType":"boolean","required":true},
            "metadata": {"ref":"stripe.Stripe.Metadata","required":true},
            "name": {"dataType":"string","required":true},
            "phone_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "preferred_locales": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.Issuing.Cardholder.PreferredLocale"}},{"dataType":"enum","enums":[null]}],"required":true},
            "requirements": {"ref":"stripe.Stripe.Issuing.Cardholder.Requirements","required":true},
            "spending_controls": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Cardholder.SpendingControls"},{"dataType":"enum","enums":[null]}],"required":true},
            "status": {"ref":"stripe.Stripe.Issuing.Cardholder.Status","required":true},
            "type": {"ref":"stripe.Stripe.Issuing.Cardholder.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.PersonalizationDesign.CarrierText": {
        "dataType": "refObject",
        "properties": {
            "footer_body": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "footer_title": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "header_body": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "header_title": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.PhysicalBundle.Features.CardLogo": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["optional"]},{"dataType":"enum","enums":["required"]},{"dataType":"enum","enums":["unsupported"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.PhysicalBundle.Features.CarrierText": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["optional"]},{"dataType":"enum","enums":["required"]},{"dataType":"enum","enums":["unsupported"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.PhysicalBundle.Features.SecondLine": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["optional"]},{"dataType":"enum","enums":["required"]},{"dataType":"enum","enums":["unsupported"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.PhysicalBundle.Features": {
        "dataType": "refObject",
        "properties": {
            "card_logo": {"ref":"stripe.Stripe.Issuing.PhysicalBundle.Features.CardLogo","required":true},
            "carrier_text": {"ref":"stripe.Stripe.Issuing.PhysicalBundle.Features.CarrierText","required":true},
            "second_line": {"ref":"stripe.Stripe.Issuing.PhysicalBundle.Features.SecondLine","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.PhysicalBundle.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["review"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.PhysicalBundle.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["custom"]},{"dataType":"enum","enums":["standard"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.PhysicalBundle": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["issuing.physical_bundle"],"required":true},
            "features": {"ref":"stripe.Stripe.Issuing.PhysicalBundle.Features","required":true},
            "livemode": {"dataType":"boolean","required":true},
            "name": {"dataType":"string","required":true},
            "status": {"ref":"stripe.Stripe.Issuing.PhysicalBundle.Status","required":true},
            "type": {"ref":"stripe.Stripe.Issuing.PhysicalBundle.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.PersonalizationDesign.Preferences": {
        "dataType": "refObject",
        "properties": {
            "is_default": {"dataType":"boolean","required":true},
            "is_platform_default": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.PersonalizationDesign.RejectionReasons.CardLogo": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["geographic_location"]},{"dataType":"enum","enums":["inappropriate"]},{"dataType":"enum","enums":["network_name"]},{"dataType":"enum","enums":["non_binary_image"]},{"dataType":"enum","enums":["non_fiat_currency"]},{"dataType":"enum","enums":["other"]},{"dataType":"enum","enums":["other_entity"]},{"dataType":"enum","enums":["promotional_material"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.PersonalizationDesign.RejectionReasons.CarrierText": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["geographic_location"]},{"dataType":"enum","enums":["inappropriate"]},{"dataType":"enum","enums":["network_name"]},{"dataType":"enum","enums":["non_fiat_currency"]},{"dataType":"enum","enums":["other"]},{"dataType":"enum","enums":["other_entity"]},{"dataType":"enum","enums":["promotional_material"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.PersonalizationDesign.RejectionReasons": {
        "dataType": "refObject",
        "properties": {
            "card_logo": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.Issuing.PersonalizationDesign.RejectionReasons.CardLogo"}},{"dataType":"enum","enums":[null]}],"required":true},
            "carrier_text": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.Issuing.PersonalizationDesign.RejectionReasons.CarrierText"}},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.PersonalizationDesign.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["inactive"]},{"dataType":"enum","enums":["rejected"]},{"dataType":"enum","enums":["review"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.PersonalizationDesign": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["issuing.personalization_design"],"required":true},
            "card_logo": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "carrier_text": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.PersonalizationDesign.CarrierText"},{"dataType":"enum","enums":[null]}],"required":true},
            "created": {"dataType":"double","required":true},
            "livemode": {"dataType":"boolean","required":true},
            "lookup_key": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "metadata": {"ref":"stripe.Stripe.Metadata","required":true},
            "name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "physical_bundle": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Issuing.PhysicalBundle"}],"required":true},
            "preferences": {"ref":"stripe.Stripe.Issuing.PersonalizationDesign.Preferences","required":true},
            "rejection_reasons": {"ref":"stripe.Stripe.Issuing.PersonalizationDesign.RejectionReasons","required":true},
            "status": {"ref":"stripe.Stripe.Issuing.PersonalizationDesign.Status","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Card": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["issuing.card"],"required":true},
            "brand": {"dataType":"string","required":true},
            "cancellation_reason": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Card.CancellationReason"},{"dataType":"enum","enums":[null]}],"required":true},
            "cardholder": {"ref":"stripe.Stripe.Issuing.Cardholder","required":true},
            "created": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "cvc": {"dataType":"string"},
            "exp_month": {"dataType":"double","required":true},
            "exp_year": {"dataType":"double","required":true},
            "financial_account": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "last4": {"dataType":"string","required":true},
            "livemode": {"dataType":"boolean","required":true},
            "metadata": {"ref":"stripe.Stripe.Metadata","required":true},
            "number": {"dataType":"string"},
            "personalization_design": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Issuing.PersonalizationDesign"},{"dataType":"enum","enums":[null]}],"required":true},
            "replaced_by": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Issuing.Card"},{"dataType":"enum","enums":[null]}],"required":true},
            "replacement_for": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Issuing.Card"},{"dataType":"enum","enums":[null]}],"required":true},
            "replacement_reason": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Card.ReplacementReason"},{"dataType":"enum","enums":[null]}],"required":true},
            "shipping": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Card.Shipping"},{"dataType":"enum","enums":[null]}],"required":true},
            "spending_controls": {"ref":"stripe.Stripe.Issuing.Card.SpendingControls","required":true},
            "status": {"ref":"stripe.Stripe.Issuing.Card.Status","required":true},
            "type": {"ref":"stripe.Stripe.Issuing.Card.Type","required":true},
            "wallets": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Card.Wallets"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Card.ReplacementReason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["damaged"]},{"dataType":"enum","enums":["expired"]},{"dataType":"enum","enums":["lost"]},{"dataType":"enum","enums":["stolen"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Card.Shipping.AddressValidation.Mode": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["disabled"]},{"dataType":"enum","enums":["normalization_only"]},{"dataType":"enum","enums":["validation_and_normalization"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Card.Shipping.AddressValidation.Result": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["indeterminate"]},{"dataType":"enum","enums":["likely_deliverable"]},{"dataType":"enum","enums":["likely_undeliverable"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Card.Shipping.AddressValidation": {
        "dataType": "refObject",
        "properties": {
            "mode": {"ref":"stripe.Stripe.Issuing.Card.Shipping.AddressValidation.Mode","required":true},
            "normalized_address": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Address"},{"dataType":"enum","enums":[null]}],"required":true},
            "result": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Card.Shipping.AddressValidation.Result"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Card.Shipping.Carrier": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["dhl"]},{"dataType":"enum","enums":["fedex"]},{"dataType":"enum","enums":["royal_mail"]},{"dataType":"enum","enums":["usps"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Card.Shipping.Customs": {
        "dataType": "refObject",
        "properties": {
            "eori_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Card.Shipping.Service": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["express"]},{"dataType":"enum","enums":["priority"]},{"dataType":"enum","enums":["standard"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Card.Shipping.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["canceled"]},{"dataType":"enum","enums":["delivered"]},{"dataType":"enum","enums":["failure"]},{"dataType":"enum","enums":["pending"]},{"dataType":"enum","enums":["returned"]},{"dataType":"enum","enums":["shipped"]},{"dataType":"enum","enums":["submitted"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Card.Shipping.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["bulk"]},{"dataType":"enum","enums":["individual"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Card.Shipping": {
        "dataType": "refObject",
        "properties": {
            "address": {"ref":"stripe.Stripe.Address","required":true},
            "address_validation": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Card.Shipping.AddressValidation"},{"dataType":"enum","enums":[null]}],"required":true},
            "carrier": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Card.Shipping.Carrier"},{"dataType":"enum","enums":[null]}],"required":true},
            "customs": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Card.Shipping.Customs"},{"dataType":"enum","enums":[null]}],"required":true},
            "eta": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "name": {"dataType":"string","required":true},
            "phone_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "require_signature": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}],"required":true},
            "service": {"ref":"stripe.Stripe.Issuing.Card.Shipping.Service","required":true},
            "status": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Card.Shipping.Status"},{"dataType":"enum","enums":[null]}],"required":true},
            "tracking_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "tracking_url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "type": {"ref":"stripe.Stripe.Issuing.Card.Shipping.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Card.SpendingControls.AllowedCategory": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["ac_refrigeration_repair"]},{"dataType":"enum","enums":["accounting_bookkeeping_services"]},{"dataType":"enum","enums":["advertising_services"]},{"dataType":"enum","enums":["agricultural_cooperative"]},{"dataType":"enum","enums":["airlines_air_carriers"]},{"dataType":"enum","enums":["airports_flying_fields"]},{"dataType":"enum","enums":["ambulance_services"]},{"dataType":"enum","enums":["amusement_parks_carnivals"]},{"dataType":"enum","enums":["antique_reproductions"]},{"dataType":"enum","enums":["antique_shops"]},{"dataType":"enum","enums":["aquariums"]},{"dataType":"enum","enums":["architectural_surveying_services"]},{"dataType":"enum","enums":["art_dealers_and_galleries"]},{"dataType":"enum","enums":["artists_supply_and_craft_shops"]},{"dataType":"enum","enums":["auto_and_home_supply_stores"]},{"dataType":"enum","enums":["auto_body_repair_shops"]},{"dataType":"enum","enums":["auto_paint_shops"]},{"dataType":"enum","enums":["auto_service_shops"]},{"dataType":"enum","enums":["automated_cash_disburse"]},{"dataType":"enum","enums":["automated_fuel_dispensers"]},{"dataType":"enum","enums":["automobile_associations"]},{"dataType":"enum","enums":["automotive_parts_and_accessories_stores"]},{"dataType":"enum","enums":["automotive_tire_stores"]},{"dataType":"enum","enums":["bail_and_bond_payments"]},{"dataType":"enum","enums":["bakeries"]},{"dataType":"enum","enums":["bands_orchestras"]},{"dataType":"enum","enums":["barber_and_beauty_shops"]},{"dataType":"enum","enums":["betting_casino_gambling"]},{"dataType":"enum","enums":["bicycle_shops"]},{"dataType":"enum","enums":["billiard_pool_establishments"]},{"dataType":"enum","enums":["boat_dealers"]},{"dataType":"enum","enums":["boat_rentals_and_leases"]},{"dataType":"enum","enums":["book_stores"]},{"dataType":"enum","enums":["books_periodicals_and_newspapers"]},{"dataType":"enum","enums":["bowling_alleys"]},{"dataType":"enum","enums":["bus_lines"]},{"dataType":"enum","enums":["business_secretarial_schools"]},{"dataType":"enum","enums":["buying_shopping_services"]},{"dataType":"enum","enums":["cable_satellite_and_other_pay_television_and_radio"]},{"dataType":"enum","enums":["camera_and_photographic_supply_stores"]},{"dataType":"enum","enums":["candy_nut_and_confectionery_stores"]},{"dataType":"enum","enums":["car_and_truck_dealers_new_used"]},{"dataType":"enum","enums":["car_and_truck_dealers_used_only"]},{"dataType":"enum","enums":["car_rental_agencies"]},{"dataType":"enum","enums":["car_washes"]},{"dataType":"enum","enums":["carpentry_services"]},{"dataType":"enum","enums":["carpet_upholstery_cleaning"]},{"dataType":"enum","enums":["caterers"]},{"dataType":"enum","enums":["charitable_and_social_service_organizations_fundraising"]},{"dataType":"enum","enums":["chemicals_and_allied_products"]},{"dataType":"enum","enums":["child_care_services"]},{"dataType":"enum","enums":["childrens_and_infants_wear_stores"]},{"dataType":"enum","enums":["chiropodists_podiatrists"]},{"dataType":"enum","enums":["chiropractors"]},{"dataType":"enum","enums":["cigar_stores_and_stands"]},{"dataType":"enum","enums":["civic_social_fraternal_associations"]},{"dataType":"enum","enums":["cleaning_and_maintenance"]},{"dataType":"enum","enums":["clothing_rental"]},{"dataType":"enum","enums":["colleges_universities"]},{"dataType":"enum","enums":["commercial_equipment"]},{"dataType":"enum","enums":["commercial_footwear"]},{"dataType":"enum","enums":["commercial_photography_art_and_graphics"]},{"dataType":"enum","enums":["commuter_transport_and_ferries"]},{"dataType":"enum","enums":["computer_network_services"]},{"dataType":"enum","enums":["computer_programming"]},{"dataType":"enum","enums":["computer_repair"]},{"dataType":"enum","enums":["computer_software_stores"]},{"dataType":"enum","enums":["computers_peripherals_and_software"]},{"dataType":"enum","enums":["concrete_work_services"]},{"dataType":"enum","enums":["construction_materials"]},{"dataType":"enum","enums":["consulting_public_relations"]},{"dataType":"enum","enums":["correspondence_schools"]},{"dataType":"enum","enums":["cosmetic_stores"]},{"dataType":"enum","enums":["counseling_services"]},{"dataType":"enum","enums":["country_clubs"]},{"dataType":"enum","enums":["courier_services"]},{"dataType":"enum","enums":["court_costs"]},{"dataType":"enum","enums":["credit_reporting_agencies"]},{"dataType":"enum","enums":["cruise_lines"]},{"dataType":"enum","enums":["dairy_products_stores"]},{"dataType":"enum","enums":["dance_hall_studios_schools"]},{"dataType":"enum","enums":["dating_escort_services"]},{"dataType":"enum","enums":["dentists_orthodontists"]},{"dataType":"enum","enums":["department_stores"]},{"dataType":"enum","enums":["detective_agencies"]},{"dataType":"enum","enums":["digital_goods_applications"]},{"dataType":"enum","enums":["digital_goods_games"]},{"dataType":"enum","enums":["digital_goods_large_volume"]},{"dataType":"enum","enums":["digital_goods_media"]},{"dataType":"enum","enums":["direct_marketing_catalog_merchant"]},{"dataType":"enum","enums":["direct_marketing_combination_catalog_and_retail_merchant"]},{"dataType":"enum","enums":["direct_marketing_inbound_telemarketing"]},{"dataType":"enum","enums":["direct_marketing_insurance_services"]},{"dataType":"enum","enums":["direct_marketing_other"]},{"dataType":"enum","enums":["direct_marketing_outbound_telemarketing"]},{"dataType":"enum","enums":["direct_marketing_subscription"]},{"dataType":"enum","enums":["direct_marketing_travel"]},{"dataType":"enum","enums":["discount_stores"]},{"dataType":"enum","enums":["doctors"]},{"dataType":"enum","enums":["door_to_door_sales"]},{"dataType":"enum","enums":["drapery_window_covering_and_upholstery_stores"]},{"dataType":"enum","enums":["drinking_places"]},{"dataType":"enum","enums":["drug_stores_and_pharmacies"]},{"dataType":"enum","enums":["drugs_drug_proprietaries_and_druggist_sundries"]},{"dataType":"enum","enums":["dry_cleaners"]},{"dataType":"enum","enums":["durable_goods"]},{"dataType":"enum","enums":["duty_free_stores"]},{"dataType":"enum","enums":["eating_places_restaurants"]},{"dataType":"enum","enums":["educational_services"]},{"dataType":"enum","enums":["electric_razor_stores"]},{"dataType":"enum","enums":["electric_vehicle_charging"]},{"dataType":"enum","enums":["electrical_parts_and_equipment"]},{"dataType":"enum","enums":["electrical_services"]},{"dataType":"enum","enums":["electronics_repair_shops"]},{"dataType":"enum","enums":["electronics_stores"]},{"dataType":"enum","enums":["elementary_secondary_schools"]},{"dataType":"enum","enums":["emergency_services_gcas_visa_use_only"]},{"dataType":"enum","enums":["employment_temp_agencies"]},{"dataType":"enum","enums":["equipment_rental"]},{"dataType":"enum","enums":["exterminating_services"]},{"dataType":"enum","enums":["family_clothing_stores"]},{"dataType":"enum","enums":["fast_food_restaurants"]},{"dataType":"enum","enums":["financial_institutions"]},{"dataType":"enum","enums":["fines_government_administrative_entities"]},{"dataType":"enum","enums":["fireplace_fireplace_screens_and_accessories_stores"]},{"dataType":"enum","enums":["floor_covering_stores"]},{"dataType":"enum","enums":["florists"]},{"dataType":"enum","enums":["florists_supplies_nursery_stock_and_flowers"]},{"dataType":"enum","enums":["freezer_and_locker_meat_provisioners"]},{"dataType":"enum","enums":["fuel_dealers_non_automotive"]},{"dataType":"enum","enums":["funeral_services_crematories"]},{"dataType":"enum","enums":["furniture_home_furnishings_and_equipment_stores_except_appliances"]},{"dataType":"enum","enums":["furniture_repair_refinishing"]},{"dataType":"enum","enums":["furriers_and_fur_shops"]},{"dataType":"enum","enums":["general_services"]},{"dataType":"enum","enums":["gift_card_novelty_and_souvenir_shops"]},{"dataType":"enum","enums":["glass_paint_and_wallpaper_stores"]},{"dataType":"enum","enums":["glassware_crystal_stores"]},{"dataType":"enum","enums":["golf_courses_public"]},{"dataType":"enum","enums":["government_licensed_horse_dog_racing_us_region_only"]},{"dataType":"enum","enums":["government_licensed_online_casions_online_gambling_us_region_only"]},{"dataType":"enum","enums":["government_owned_lotteries_non_us_region"]},{"dataType":"enum","enums":["government_owned_lotteries_us_region_only"]},{"dataType":"enum","enums":["government_services"]},{"dataType":"enum","enums":["grocery_stores_supermarkets"]},{"dataType":"enum","enums":["hardware_equipment_and_supplies"]},{"dataType":"enum","enums":["hardware_stores"]},{"dataType":"enum","enums":["health_and_beauty_spas"]},{"dataType":"enum","enums":["hearing_aids_sales_and_supplies"]},{"dataType":"enum","enums":["heating_plumbing_a_c"]},{"dataType":"enum","enums":["hobby_toy_and_game_shops"]},{"dataType":"enum","enums":["home_supply_warehouse_stores"]},{"dataType":"enum","enums":["hospitals"]},{"dataType":"enum","enums":["hotels_motels_and_resorts"]},{"dataType":"enum","enums":["household_appliance_stores"]},{"dataType":"enum","enums":["industrial_supplies"]},{"dataType":"enum","enums":["information_retrieval_services"]},{"dataType":"enum","enums":["insurance_default"]},{"dataType":"enum","enums":["insurance_underwriting_premiums"]},{"dataType":"enum","enums":["intra_company_purchases"]},{"dataType":"enum","enums":["jewelry_stores_watches_clocks_and_silverware_stores"]},{"dataType":"enum","enums":["landscaping_services"]},{"dataType":"enum","enums":["laundries"]},{"dataType":"enum","enums":["laundry_cleaning_services"]},{"dataType":"enum","enums":["legal_services_attorneys"]},{"dataType":"enum","enums":["luggage_and_leather_goods_stores"]},{"dataType":"enum","enums":["lumber_building_materials_stores"]},{"dataType":"enum","enums":["manual_cash_disburse"]},{"dataType":"enum","enums":["marinas_service_and_supplies"]},{"dataType":"enum","enums":["marketplaces"]},{"dataType":"enum","enums":["masonry_stonework_and_plaster"]},{"dataType":"enum","enums":["massage_parlors"]},{"dataType":"enum","enums":["medical_and_dental_labs"]},{"dataType":"enum","enums":["medical_dental_ophthalmic_and_hospital_equipment_and_supplies"]},{"dataType":"enum","enums":["medical_services"]},{"dataType":"enum","enums":["membership_organizations"]},{"dataType":"enum","enums":["mens_and_boys_clothing_and_accessories_stores"]},{"dataType":"enum","enums":["mens_womens_clothing_stores"]},{"dataType":"enum","enums":["metal_service_centers"]},{"dataType":"enum","enums":["miscellaneous"]},{"dataType":"enum","enums":["miscellaneous_apparel_and_accessory_shops"]},{"dataType":"enum","enums":["miscellaneous_auto_dealers"]},{"dataType":"enum","enums":["miscellaneous_business_services"]},{"dataType":"enum","enums":["miscellaneous_food_stores"]},{"dataType":"enum","enums":["miscellaneous_general_merchandise"]},{"dataType":"enum","enums":["miscellaneous_general_services"]},{"dataType":"enum","enums":["miscellaneous_home_furnishing_specialty_stores"]},{"dataType":"enum","enums":["miscellaneous_publishing_and_printing"]},{"dataType":"enum","enums":["miscellaneous_recreation_services"]},{"dataType":"enum","enums":["miscellaneous_repair_shops"]},{"dataType":"enum","enums":["miscellaneous_specialty_retail"]},{"dataType":"enum","enums":["mobile_home_dealers"]},{"dataType":"enum","enums":["motion_picture_theaters"]},{"dataType":"enum","enums":["motor_freight_carriers_and_trucking"]},{"dataType":"enum","enums":["motor_homes_dealers"]},{"dataType":"enum","enums":["motor_vehicle_supplies_and_new_parts"]},{"dataType":"enum","enums":["motorcycle_shops_and_dealers"]},{"dataType":"enum","enums":["motorcycle_shops_dealers"]},{"dataType":"enum","enums":["music_stores_musical_instruments_pianos_and_sheet_music"]},{"dataType":"enum","enums":["news_dealers_and_newsstands"]},{"dataType":"enum","enums":["non_fi_money_orders"]},{"dataType":"enum","enums":["non_fi_stored_value_card_purchase_load"]},{"dataType":"enum","enums":["nondurable_goods"]},{"dataType":"enum","enums":["nurseries_lawn_and_garden_supply_stores"]},{"dataType":"enum","enums":["nursing_personal_care"]},{"dataType":"enum","enums":["office_and_commercial_furniture"]},{"dataType":"enum","enums":["opticians_eyeglasses"]},{"dataType":"enum","enums":["optometrists_ophthalmologist"]},{"dataType":"enum","enums":["orthopedic_goods_prosthetic_devices"]},{"dataType":"enum","enums":["osteopaths"]},{"dataType":"enum","enums":["package_stores_beer_wine_and_liquor"]},{"dataType":"enum","enums":["paints_varnishes_and_supplies"]},{"dataType":"enum","enums":["parking_lots_garages"]},{"dataType":"enum","enums":["passenger_railways"]},{"dataType":"enum","enums":["pawn_shops"]},{"dataType":"enum","enums":["pet_shops_pet_food_and_supplies"]},{"dataType":"enum","enums":["petroleum_and_petroleum_products"]},{"dataType":"enum","enums":["photo_developing"]},{"dataType":"enum","enums":["photographic_photocopy_microfilm_equipment_and_supplies"]},{"dataType":"enum","enums":["photographic_studios"]},{"dataType":"enum","enums":["picture_video_production"]},{"dataType":"enum","enums":["piece_goods_notions_and_other_dry_goods"]},{"dataType":"enum","enums":["plumbing_heating_equipment_and_supplies"]},{"dataType":"enum","enums":["political_organizations"]},{"dataType":"enum","enums":["postal_services_government_only"]},{"dataType":"enum","enums":["precious_stones_and_metals_watches_and_jewelry"]},{"dataType":"enum","enums":["professional_services"]},{"dataType":"enum","enums":["public_warehousing_and_storage"]},{"dataType":"enum","enums":["quick_copy_repro_and_blueprint"]},{"dataType":"enum","enums":["railroads"]},{"dataType":"enum","enums":["real_estate_agents_and_managers_rentals"]},{"dataType":"enum","enums":["record_stores"]},{"dataType":"enum","enums":["recreational_vehicle_rentals"]},{"dataType":"enum","enums":["religious_goods_stores"]},{"dataType":"enum","enums":["religious_organizations"]},{"dataType":"enum","enums":["roofing_siding_sheet_metal"]},{"dataType":"enum","enums":["secretarial_support_services"]},{"dataType":"enum","enums":["security_brokers_dealers"]},{"dataType":"enum","enums":["service_stations"]},{"dataType":"enum","enums":["sewing_needlework_fabric_and_piece_goods_stores"]},{"dataType":"enum","enums":["shoe_repair_hat_cleaning"]},{"dataType":"enum","enums":["shoe_stores"]},{"dataType":"enum","enums":["small_appliance_repair"]},{"dataType":"enum","enums":["snowmobile_dealers"]},{"dataType":"enum","enums":["special_trade_services"]},{"dataType":"enum","enums":["specialty_cleaning"]},{"dataType":"enum","enums":["sporting_goods_stores"]},{"dataType":"enum","enums":["sporting_recreation_camps"]},{"dataType":"enum","enums":["sports_and_riding_apparel_stores"]},{"dataType":"enum","enums":["sports_clubs_fields"]},{"dataType":"enum","enums":["stamp_and_coin_stores"]},{"dataType":"enum","enums":["stationary_office_supplies_printing_and_writing_paper"]},{"dataType":"enum","enums":["stationery_stores_office_and_school_supply_stores"]},{"dataType":"enum","enums":["swimming_pools_sales"]},{"dataType":"enum","enums":["t_ui_travel_germany"]},{"dataType":"enum","enums":["tailors_alterations"]},{"dataType":"enum","enums":["tax_payments_government_agencies"]},{"dataType":"enum","enums":["tax_preparation_services"]},{"dataType":"enum","enums":["taxicabs_limousines"]},{"dataType":"enum","enums":["telecommunication_equipment_and_telephone_sales"]},{"dataType":"enum","enums":["telecommunication_services"]},{"dataType":"enum","enums":["telegraph_services"]},{"dataType":"enum","enums":["tent_and_awning_shops"]},{"dataType":"enum","enums":["testing_laboratories"]},{"dataType":"enum","enums":["theatrical_ticket_agencies"]},{"dataType":"enum","enums":["timeshares"]},{"dataType":"enum","enums":["tire_retreading_and_repair"]},{"dataType":"enum","enums":["tolls_bridge_fees"]},{"dataType":"enum","enums":["tourist_attractions_and_exhibits"]},{"dataType":"enum","enums":["towing_services"]},{"dataType":"enum","enums":["trailer_parks_campgrounds"]},{"dataType":"enum","enums":["transportation_services"]},{"dataType":"enum","enums":["travel_agencies_tour_operators"]},{"dataType":"enum","enums":["truck_stop_iteration"]},{"dataType":"enum","enums":["truck_utility_trailer_rentals"]},{"dataType":"enum","enums":["typesetting_plate_making_and_related_services"]},{"dataType":"enum","enums":["typewriter_stores"]},{"dataType":"enum","enums":["u_s_federal_government_agencies_or_departments"]},{"dataType":"enum","enums":["uniforms_commercial_clothing"]},{"dataType":"enum","enums":["used_merchandise_and_secondhand_stores"]},{"dataType":"enum","enums":["utilities"]},{"dataType":"enum","enums":["variety_stores"]},{"dataType":"enum","enums":["veterinary_services"]},{"dataType":"enum","enums":["video_amusement_game_supplies"]},{"dataType":"enum","enums":["video_game_arcades"]},{"dataType":"enum","enums":["video_tape_rental_stores"]},{"dataType":"enum","enums":["vocational_trade_schools"]},{"dataType":"enum","enums":["watch_jewelry_repair"]},{"dataType":"enum","enums":["welding_repair"]},{"dataType":"enum","enums":["wholesale_clubs"]},{"dataType":"enum","enums":["wig_and_toupee_stores"]},{"dataType":"enum","enums":["wires_money_orders"]},{"dataType":"enum","enums":["womens_accessory_and_specialty_shops"]},{"dataType":"enum","enums":["womens_ready_to_wear_stores"]},{"dataType":"enum","enums":["wrecking_and_salvage_yards"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Card.SpendingControls.BlockedCategory": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["ac_refrigeration_repair"]},{"dataType":"enum","enums":["accounting_bookkeeping_services"]},{"dataType":"enum","enums":["advertising_services"]},{"dataType":"enum","enums":["agricultural_cooperative"]},{"dataType":"enum","enums":["airlines_air_carriers"]},{"dataType":"enum","enums":["airports_flying_fields"]},{"dataType":"enum","enums":["ambulance_services"]},{"dataType":"enum","enums":["amusement_parks_carnivals"]},{"dataType":"enum","enums":["antique_reproductions"]},{"dataType":"enum","enums":["antique_shops"]},{"dataType":"enum","enums":["aquariums"]},{"dataType":"enum","enums":["architectural_surveying_services"]},{"dataType":"enum","enums":["art_dealers_and_galleries"]},{"dataType":"enum","enums":["artists_supply_and_craft_shops"]},{"dataType":"enum","enums":["auto_and_home_supply_stores"]},{"dataType":"enum","enums":["auto_body_repair_shops"]},{"dataType":"enum","enums":["auto_paint_shops"]},{"dataType":"enum","enums":["auto_service_shops"]},{"dataType":"enum","enums":["automated_cash_disburse"]},{"dataType":"enum","enums":["automated_fuel_dispensers"]},{"dataType":"enum","enums":["automobile_associations"]},{"dataType":"enum","enums":["automotive_parts_and_accessories_stores"]},{"dataType":"enum","enums":["automotive_tire_stores"]},{"dataType":"enum","enums":["bail_and_bond_payments"]},{"dataType":"enum","enums":["bakeries"]},{"dataType":"enum","enums":["bands_orchestras"]},{"dataType":"enum","enums":["barber_and_beauty_shops"]},{"dataType":"enum","enums":["betting_casino_gambling"]},{"dataType":"enum","enums":["bicycle_shops"]},{"dataType":"enum","enums":["billiard_pool_establishments"]},{"dataType":"enum","enums":["boat_dealers"]},{"dataType":"enum","enums":["boat_rentals_and_leases"]},{"dataType":"enum","enums":["book_stores"]},{"dataType":"enum","enums":["books_periodicals_and_newspapers"]},{"dataType":"enum","enums":["bowling_alleys"]},{"dataType":"enum","enums":["bus_lines"]},{"dataType":"enum","enums":["business_secretarial_schools"]},{"dataType":"enum","enums":["buying_shopping_services"]},{"dataType":"enum","enums":["cable_satellite_and_other_pay_television_and_radio"]},{"dataType":"enum","enums":["camera_and_photographic_supply_stores"]},{"dataType":"enum","enums":["candy_nut_and_confectionery_stores"]},{"dataType":"enum","enums":["car_and_truck_dealers_new_used"]},{"dataType":"enum","enums":["car_and_truck_dealers_used_only"]},{"dataType":"enum","enums":["car_rental_agencies"]},{"dataType":"enum","enums":["car_washes"]},{"dataType":"enum","enums":["carpentry_services"]},{"dataType":"enum","enums":["carpet_upholstery_cleaning"]},{"dataType":"enum","enums":["caterers"]},{"dataType":"enum","enums":["charitable_and_social_service_organizations_fundraising"]},{"dataType":"enum","enums":["chemicals_and_allied_products"]},{"dataType":"enum","enums":["child_care_services"]},{"dataType":"enum","enums":["childrens_and_infants_wear_stores"]},{"dataType":"enum","enums":["chiropodists_podiatrists"]},{"dataType":"enum","enums":["chiropractors"]},{"dataType":"enum","enums":["cigar_stores_and_stands"]},{"dataType":"enum","enums":["civic_social_fraternal_associations"]},{"dataType":"enum","enums":["cleaning_and_maintenance"]},{"dataType":"enum","enums":["clothing_rental"]},{"dataType":"enum","enums":["colleges_universities"]},{"dataType":"enum","enums":["commercial_equipment"]},{"dataType":"enum","enums":["commercial_footwear"]},{"dataType":"enum","enums":["commercial_photography_art_and_graphics"]},{"dataType":"enum","enums":["commuter_transport_and_ferries"]},{"dataType":"enum","enums":["computer_network_services"]},{"dataType":"enum","enums":["computer_programming"]},{"dataType":"enum","enums":["computer_repair"]},{"dataType":"enum","enums":["computer_software_stores"]},{"dataType":"enum","enums":["computers_peripherals_and_software"]},{"dataType":"enum","enums":["concrete_work_services"]},{"dataType":"enum","enums":["construction_materials"]},{"dataType":"enum","enums":["consulting_public_relations"]},{"dataType":"enum","enums":["correspondence_schools"]},{"dataType":"enum","enums":["cosmetic_stores"]},{"dataType":"enum","enums":["counseling_services"]},{"dataType":"enum","enums":["country_clubs"]},{"dataType":"enum","enums":["courier_services"]},{"dataType":"enum","enums":["court_costs"]},{"dataType":"enum","enums":["credit_reporting_agencies"]},{"dataType":"enum","enums":["cruise_lines"]},{"dataType":"enum","enums":["dairy_products_stores"]},{"dataType":"enum","enums":["dance_hall_studios_schools"]},{"dataType":"enum","enums":["dating_escort_services"]},{"dataType":"enum","enums":["dentists_orthodontists"]},{"dataType":"enum","enums":["department_stores"]},{"dataType":"enum","enums":["detective_agencies"]},{"dataType":"enum","enums":["digital_goods_applications"]},{"dataType":"enum","enums":["digital_goods_games"]},{"dataType":"enum","enums":["digital_goods_large_volume"]},{"dataType":"enum","enums":["digital_goods_media"]},{"dataType":"enum","enums":["direct_marketing_catalog_merchant"]},{"dataType":"enum","enums":["direct_marketing_combination_catalog_and_retail_merchant"]},{"dataType":"enum","enums":["direct_marketing_inbound_telemarketing"]},{"dataType":"enum","enums":["direct_marketing_insurance_services"]},{"dataType":"enum","enums":["direct_marketing_other"]},{"dataType":"enum","enums":["direct_marketing_outbound_telemarketing"]},{"dataType":"enum","enums":["direct_marketing_subscription"]},{"dataType":"enum","enums":["direct_marketing_travel"]},{"dataType":"enum","enums":["discount_stores"]},{"dataType":"enum","enums":["doctors"]},{"dataType":"enum","enums":["door_to_door_sales"]},{"dataType":"enum","enums":["drapery_window_covering_and_upholstery_stores"]},{"dataType":"enum","enums":["drinking_places"]},{"dataType":"enum","enums":["drug_stores_and_pharmacies"]},{"dataType":"enum","enums":["drugs_drug_proprietaries_and_druggist_sundries"]},{"dataType":"enum","enums":["dry_cleaners"]},{"dataType":"enum","enums":["durable_goods"]},{"dataType":"enum","enums":["duty_free_stores"]},{"dataType":"enum","enums":["eating_places_restaurants"]},{"dataType":"enum","enums":["educational_services"]},{"dataType":"enum","enums":["electric_razor_stores"]},{"dataType":"enum","enums":["electric_vehicle_charging"]},{"dataType":"enum","enums":["electrical_parts_and_equipment"]},{"dataType":"enum","enums":["electrical_services"]},{"dataType":"enum","enums":["electronics_repair_shops"]},{"dataType":"enum","enums":["electronics_stores"]},{"dataType":"enum","enums":["elementary_secondary_schools"]},{"dataType":"enum","enums":["emergency_services_gcas_visa_use_only"]},{"dataType":"enum","enums":["employment_temp_agencies"]},{"dataType":"enum","enums":["equipment_rental"]},{"dataType":"enum","enums":["exterminating_services"]},{"dataType":"enum","enums":["family_clothing_stores"]},{"dataType":"enum","enums":["fast_food_restaurants"]},{"dataType":"enum","enums":["financial_institutions"]},{"dataType":"enum","enums":["fines_government_administrative_entities"]},{"dataType":"enum","enums":["fireplace_fireplace_screens_and_accessories_stores"]},{"dataType":"enum","enums":["floor_covering_stores"]},{"dataType":"enum","enums":["florists"]},{"dataType":"enum","enums":["florists_supplies_nursery_stock_and_flowers"]},{"dataType":"enum","enums":["freezer_and_locker_meat_provisioners"]},{"dataType":"enum","enums":["fuel_dealers_non_automotive"]},{"dataType":"enum","enums":["funeral_services_crematories"]},{"dataType":"enum","enums":["furniture_home_furnishings_and_equipment_stores_except_appliances"]},{"dataType":"enum","enums":["furniture_repair_refinishing"]},{"dataType":"enum","enums":["furriers_and_fur_shops"]},{"dataType":"enum","enums":["general_services"]},{"dataType":"enum","enums":["gift_card_novelty_and_souvenir_shops"]},{"dataType":"enum","enums":["glass_paint_and_wallpaper_stores"]},{"dataType":"enum","enums":["glassware_crystal_stores"]},{"dataType":"enum","enums":["golf_courses_public"]},{"dataType":"enum","enums":["government_licensed_horse_dog_racing_us_region_only"]},{"dataType":"enum","enums":["government_licensed_online_casions_online_gambling_us_region_only"]},{"dataType":"enum","enums":["government_owned_lotteries_non_us_region"]},{"dataType":"enum","enums":["government_owned_lotteries_us_region_only"]},{"dataType":"enum","enums":["government_services"]},{"dataType":"enum","enums":["grocery_stores_supermarkets"]},{"dataType":"enum","enums":["hardware_equipment_and_supplies"]},{"dataType":"enum","enums":["hardware_stores"]},{"dataType":"enum","enums":["health_and_beauty_spas"]},{"dataType":"enum","enums":["hearing_aids_sales_and_supplies"]},{"dataType":"enum","enums":["heating_plumbing_a_c"]},{"dataType":"enum","enums":["hobby_toy_and_game_shops"]},{"dataType":"enum","enums":["home_supply_warehouse_stores"]},{"dataType":"enum","enums":["hospitals"]},{"dataType":"enum","enums":["hotels_motels_and_resorts"]},{"dataType":"enum","enums":["household_appliance_stores"]},{"dataType":"enum","enums":["industrial_supplies"]},{"dataType":"enum","enums":["information_retrieval_services"]},{"dataType":"enum","enums":["insurance_default"]},{"dataType":"enum","enums":["insurance_underwriting_premiums"]},{"dataType":"enum","enums":["intra_company_purchases"]},{"dataType":"enum","enums":["jewelry_stores_watches_clocks_and_silverware_stores"]},{"dataType":"enum","enums":["landscaping_services"]},{"dataType":"enum","enums":["laundries"]},{"dataType":"enum","enums":["laundry_cleaning_services"]},{"dataType":"enum","enums":["legal_services_attorneys"]},{"dataType":"enum","enums":["luggage_and_leather_goods_stores"]},{"dataType":"enum","enums":["lumber_building_materials_stores"]},{"dataType":"enum","enums":["manual_cash_disburse"]},{"dataType":"enum","enums":["marinas_service_and_supplies"]},{"dataType":"enum","enums":["marketplaces"]},{"dataType":"enum","enums":["masonry_stonework_and_plaster"]},{"dataType":"enum","enums":["massage_parlors"]},{"dataType":"enum","enums":["medical_and_dental_labs"]},{"dataType":"enum","enums":["medical_dental_ophthalmic_and_hospital_equipment_and_supplies"]},{"dataType":"enum","enums":["medical_services"]},{"dataType":"enum","enums":["membership_organizations"]},{"dataType":"enum","enums":["mens_and_boys_clothing_and_accessories_stores"]},{"dataType":"enum","enums":["mens_womens_clothing_stores"]},{"dataType":"enum","enums":["metal_service_centers"]},{"dataType":"enum","enums":["miscellaneous"]},{"dataType":"enum","enums":["miscellaneous_apparel_and_accessory_shops"]},{"dataType":"enum","enums":["miscellaneous_auto_dealers"]},{"dataType":"enum","enums":["miscellaneous_business_services"]},{"dataType":"enum","enums":["miscellaneous_food_stores"]},{"dataType":"enum","enums":["miscellaneous_general_merchandise"]},{"dataType":"enum","enums":["miscellaneous_general_services"]},{"dataType":"enum","enums":["miscellaneous_home_furnishing_specialty_stores"]},{"dataType":"enum","enums":["miscellaneous_publishing_and_printing"]},{"dataType":"enum","enums":["miscellaneous_recreation_services"]},{"dataType":"enum","enums":["miscellaneous_repair_shops"]},{"dataType":"enum","enums":["miscellaneous_specialty_retail"]},{"dataType":"enum","enums":["mobile_home_dealers"]},{"dataType":"enum","enums":["motion_picture_theaters"]},{"dataType":"enum","enums":["motor_freight_carriers_and_trucking"]},{"dataType":"enum","enums":["motor_homes_dealers"]},{"dataType":"enum","enums":["motor_vehicle_supplies_and_new_parts"]},{"dataType":"enum","enums":["motorcycle_shops_and_dealers"]},{"dataType":"enum","enums":["motorcycle_shops_dealers"]},{"dataType":"enum","enums":["music_stores_musical_instruments_pianos_and_sheet_music"]},{"dataType":"enum","enums":["news_dealers_and_newsstands"]},{"dataType":"enum","enums":["non_fi_money_orders"]},{"dataType":"enum","enums":["non_fi_stored_value_card_purchase_load"]},{"dataType":"enum","enums":["nondurable_goods"]},{"dataType":"enum","enums":["nurseries_lawn_and_garden_supply_stores"]},{"dataType":"enum","enums":["nursing_personal_care"]},{"dataType":"enum","enums":["office_and_commercial_furniture"]},{"dataType":"enum","enums":["opticians_eyeglasses"]},{"dataType":"enum","enums":["optometrists_ophthalmologist"]},{"dataType":"enum","enums":["orthopedic_goods_prosthetic_devices"]},{"dataType":"enum","enums":["osteopaths"]},{"dataType":"enum","enums":["package_stores_beer_wine_and_liquor"]},{"dataType":"enum","enums":["paints_varnishes_and_supplies"]},{"dataType":"enum","enums":["parking_lots_garages"]},{"dataType":"enum","enums":["passenger_railways"]},{"dataType":"enum","enums":["pawn_shops"]},{"dataType":"enum","enums":["pet_shops_pet_food_and_supplies"]},{"dataType":"enum","enums":["petroleum_and_petroleum_products"]},{"dataType":"enum","enums":["photo_developing"]},{"dataType":"enum","enums":["photographic_photocopy_microfilm_equipment_and_supplies"]},{"dataType":"enum","enums":["photographic_studios"]},{"dataType":"enum","enums":["picture_video_production"]},{"dataType":"enum","enums":["piece_goods_notions_and_other_dry_goods"]},{"dataType":"enum","enums":["plumbing_heating_equipment_and_supplies"]},{"dataType":"enum","enums":["political_organizations"]},{"dataType":"enum","enums":["postal_services_government_only"]},{"dataType":"enum","enums":["precious_stones_and_metals_watches_and_jewelry"]},{"dataType":"enum","enums":["professional_services"]},{"dataType":"enum","enums":["public_warehousing_and_storage"]},{"dataType":"enum","enums":["quick_copy_repro_and_blueprint"]},{"dataType":"enum","enums":["railroads"]},{"dataType":"enum","enums":["real_estate_agents_and_managers_rentals"]},{"dataType":"enum","enums":["record_stores"]},{"dataType":"enum","enums":["recreational_vehicle_rentals"]},{"dataType":"enum","enums":["religious_goods_stores"]},{"dataType":"enum","enums":["religious_organizations"]},{"dataType":"enum","enums":["roofing_siding_sheet_metal"]},{"dataType":"enum","enums":["secretarial_support_services"]},{"dataType":"enum","enums":["security_brokers_dealers"]},{"dataType":"enum","enums":["service_stations"]},{"dataType":"enum","enums":["sewing_needlework_fabric_and_piece_goods_stores"]},{"dataType":"enum","enums":["shoe_repair_hat_cleaning"]},{"dataType":"enum","enums":["shoe_stores"]},{"dataType":"enum","enums":["small_appliance_repair"]},{"dataType":"enum","enums":["snowmobile_dealers"]},{"dataType":"enum","enums":["special_trade_services"]},{"dataType":"enum","enums":["specialty_cleaning"]},{"dataType":"enum","enums":["sporting_goods_stores"]},{"dataType":"enum","enums":["sporting_recreation_camps"]},{"dataType":"enum","enums":["sports_and_riding_apparel_stores"]},{"dataType":"enum","enums":["sports_clubs_fields"]},{"dataType":"enum","enums":["stamp_and_coin_stores"]},{"dataType":"enum","enums":["stationary_office_supplies_printing_and_writing_paper"]},{"dataType":"enum","enums":["stationery_stores_office_and_school_supply_stores"]},{"dataType":"enum","enums":["swimming_pools_sales"]},{"dataType":"enum","enums":["t_ui_travel_germany"]},{"dataType":"enum","enums":["tailors_alterations"]},{"dataType":"enum","enums":["tax_payments_government_agencies"]},{"dataType":"enum","enums":["tax_preparation_services"]},{"dataType":"enum","enums":["taxicabs_limousines"]},{"dataType":"enum","enums":["telecommunication_equipment_and_telephone_sales"]},{"dataType":"enum","enums":["telecommunication_services"]},{"dataType":"enum","enums":["telegraph_services"]},{"dataType":"enum","enums":["tent_and_awning_shops"]},{"dataType":"enum","enums":["testing_laboratories"]},{"dataType":"enum","enums":["theatrical_ticket_agencies"]},{"dataType":"enum","enums":["timeshares"]},{"dataType":"enum","enums":["tire_retreading_and_repair"]},{"dataType":"enum","enums":["tolls_bridge_fees"]},{"dataType":"enum","enums":["tourist_attractions_and_exhibits"]},{"dataType":"enum","enums":["towing_services"]},{"dataType":"enum","enums":["trailer_parks_campgrounds"]},{"dataType":"enum","enums":["transportation_services"]},{"dataType":"enum","enums":["travel_agencies_tour_operators"]},{"dataType":"enum","enums":["truck_stop_iteration"]},{"dataType":"enum","enums":["truck_utility_trailer_rentals"]},{"dataType":"enum","enums":["typesetting_plate_making_and_related_services"]},{"dataType":"enum","enums":["typewriter_stores"]},{"dataType":"enum","enums":["u_s_federal_government_agencies_or_departments"]},{"dataType":"enum","enums":["uniforms_commercial_clothing"]},{"dataType":"enum","enums":["used_merchandise_and_secondhand_stores"]},{"dataType":"enum","enums":["utilities"]},{"dataType":"enum","enums":["variety_stores"]},{"dataType":"enum","enums":["veterinary_services"]},{"dataType":"enum","enums":["video_amusement_game_supplies"]},{"dataType":"enum","enums":["video_game_arcades"]},{"dataType":"enum","enums":["video_tape_rental_stores"]},{"dataType":"enum","enums":["vocational_trade_schools"]},{"dataType":"enum","enums":["watch_jewelry_repair"]},{"dataType":"enum","enums":["welding_repair"]},{"dataType":"enum","enums":["wholesale_clubs"]},{"dataType":"enum","enums":["wig_and_toupee_stores"]},{"dataType":"enum","enums":["wires_money_orders"]},{"dataType":"enum","enums":["womens_accessory_and_specialty_shops"]},{"dataType":"enum","enums":["womens_ready_to_wear_stores"]},{"dataType":"enum","enums":["wrecking_and_salvage_yards"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Card.SpendingControls.SpendingLimit.Category": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["ac_refrigeration_repair"]},{"dataType":"enum","enums":["accounting_bookkeeping_services"]},{"dataType":"enum","enums":["advertising_services"]},{"dataType":"enum","enums":["agricultural_cooperative"]},{"dataType":"enum","enums":["airlines_air_carriers"]},{"dataType":"enum","enums":["airports_flying_fields"]},{"dataType":"enum","enums":["ambulance_services"]},{"dataType":"enum","enums":["amusement_parks_carnivals"]},{"dataType":"enum","enums":["antique_reproductions"]},{"dataType":"enum","enums":["antique_shops"]},{"dataType":"enum","enums":["aquariums"]},{"dataType":"enum","enums":["architectural_surveying_services"]},{"dataType":"enum","enums":["art_dealers_and_galleries"]},{"dataType":"enum","enums":["artists_supply_and_craft_shops"]},{"dataType":"enum","enums":["auto_and_home_supply_stores"]},{"dataType":"enum","enums":["auto_body_repair_shops"]},{"dataType":"enum","enums":["auto_paint_shops"]},{"dataType":"enum","enums":["auto_service_shops"]},{"dataType":"enum","enums":["automated_cash_disburse"]},{"dataType":"enum","enums":["automated_fuel_dispensers"]},{"dataType":"enum","enums":["automobile_associations"]},{"dataType":"enum","enums":["automotive_parts_and_accessories_stores"]},{"dataType":"enum","enums":["automotive_tire_stores"]},{"dataType":"enum","enums":["bail_and_bond_payments"]},{"dataType":"enum","enums":["bakeries"]},{"dataType":"enum","enums":["bands_orchestras"]},{"dataType":"enum","enums":["barber_and_beauty_shops"]},{"dataType":"enum","enums":["betting_casino_gambling"]},{"dataType":"enum","enums":["bicycle_shops"]},{"dataType":"enum","enums":["billiard_pool_establishments"]},{"dataType":"enum","enums":["boat_dealers"]},{"dataType":"enum","enums":["boat_rentals_and_leases"]},{"dataType":"enum","enums":["book_stores"]},{"dataType":"enum","enums":["books_periodicals_and_newspapers"]},{"dataType":"enum","enums":["bowling_alleys"]},{"dataType":"enum","enums":["bus_lines"]},{"dataType":"enum","enums":["business_secretarial_schools"]},{"dataType":"enum","enums":["buying_shopping_services"]},{"dataType":"enum","enums":["cable_satellite_and_other_pay_television_and_radio"]},{"dataType":"enum","enums":["camera_and_photographic_supply_stores"]},{"dataType":"enum","enums":["candy_nut_and_confectionery_stores"]},{"dataType":"enum","enums":["car_and_truck_dealers_new_used"]},{"dataType":"enum","enums":["car_and_truck_dealers_used_only"]},{"dataType":"enum","enums":["car_rental_agencies"]},{"dataType":"enum","enums":["car_washes"]},{"dataType":"enum","enums":["carpentry_services"]},{"dataType":"enum","enums":["carpet_upholstery_cleaning"]},{"dataType":"enum","enums":["caterers"]},{"dataType":"enum","enums":["charitable_and_social_service_organizations_fundraising"]},{"dataType":"enum","enums":["chemicals_and_allied_products"]},{"dataType":"enum","enums":["child_care_services"]},{"dataType":"enum","enums":["childrens_and_infants_wear_stores"]},{"dataType":"enum","enums":["chiropodists_podiatrists"]},{"dataType":"enum","enums":["chiropractors"]},{"dataType":"enum","enums":["cigar_stores_and_stands"]},{"dataType":"enum","enums":["civic_social_fraternal_associations"]},{"dataType":"enum","enums":["cleaning_and_maintenance"]},{"dataType":"enum","enums":["clothing_rental"]},{"dataType":"enum","enums":["colleges_universities"]},{"dataType":"enum","enums":["commercial_equipment"]},{"dataType":"enum","enums":["commercial_footwear"]},{"dataType":"enum","enums":["commercial_photography_art_and_graphics"]},{"dataType":"enum","enums":["commuter_transport_and_ferries"]},{"dataType":"enum","enums":["computer_network_services"]},{"dataType":"enum","enums":["computer_programming"]},{"dataType":"enum","enums":["computer_repair"]},{"dataType":"enum","enums":["computer_software_stores"]},{"dataType":"enum","enums":["computers_peripherals_and_software"]},{"dataType":"enum","enums":["concrete_work_services"]},{"dataType":"enum","enums":["construction_materials"]},{"dataType":"enum","enums":["consulting_public_relations"]},{"dataType":"enum","enums":["correspondence_schools"]},{"dataType":"enum","enums":["cosmetic_stores"]},{"dataType":"enum","enums":["counseling_services"]},{"dataType":"enum","enums":["country_clubs"]},{"dataType":"enum","enums":["courier_services"]},{"dataType":"enum","enums":["court_costs"]},{"dataType":"enum","enums":["credit_reporting_agencies"]},{"dataType":"enum","enums":["cruise_lines"]},{"dataType":"enum","enums":["dairy_products_stores"]},{"dataType":"enum","enums":["dance_hall_studios_schools"]},{"dataType":"enum","enums":["dating_escort_services"]},{"dataType":"enum","enums":["dentists_orthodontists"]},{"dataType":"enum","enums":["department_stores"]},{"dataType":"enum","enums":["detective_agencies"]},{"dataType":"enum","enums":["digital_goods_applications"]},{"dataType":"enum","enums":["digital_goods_games"]},{"dataType":"enum","enums":["digital_goods_large_volume"]},{"dataType":"enum","enums":["digital_goods_media"]},{"dataType":"enum","enums":["direct_marketing_catalog_merchant"]},{"dataType":"enum","enums":["direct_marketing_combination_catalog_and_retail_merchant"]},{"dataType":"enum","enums":["direct_marketing_inbound_telemarketing"]},{"dataType":"enum","enums":["direct_marketing_insurance_services"]},{"dataType":"enum","enums":["direct_marketing_other"]},{"dataType":"enum","enums":["direct_marketing_outbound_telemarketing"]},{"dataType":"enum","enums":["direct_marketing_subscription"]},{"dataType":"enum","enums":["direct_marketing_travel"]},{"dataType":"enum","enums":["discount_stores"]},{"dataType":"enum","enums":["doctors"]},{"dataType":"enum","enums":["door_to_door_sales"]},{"dataType":"enum","enums":["drapery_window_covering_and_upholstery_stores"]},{"dataType":"enum","enums":["drinking_places"]},{"dataType":"enum","enums":["drug_stores_and_pharmacies"]},{"dataType":"enum","enums":["drugs_drug_proprietaries_and_druggist_sundries"]},{"dataType":"enum","enums":["dry_cleaners"]},{"dataType":"enum","enums":["durable_goods"]},{"dataType":"enum","enums":["duty_free_stores"]},{"dataType":"enum","enums":["eating_places_restaurants"]},{"dataType":"enum","enums":["educational_services"]},{"dataType":"enum","enums":["electric_razor_stores"]},{"dataType":"enum","enums":["electric_vehicle_charging"]},{"dataType":"enum","enums":["electrical_parts_and_equipment"]},{"dataType":"enum","enums":["electrical_services"]},{"dataType":"enum","enums":["electronics_repair_shops"]},{"dataType":"enum","enums":["electronics_stores"]},{"dataType":"enum","enums":["elementary_secondary_schools"]},{"dataType":"enum","enums":["emergency_services_gcas_visa_use_only"]},{"dataType":"enum","enums":["employment_temp_agencies"]},{"dataType":"enum","enums":["equipment_rental"]},{"dataType":"enum","enums":["exterminating_services"]},{"dataType":"enum","enums":["family_clothing_stores"]},{"dataType":"enum","enums":["fast_food_restaurants"]},{"dataType":"enum","enums":["financial_institutions"]},{"dataType":"enum","enums":["fines_government_administrative_entities"]},{"dataType":"enum","enums":["fireplace_fireplace_screens_and_accessories_stores"]},{"dataType":"enum","enums":["floor_covering_stores"]},{"dataType":"enum","enums":["florists"]},{"dataType":"enum","enums":["florists_supplies_nursery_stock_and_flowers"]},{"dataType":"enum","enums":["freezer_and_locker_meat_provisioners"]},{"dataType":"enum","enums":["fuel_dealers_non_automotive"]},{"dataType":"enum","enums":["funeral_services_crematories"]},{"dataType":"enum","enums":["furniture_home_furnishings_and_equipment_stores_except_appliances"]},{"dataType":"enum","enums":["furniture_repair_refinishing"]},{"dataType":"enum","enums":["furriers_and_fur_shops"]},{"dataType":"enum","enums":["general_services"]},{"dataType":"enum","enums":["gift_card_novelty_and_souvenir_shops"]},{"dataType":"enum","enums":["glass_paint_and_wallpaper_stores"]},{"dataType":"enum","enums":["glassware_crystal_stores"]},{"dataType":"enum","enums":["golf_courses_public"]},{"dataType":"enum","enums":["government_licensed_horse_dog_racing_us_region_only"]},{"dataType":"enum","enums":["government_licensed_online_casions_online_gambling_us_region_only"]},{"dataType":"enum","enums":["government_owned_lotteries_non_us_region"]},{"dataType":"enum","enums":["government_owned_lotteries_us_region_only"]},{"dataType":"enum","enums":["government_services"]},{"dataType":"enum","enums":["grocery_stores_supermarkets"]},{"dataType":"enum","enums":["hardware_equipment_and_supplies"]},{"dataType":"enum","enums":["hardware_stores"]},{"dataType":"enum","enums":["health_and_beauty_spas"]},{"dataType":"enum","enums":["hearing_aids_sales_and_supplies"]},{"dataType":"enum","enums":["heating_plumbing_a_c"]},{"dataType":"enum","enums":["hobby_toy_and_game_shops"]},{"dataType":"enum","enums":["home_supply_warehouse_stores"]},{"dataType":"enum","enums":["hospitals"]},{"dataType":"enum","enums":["hotels_motels_and_resorts"]},{"dataType":"enum","enums":["household_appliance_stores"]},{"dataType":"enum","enums":["industrial_supplies"]},{"dataType":"enum","enums":["information_retrieval_services"]},{"dataType":"enum","enums":["insurance_default"]},{"dataType":"enum","enums":["insurance_underwriting_premiums"]},{"dataType":"enum","enums":["intra_company_purchases"]},{"dataType":"enum","enums":["jewelry_stores_watches_clocks_and_silverware_stores"]},{"dataType":"enum","enums":["landscaping_services"]},{"dataType":"enum","enums":["laundries"]},{"dataType":"enum","enums":["laundry_cleaning_services"]},{"dataType":"enum","enums":["legal_services_attorneys"]},{"dataType":"enum","enums":["luggage_and_leather_goods_stores"]},{"dataType":"enum","enums":["lumber_building_materials_stores"]},{"dataType":"enum","enums":["manual_cash_disburse"]},{"dataType":"enum","enums":["marinas_service_and_supplies"]},{"dataType":"enum","enums":["marketplaces"]},{"dataType":"enum","enums":["masonry_stonework_and_plaster"]},{"dataType":"enum","enums":["massage_parlors"]},{"dataType":"enum","enums":["medical_and_dental_labs"]},{"dataType":"enum","enums":["medical_dental_ophthalmic_and_hospital_equipment_and_supplies"]},{"dataType":"enum","enums":["medical_services"]},{"dataType":"enum","enums":["membership_organizations"]},{"dataType":"enum","enums":["mens_and_boys_clothing_and_accessories_stores"]},{"dataType":"enum","enums":["mens_womens_clothing_stores"]},{"dataType":"enum","enums":["metal_service_centers"]},{"dataType":"enum","enums":["miscellaneous"]},{"dataType":"enum","enums":["miscellaneous_apparel_and_accessory_shops"]},{"dataType":"enum","enums":["miscellaneous_auto_dealers"]},{"dataType":"enum","enums":["miscellaneous_business_services"]},{"dataType":"enum","enums":["miscellaneous_food_stores"]},{"dataType":"enum","enums":["miscellaneous_general_merchandise"]},{"dataType":"enum","enums":["miscellaneous_general_services"]},{"dataType":"enum","enums":["miscellaneous_home_furnishing_specialty_stores"]},{"dataType":"enum","enums":["miscellaneous_publishing_and_printing"]},{"dataType":"enum","enums":["miscellaneous_recreation_services"]},{"dataType":"enum","enums":["miscellaneous_repair_shops"]},{"dataType":"enum","enums":["miscellaneous_specialty_retail"]},{"dataType":"enum","enums":["mobile_home_dealers"]},{"dataType":"enum","enums":["motion_picture_theaters"]},{"dataType":"enum","enums":["motor_freight_carriers_and_trucking"]},{"dataType":"enum","enums":["motor_homes_dealers"]},{"dataType":"enum","enums":["motor_vehicle_supplies_and_new_parts"]},{"dataType":"enum","enums":["motorcycle_shops_and_dealers"]},{"dataType":"enum","enums":["motorcycle_shops_dealers"]},{"dataType":"enum","enums":["music_stores_musical_instruments_pianos_and_sheet_music"]},{"dataType":"enum","enums":["news_dealers_and_newsstands"]},{"dataType":"enum","enums":["non_fi_money_orders"]},{"dataType":"enum","enums":["non_fi_stored_value_card_purchase_load"]},{"dataType":"enum","enums":["nondurable_goods"]},{"dataType":"enum","enums":["nurseries_lawn_and_garden_supply_stores"]},{"dataType":"enum","enums":["nursing_personal_care"]},{"dataType":"enum","enums":["office_and_commercial_furniture"]},{"dataType":"enum","enums":["opticians_eyeglasses"]},{"dataType":"enum","enums":["optometrists_ophthalmologist"]},{"dataType":"enum","enums":["orthopedic_goods_prosthetic_devices"]},{"dataType":"enum","enums":["osteopaths"]},{"dataType":"enum","enums":["package_stores_beer_wine_and_liquor"]},{"dataType":"enum","enums":["paints_varnishes_and_supplies"]},{"dataType":"enum","enums":["parking_lots_garages"]},{"dataType":"enum","enums":["passenger_railways"]},{"dataType":"enum","enums":["pawn_shops"]},{"dataType":"enum","enums":["pet_shops_pet_food_and_supplies"]},{"dataType":"enum","enums":["petroleum_and_petroleum_products"]},{"dataType":"enum","enums":["photo_developing"]},{"dataType":"enum","enums":["photographic_photocopy_microfilm_equipment_and_supplies"]},{"dataType":"enum","enums":["photographic_studios"]},{"dataType":"enum","enums":["picture_video_production"]},{"dataType":"enum","enums":["piece_goods_notions_and_other_dry_goods"]},{"dataType":"enum","enums":["plumbing_heating_equipment_and_supplies"]},{"dataType":"enum","enums":["political_organizations"]},{"dataType":"enum","enums":["postal_services_government_only"]},{"dataType":"enum","enums":["precious_stones_and_metals_watches_and_jewelry"]},{"dataType":"enum","enums":["professional_services"]},{"dataType":"enum","enums":["public_warehousing_and_storage"]},{"dataType":"enum","enums":["quick_copy_repro_and_blueprint"]},{"dataType":"enum","enums":["railroads"]},{"dataType":"enum","enums":["real_estate_agents_and_managers_rentals"]},{"dataType":"enum","enums":["record_stores"]},{"dataType":"enum","enums":["recreational_vehicle_rentals"]},{"dataType":"enum","enums":["religious_goods_stores"]},{"dataType":"enum","enums":["religious_organizations"]},{"dataType":"enum","enums":["roofing_siding_sheet_metal"]},{"dataType":"enum","enums":["secretarial_support_services"]},{"dataType":"enum","enums":["security_brokers_dealers"]},{"dataType":"enum","enums":["service_stations"]},{"dataType":"enum","enums":["sewing_needlework_fabric_and_piece_goods_stores"]},{"dataType":"enum","enums":["shoe_repair_hat_cleaning"]},{"dataType":"enum","enums":["shoe_stores"]},{"dataType":"enum","enums":["small_appliance_repair"]},{"dataType":"enum","enums":["snowmobile_dealers"]},{"dataType":"enum","enums":["special_trade_services"]},{"dataType":"enum","enums":["specialty_cleaning"]},{"dataType":"enum","enums":["sporting_goods_stores"]},{"dataType":"enum","enums":["sporting_recreation_camps"]},{"dataType":"enum","enums":["sports_and_riding_apparel_stores"]},{"dataType":"enum","enums":["sports_clubs_fields"]},{"dataType":"enum","enums":["stamp_and_coin_stores"]},{"dataType":"enum","enums":["stationary_office_supplies_printing_and_writing_paper"]},{"dataType":"enum","enums":["stationery_stores_office_and_school_supply_stores"]},{"dataType":"enum","enums":["swimming_pools_sales"]},{"dataType":"enum","enums":["t_ui_travel_germany"]},{"dataType":"enum","enums":["tailors_alterations"]},{"dataType":"enum","enums":["tax_payments_government_agencies"]},{"dataType":"enum","enums":["tax_preparation_services"]},{"dataType":"enum","enums":["taxicabs_limousines"]},{"dataType":"enum","enums":["telecommunication_equipment_and_telephone_sales"]},{"dataType":"enum","enums":["telecommunication_services"]},{"dataType":"enum","enums":["telegraph_services"]},{"dataType":"enum","enums":["tent_and_awning_shops"]},{"dataType":"enum","enums":["testing_laboratories"]},{"dataType":"enum","enums":["theatrical_ticket_agencies"]},{"dataType":"enum","enums":["timeshares"]},{"dataType":"enum","enums":["tire_retreading_and_repair"]},{"dataType":"enum","enums":["tolls_bridge_fees"]},{"dataType":"enum","enums":["tourist_attractions_and_exhibits"]},{"dataType":"enum","enums":["towing_services"]},{"dataType":"enum","enums":["trailer_parks_campgrounds"]},{"dataType":"enum","enums":["transportation_services"]},{"dataType":"enum","enums":["travel_agencies_tour_operators"]},{"dataType":"enum","enums":["truck_stop_iteration"]},{"dataType":"enum","enums":["truck_utility_trailer_rentals"]},{"dataType":"enum","enums":["typesetting_plate_making_and_related_services"]},{"dataType":"enum","enums":["typewriter_stores"]},{"dataType":"enum","enums":["u_s_federal_government_agencies_or_departments"]},{"dataType":"enum","enums":["uniforms_commercial_clothing"]},{"dataType":"enum","enums":["used_merchandise_and_secondhand_stores"]},{"dataType":"enum","enums":["utilities"]},{"dataType":"enum","enums":["variety_stores"]},{"dataType":"enum","enums":["veterinary_services"]},{"dataType":"enum","enums":["video_amusement_game_supplies"]},{"dataType":"enum","enums":["video_game_arcades"]},{"dataType":"enum","enums":["video_tape_rental_stores"]},{"dataType":"enum","enums":["vocational_trade_schools"]},{"dataType":"enum","enums":["watch_jewelry_repair"]},{"dataType":"enum","enums":["welding_repair"]},{"dataType":"enum","enums":["wholesale_clubs"]},{"dataType":"enum","enums":["wig_and_toupee_stores"]},{"dataType":"enum","enums":["wires_money_orders"]},{"dataType":"enum","enums":["womens_accessory_and_specialty_shops"]},{"dataType":"enum","enums":["womens_ready_to_wear_stores"]},{"dataType":"enum","enums":["wrecking_and_salvage_yards"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Card.SpendingControls.SpendingLimit.Interval": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["all_time"]},{"dataType":"enum","enums":["daily"]},{"dataType":"enum","enums":["monthly"]},{"dataType":"enum","enums":["per_authorization"]},{"dataType":"enum","enums":["weekly"]},{"dataType":"enum","enums":["yearly"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Card.SpendingControls.SpendingLimit": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double","required":true},
            "categories": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.Issuing.Card.SpendingControls.SpendingLimit.Category"}},{"dataType":"enum","enums":[null]}],"required":true},
            "interval": {"ref":"stripe.Stripe.Issuing.Card.SpendingControls.SpendingLimit.Interval","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Card.SpendingControls": {
        "dataType": "refObject",
        "properties": {
            "allowed_categories": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.Issuing.Card.SpendingControls.AllowedCategory"}},{"dataType":"enum","enums":[null]}],"required":true},
            "allowed_merchant_countries": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
            "blocked_categories": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.Issuing.Card.SpendingControls.BlockedCategory"}},{"dataType":"enum","enums":[null]}],"required":true},
            "blocked_merchant_countries": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
            "spending_limits": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Issuing.Card.SpendingControls.SpendingLimit"}},{"dataType":"enum","enums":[null]}],"required":true},
            "spending_limits_currency": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Card.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["canceled"]},{"dataType":"enum","enums":["inactive"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Card.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["physical"]},{"dataType":"enum","enums":["virtual"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Card.Wallets.ApplePay.IneligibleReason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["missing_agreement"]},{"dataType":"enum","enums":["missing_cardholder_contact"]},{"dataType":"enum","enums":["unsupported_region"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Card.Wallets.ApplePay": {
        "dataType": "refObject",
        "properties": {
            "eligible": {"dataType":"boolean","required":true},
            "ineligible_reason": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Card.Wallets.ApplePay.IneligibleReason"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Card.Wallets.GooglePay.IneligibleReason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["missing_agreement"]},{"dataType":"enum","enums":["missing_cardholder_contact"]},{"dataType":"enum","enums":["unsupported_region"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Card.Wallets.GooglePay": {
        "dataType": "refObject",
        "properties": {
            "eligible": {"dataType":"boolean","required":true},
            "ineligible_reason": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Card.Wallets.GooglePay.IneligibleReason"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Card.Wallets": {
        "dataType": "refObject",
        "properties": {
            "apple_pay": {"ref":"stripe.Stripe.Issuing.Card.Wallets.ApplePay","required":true},
            "google_pay": {"ref":"stripe.Stripe.Issuing.Card.Wallets.GooglePay","required":true},
            "primary_account_identifier": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.Fleet.CardholderPromptData": {
        "dataType": "refObject",
        "properties": {
            "alphanumeric_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "driver_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "odometer": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "unspecified_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "user_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "vehicle_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.Fleet.PurchaseType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["fuel_and_non_fuel_purchase"]},{"dataType":"enum","enums":["fuel_purchase"]},{"dataType":"enum","enums":["non_fuel_purchase"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.Fleet.ReportedBreakdown.Fuel": {
        "dataType": "refObject",
        "properties": {
            "gross_amount_decimal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.Fleet.ReportedBreakdown.NonFuel": {
        "dataType": "refObject",
        "properties": {
            "gross_amount_decimal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.Fleet.ReportedBreakdown.Tax": {
        "dataType": "refObject",
        "properties": {
            "local_amount_decimal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "national_amount_decimal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.Fleet.ReportedBreakdown": {
        "dataType": "refObject",
        "properties": {
            "fuel": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Authorization.Fleet.ReportedBreakdown.Fuel"},{"dataType":"enum","enums":[null]}],"required":true},
            "non_fuel": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Authorization.Fleet.ReportedBreakdown.NonFuel"},{"dataType":"enum","enums":[null]}],"required":true},
            "tax": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Authorization.Fleet.ReportedBreakdown.Tax"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.Fleet.ServiceType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["full_service"]},{"dataType":"enum","enums":["non_fuel_transaction"]},{"dataType":"enum","enums":["self_service"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.Fleet": {
        "dataType": "refObject",
        "properties": {
            "cardholder_prompt_data": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Authorization.Fleet.CardholderPromptData"},{"dataType":"enum","enums":[null]}],"required":true},
            "purchase_type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Authorization.Fleet.PurchaseType"},{"dataType":"enum","enums":[null]}],"required":true},
            "reported_breakdown": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Authorization.Fleet.ReportedBreakdown"},{"dataType":"enum","enums":[null]}],"required":true},
            "service_type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Authorization.Fleet.ServiceType"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.Fuel.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["diesel"]},{"dataType":"enum","enums":["other"]},{"dataType":"enum","enums":["unleaded_plus"]},{"dataType":"enum","enums":["unleaded_regular"]},{"dataType":"enum","enums":["unleaded_super"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.Fuel.Unit": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["charging_minute"]},{"dataType":"enum","enums":["imperial_gallon"]},{"dataType":"enum","enums":["kilogram"]},{"dataType":"enum","enums":["kilowatt_hour"]},{"dataType":"enum","enums":["liter"]},{"dataType":"enum","enums":["other"]},{"dataType":"enum","enums":["pound"]},{"dataType":"enum","enums":["us_gallon"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.Fuel": {
        "dataType": "refObject",
        "properties": {
            "industry_product_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "quantity_decimal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Authorization.Fuel.Type"},{"dataType":"enum","enums":[null]}],"required":true},
            "unit": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Authorization.Fuel.Unit"},{"dataType":"enum","enums":[null]}],"required":true},
            "unit_cost_decimal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.MerchantData": {
        "dataType": "refObject",
        "properties": {
            "category": {"dataType":"string","required":true},
            "category_code": {"dataType":"string","required":true},
            "city": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "network_id": {"dataType":"string","required":true},
            "postal_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "state": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "terminal_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.NetworkData": {
        "dataType": "refObject",
        "properties": {
            "acquiring_institution_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "system_trace_audit_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "transaction_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.PendingRequest.AmountDetails": {
        "dataType": "refObject",
        "properties": {
            "atm_fee": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "cashback_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.PendingRequest": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double","required":true},
            "amount_details": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Authorization.PendingRequest.AmountDetails"},{"dataType":"enum","enums":[null]}],"required":true},
            "currency": {"dataType":"string","required":true},
            "is_amount_controllable": {"dataType":"boolean","required":true},
            "merchant_amount": {"dataType":"double","required":true},
            "merchant_currency": {"dataType":"string","required":true},
            "network_risk_score": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.RequestHistory.AmountDetails": {
        "dataType": "refObject",
        "properties": {
            "atm_fee": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "cashback_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.RequestHistory.Reason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["account_disabled"]},{"dataType":"enum","enums":["card_active"]},{"dataType":"enum","enums":["card_canceled"]},{"dataType":"enum","enums":["card_expired"]},{"dataType":"enum","enums":["card_inactive"]},{"dataType":"enum","enums":["cardholder_blocked"]},{"dataType":"enum","enums":["cardholder_inactive"]},{"dataType":"enum","enums":["cardholder_verification_required"]},{"dataType":"enum","enums":["insecure_authorization_method"]},{"dataType":"enum","enums":["insufficient_funds"]},{"dataType":"enum","enums":["not_allowed"]},{"dataType":"enum","enums":["pin_blocked"]},{"dataType":"enum","enums":["spending_controls"]},{"dataType":"enum","enums":["suspected_fraud"]},{"dataType":"enum","enums":["verification_failed"]},{"dataType":"enum","enums":["webhook_approved"]},{"dataType":"enum","enums":["webhook_declined"]},{"dataType":"enum","enums":["webhook_error"]},{"dataType":"enum","enums":["webhook_timeout"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.RequestHistory": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double","required":true},
            "amount_details": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Authorization.RequestHistory.AmountDetails"},{"dataType":"enum","enums":[null]}],"required":true},
            "approved": {"dataType":"boolean","required":true},
            "authorization_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "created": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "merchant_amount": {"dataType":"double","required":true},
            "merchant_currency": {"dataType":"string","required":true},
            "network_risk_score": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "reason": {"ref":"stripe.Stripe.Issuing.Authorization.RequestHistory.Reason","required":true},
            "reason_message": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "requested_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["closed"]},{"dataType":"enum","enums":["pending"]},{"dataType":"enum","enums":["reversed"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Token.Network": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["mastercard"]},{"dataType":"enum","enums":["visa"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Token.NetworkData.Device.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["other"]},{"dataType":"enum","enums":["phone"]},{"dataType":"enum","enums":["watch"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Token.NetworkData.Device": {
        "dataType": "refObject",
        "properties": {
            "device_fingerprint": {"dataType":"string"},
            "ip_address": {"dataType":"string"},
            "location": {"dataType":"string"},
            "name": {"dataType":"string"},
            "phone_number": {"dataType":"string"},
            "type": {"ref":"stripe.Stripe.Issuing.Token.NetworkData.Device.Type"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Token.NetworkData.Mastercard": {
        "dataType": "refObject",
        "properties": {
            "card_reference_id": {"dataType":"string"},
            "token_reference_id": {"dataType":"string","required":true},
            "token_requestor_id": {"dataType":"string","required":true},
            "token_requestor_name": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Token.NetworkData.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["mastercard"]},{"dataType":"enum","enums":["visa"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Token.NetworkData.Visa": {
        "dataType": "refObject",
        "properties": {
            "card_reference_id": {"dataType":"string","required":true},
            "token_reference_id": {"dataType":"string","required":true},
            "token_requestor_id": {"dataType":"string","required":true},
            "token_risk_score": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Token.NetworkData.WalletProvider.CardNumberSource": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["app"]},{"dataType":"enum","enums":["manual"]},{"dataType":"enum","enums":["on_file"]},{"dataType":"enum","enums":["other"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Token.NetworkData.WalletProvider.CardholderAddress": {
        "dataType": "refObject",
        "properties": {
            "line1": {"dataType":"string","required":true},
            "postal_code": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Token.NetworkData.WalletProvider.ReasonCode": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["account_card_too_new"]},{"dataType":"enum","enums":["account_recently_changed"]},{"dataType":"enum","enums":["account_too_new"]},{"dataType":"enum","enums":["account_too_new_since_launch"]},{"dataType":"enum","enums":["additional_device"]},{"dataType":"enum","enums":["data_expired"]},{"dataType":"enum","enums":["defer_id_v_decision"]},{"dataType":"enum","enums":["device_recently_lost"]},{"dataType":"enum","enums":["good_activity_history"]},{"dataType":"enum","enums":["has_suspended_tokens"]},{"dataType":"enum","enums":["high_risk"]},{"dataType":"enum","enums":["inactive_account"]},{"dataType":"enum","enums":["long_account_tenure"]},{"dataType":"enum","enums":["low_account_score"]},{"dataType":"enum","enums":["low_device_score"]},{"dataType":"enum","enums":["low_phone_number_score"]},{"dataType":"enum","enums":["network_service_error"]},{"dataType":"enum","enums":["outside_home_territory"]},{"dataType":"enum","enums":["provisioning_cardholder_mismatch"]},{"dataType":"enum","enums":["provisioning_device_and_cardholder_mismatch"]},{"dataType":"enum","enums":["provisioning_device_mismatch"]},{"dataType":"enum","enums":["same_device_no_prior_authentication"]},{"dataType":"enum","enums":["same_device_successful_prior_authentication"]},{"dataType":"enum","enums":["software_update"]},{"dataType":"enum","enums":["suspicious_activity"]},{"dataType":"enum","enums":["too_many_different_cardholders"]},{"dataType":"enum","enums":["too_many_recent_attempts"]},{"dataType":"enum","enums":["too_many_recent_tokens"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Token.NetworkData.WalletProvider.SuggestedDecision": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["approve"]},{"dataType":"enum","enums":["decline"]},{"dataType":"enum","enums":["require_auth"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Token.NetworkData.WalletProvider": {
        "dataType": "refObject",
        "properties": {
            "account_id": {"dataType":"string"},
            "account_trust_score": {"dataType":"double"},
            "card_number_source": {"ref":"stripe.Stripe.Issuing.Token.NetworkData.WalletProvider.CardNumberSource"},
            "cardholder_address": {"ref":"stripe.Stripe.Issuing.Token.NetworkData.WalletProvider.CardholderAddress"},
            "cardholder_name": {"dataType":"string"},
            "device_trust_score": {"dataType":"double"},
            "hashed_account_email_address": {"dataType":"string"},
            "reason_codes": {"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.Issuing.Token.NetworkData.WalletProvider.ReasonCode"}},
            "suggested_decision": {"ref":"stripe.Stripe.Issuing.Token.NetworkData.WalletProvider.SuggestedDecision"},
            "suggested_decision_version": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Token.NetworkData": {
        "dataType": "refObject",
        "properties": {
            "device": {"ref":"stripe.Stripe.Issuing.Token.NetworkData.Device"},
            "mastercard": {"ref":"stripe.Stripe.Issuing.Token.NetworkData.Mastercard"},
            "type": {"ref":"stripe.Stripe.Issuing.Token.NetworkData.Type","required":true},
            "visa": {"ref":"stripe.Stripe.Issuing.Token.NetworkData.Visa"},
            "wallet_provider": {"ref":"stripe.Stripe.Issuing.Token.NetworkData.WalletProvider"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Token.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["deleted"]},{"dataType":"enum","enums":["requested"]},{"dataType":"enum","enums":["suspended"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Token.WalletProvider": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["apple_pay"]},{"dataType":"enum","enums":["google_pay"]},{"dataType":"enum","enums":["samsung_pay"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Token": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["issuing.token"],"required":true},
            "card": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Issuing.Card"}],"required":true},
            "created": {"dataType":"double","required":true},
            "device_fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "last4": {"dataType":"string"},
            "livemode": {"dataType":"boolean","required":true},
            "network": {"ref":"stripe.Stripe.Issuing.Token.Network","required":true},
            "network_data": {"ref":"stripe.Stripe.Issuing.Token.NetworkData"},
            "network_updated_at": {"dataType":"double","required":true},
            "status": {"ref":"stripe.Stripe.Issuing.Token.Status","required":true},
            "wallet_provider": {"ref":"stripe.Stripe.Issuing.Token.WalletProvider"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Transaction.AmountDetails": {
        "dataType": "refObject",
        "properties": {
            "atm_fee": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "cashback_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["issuing.authorization"],"required":true},
            "amount": {"dataType":"double","required":true},
            "amount_details": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Authorization.AmountDetails"},{"dataType":"enum","enums":[null]}],"required":true},
            "approved": {"dataType":"boolean","required":true},
            "authorization_method": {"ref":"stripe.Stripe.Issuing.Authorization.AuthorizationMethod","required":true},
            "balance_transactions": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.BalanceTransaction"},"required":true},
            "card": {"ref":"stripe.Stripe.Issuing.Card","required":true},
            "cardholder": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Issuing.Cardholder"},{"dataType":"enum","enums":[null]}],"required":true},
            "created": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "fleet": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Authorization.Fleet"},{"dataType":"enum","enums":[null]}],"required":true},
            "fuel": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Authorization.Fuel"},{"dataType":"enum","enums":[null]}],"required":true},
            "livemode": {"dataType":"boolean","required":true},
            "merchant_amount": {"dataType":"double","required":true},
            "merchant_currency": {"dataType":"string","required":true},
            "merchant_data": {"ref":"stripe.Stripe.Issuing.Authorization.MerchantData","required":true},
            "metadata": {"ref":"stripe.Stripe.Metadata","required":true},
            "network_data": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Authorization.NetworkData"},{"dataType":"enum","enums":[null]}],"required":true},
            "pending_request": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Authorization.PendingRequest"},{"dataType":"enum","enums":[null]}],"required":true},
            "request_history": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Issuing.Authorization.RequestHistory"},"required":true},
            "status": {"ref":"stripe.Stripe.Issuing.Authorization.Status","required":true},
            "token": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Issuing.Token"},{"dataType":"enum","enums":[null]}]},
            "transactions": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Issuing.Transaction"},"required":true},
            "treasury": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Authorization.Treasury"},{"dataType":"enum","enums":[null]}]},
            "verification_data": {"ref":"stripe.Stripe.Issuing.Authorization.VerificationData","required":true},
            "wallet": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Dispute.Evidence.Canceled.ProductType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["merchandise"]},{"dataType":"enum","enums":["service"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Dispute.Evidence.Canceled.ReturnStatus": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["merchant_rejected"]},{"dataType":"enum","enums":["successful"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Dispute.Evidence.Canceled": {
        "dataType": "refObject",
        "properties": {
            "additional_documentation": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "canceled_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "cancellation_policy_provided": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}],"required":true},
            "cancellation_reason": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "expected_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "explanation": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "product_description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "product_type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Dispute.Evidence.Canceled.ProductType"},{"dataType":"enum","enums":[null]}],"required":true},
            "return_status": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Dispute.Evidence.Canceled.ReturnStatus"},{"dataType":"enum","enums":[null]}],"required":true},
            "returned_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Dispute.Evidence.Duplicate": {
        "dataType": "refObject",
        "properties": {
            "additional_documentation": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "card_statement": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "cash_receipt": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "check_image": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "explanation": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "original_transaction": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Dispute.Evidence.Fraudulent": {
        "dataType": "refObject",
        "properties": {
            "additional_documentation": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "explanation": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Dispute.Evidence.MerchandiseNotAsDescribed.ReturnStatus": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["merchant_rejected"]},{"dataType":"enum","enums":["successful"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Dispute.Evidence.MerchandiseNotAsDescribed": {
        "dataType": "refObject",
        "properties": {
            "additional_documentation": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "explanation": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "received_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "return_description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "return_status": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Dispute.Evidence.MerchandiseNotAsDescribed.ReturnStatus"},{"dataType":"enum","enums":[null]}],"required":true},
            "returned_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Dispute.Evidence.NoValidAuthorization": {
        "dataType": "refObject",
        "properties": {
            "additional_documentation": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "explanation": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Dispute.Evidence.NotReceived.ProductType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["merchandise"]},{"dataType":"enum","enums":["service"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Dispute.Evidence.NotReceived": {
        "dataType": "refObject",
        "properties": {
            "additional_documentation": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "expected_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "explanation": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "product_description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "product_type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Dispute.Evidence.NotReceived.ProductType"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Dispute.Evidence.Other.ProductType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["merchandise"]},{"dataType":"enum","enums":["service"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Dispute.Evidence.Other": {
        "dataType": "refObject",
        "properties": {
            "additional_documentation": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "explanation": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "product_description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "product_type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Dispute.Evidence.Other.ProductType"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Dispute.Evidence.Reason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["canceled"]},{"dataType":"enum","enums":["duplicate"]},{"dataType":"enum","enums":["fraudulent"]},{"dataType":"enum","enums":["merchandise_not_as_described"]},{"dataType":"enum","enums":["no_valid_authorization"]},{"dataType":"enum","enums":["not_received"]},{"dataType":"enum","enums":["other"]},{"dataType":"enum","enums":["service_not_as_described"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Dispute.Evidence.ServiceNotAsDescribed": {
        "dataType": "refObject",
        "properties": {
            "additional_documentation": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "canceled_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "cancellation_reason": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "explanation": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "received_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Dispute.Evidence": {
        "dataType": "refObject",
        "properties": {
            "canceled": {"ref":"stripe.Stripe.Issuing.Dispute.Evidence.Canceled"},
            "duplicate": {"ref":"stripe.Stripe.Issuing.Dispute.Evidence.Duplicate"},
            "fraudulent": {"ref":"stripe.Stripe.Issuing.Dispute.Evidence.Fraudulent"},
            "merchandise_not_as_described": {"ref":"stripe.Stripe.Issuing.Dispute.Evidence.MerchandiseNotAsDescribed"},
            "no_valid_authorization": {"ref":"stripe.Stripe.Issuing.Dispute.Evidence.NoValidAuthorization"},
            "not_received": {"ref":"stripe.Stripe.Issuing.Dispute.Evidence.NotReceived"},
            "other": {"ref":"stripe.Stripe.Issuing.Dispute.Evidence.Other"},
            "reason": {"ref":"stripe.Stripe.Issuing.Dispute.Evidence.Reason","required":true},
            "service_not_as_described": {"ref":"stripe.Stripe.Issuing.Dispute.Evidence.ServiceNotAsDescribed"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Dispute.LossReason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["cardholder_authentication_issuer_liability"]},{"dataType":"enum","enums":["eci5_token_transaction_with_tavv"]},{"dataType":"enum","enums":["excess_disputes_in_timeframe"]},{"dataType":"enum","enums":["has_not_met_the_minimum_dispute_amount_requirements"]},{"dataType":"enum","enums":["invalid_duplicate_dispute"]},{"dataType":"enum","enums":["invalid_incorrect_amount_dispute"]},{"dataType":"enum","enums":["invalid_no_authorization"]},{"dataType":"enum","enums":["invalid_use_of_disputes"]},{"dataType":"enum","enums":["merchandise_delivered_or_shipped"]},{"dataType":"enum","enums":["merchandise_or_service_as_described"]},{"dataType":"enum","enums":["not_cancelled"]},{"dataType":"enum","enums":["other"]},{"dataType":"enum","enums":["refund_issued"]},{"dataType":"enum","enums":["submitted_beyond_allowable_time_limit"]},{"dataType":"enum","enums":["transaction_3ds_required"]},{"dataType":"enum","enums":["transaction_approved_after_prior_fraud_dispute"]},{"dataType":"enum","enums":["transaction_authorized"]},{"dataType":"enum","enums":["transaction_electronically_read"]},{"dataType":"enum","enums":["transaction_qualifies_for_visa_easy_payment_service"]},{"dataType":"enum","enums":["transaction_unattended"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Dispute.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["expired"]},{"dataType":"enum","enums":["lost"]},{"dataType":"enum","enums":["submitted"]},{"dataType":"enum","enums":["unsubmitted"]},{"dataType":"enum","enums":["won"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Transaction": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["issuing.transaction"],"required":true},
            "amount": {"dataType":"double","required":true},
            "amount_details": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Transaction.AmountDetails"},{"dataType":"enum","enums":[null]}],"required":true},
            "authorization": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Issuing.Authorization"},{"dataType":"enum","enums":[null]}],"required":true},
            "balance_transaction": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.BalanceTransaction"},{"dataType":"enum","enums":[null]}],"required":true},
            "card": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Issuing.Card"}],"required":true},
            "cardholder": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Issuing.Cardholder"},{"dataType":"enum","enums":[null]}],"required":true},
            "created": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "dispute": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Issuing.Dispute"},{"dataType":"enum","enums":[null]}],"required":true},
            "livemode": {"dataType":"boolean","required":true},
            "merchant_amount": {"dataType":"double","required":true},
            "merchant_currency": {"dataType":"string","required":true},
            "merchant_data": {"ref":"stripe.Stripe.Issuing.Transaction.MerchantData","required":true},
            "metadata": {"ref":"stripe.Stripe.Metadata","required":true},
            "network_data": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Transaction.NetworkData"},{"dataType":"enum","enums":[null]}],"required":true},
            "purchase_details": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Transaction.PurchaseDetails"},{"dataType":"enum","enums":[null]}]},
            "token": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Issuing.Token"},{"dataType":"enum","enums":[null]}]},
            "treasury": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Transaction.Treasury"},{"dataType":"enum","enums":[null]}]},
            "type": {"ref":"stripe.Stripe.Issuing.Transaction.Type","required":true},
            "wallet": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Transaction.Wallet"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Dispute.Treasury": {
        "dataType": "refObject",
        "properties": {
            "debit_reversal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "received_debit": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Dispute": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["issuing.dispute"],"required":true},
            "amount": {"dataType":"double","required":true},
            "balance_transactions": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.BalanceTransaction"}},{"dataType":"enum","enums":[null]}]},
            "created": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "evidence": {"ref":"stripe.Stripe.Issuing.Dispute.Evidence","required":true},
            "livemode": {"dataType":"boolean","required":true},
            "loss_reason": {"ref":"stripe.Stripe.Issuing.Dispute.LossReason"},
            "metadata": {"ref":"stripe.Stripe.Metadata","required":true},
            "status": {"ref":"stripe.Stripe.Issuing.Dispute.Status","required":true},
            "transaction": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Issuing.Transaction"}],"required":true},
            "treasury": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Dispute.Treasury"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Transaction.MerchantData": {
        "dataType": "refObject",
        "properties": {
            "category": {"dataType":"string","required":true},
            "category_code": {"dataType":"string","required":true},
            "city": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "network_id": {"dataType":"string","required":true},
            "postal_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "state": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "terminal_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Transaction.NetworkData": {
        "dataType": "refObject",
        "properties": {
            "authorization_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "processing_date": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "transaction_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Transaction.PurchaseDetails.Fleet.CardholderPromptData": {
        "dataType": "refObject",
        "properties": {
            "driver_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "odometer": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "unspecified_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "user_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "vehicle_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Transaction.PurchaseDetails.Fleet.ReportedBreakdown.Fuel": {
        "dataType": "refObject",
        "properties": {
            "gross_amount_decimal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Transaction.PurchaseDetails.Fleet.ReportedBreakdown.NonFuel": {
        "dataType": "refObject",
        "properties": {
            "gross_amount_decimal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Transaction.PurchaseDetails.Fleet.ReportedBreakdown.Tax": {
        "dataType": "refObject",
        "properties": {
            "local_amount_decimal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "national_amount_decimal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Transaction.PurchaseDetails.Fleet.ReportedBreakdown": {
        "dataType": "refObject",
        "properties": {
            "fuel": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Transaction.PurchaseDetails.Fleet.ReportedBreakdown.Fuel"},{"dataType":"enum","enums":[null]}],"required":true},
            "non_fuel": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Transaction.PurchaseDetails.Fleet.ReportedBreakdown.NonFuel"},{"dataType":"enum","enums":[null]}],"required":true},
            "tax": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Transaction.PurchaseDetails.Fleet.ReportedBreakdown.Tax"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Transaction.PurchaseDetails.Fleet": {
        "dataType": "refObject",
        "properties": {
            "cardholder_prompt_data": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Transaction.PurchaseDetails.Fleet.CardholderPromptData"},{"dataType":"enum","enums":[null]}],"required":true},
            "purchase_type": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "reported_breakdown": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Transaction.PurchaseDetails.Fleet.ReportedBreakdown"},{"dataType":"enum","enums":[null]}],"required":true},
            "service_type": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Transaction.PurchaseDetails.Flight.Segment": {
        "dataType": "refObject",
        "properties": {
            "arrival_airport_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "carrier": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "departure_airport_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "flight_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "service_class": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "stopover_allowed": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Transaction.PurchaseDetails.Flight": {
        "dataType": "refObject",
        "properties": {
            "departure_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "passenger_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "refundable": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}],"required":true},
            "segments": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Issuing.Transaction.PurchaseDetails.Flight.Segment"}},{"dataType":"enum","enums":[null]}],"required":true},
            "travel_agency": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Transaction.PurchaseDetails.Fuel": {
        "dataType": "refObject",
        "properties": {
            "industry_product_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "quantity_decimal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "type": {"dataType":"string","required":true},
            "unit": {"dataType":"string","required":true},
            "unit_cost_decimal": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Transaction.PurchaseDetails.Lodging": {
        "dataType": "refObject",
        "properties": {
            "check_in_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "nights": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Transaction.PurchaseDetails.Receipt": {
        "dataType": "refObject",
        "properties": {
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "quantity": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "total": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "unit_cost": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Transaction.PurchaseDetails": {
        "dataType": "refObject",
        "properties": {
            "fleet": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Transaction.PurchaseDetails.Fleet"},{"dataType":"enum","enums":[null]}],"required":true},
            "flight": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Transaction.PurchaseDetails.Flight"},{"dataType":"enum","enums":[null]}],"required":true},
            "fuel": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Transaction.PurchaseDetails.Fuel"},{"dataType":"enum","enums":[null]}],"required":true},
            "lodging": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Transaction.PurchaseDetails.Lodging"},{"dataType":"enum","enums":[null]}],"required":true},
            "receipt": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Issuing.Transaction.PurchaseDetails.Receipt"}},{"dataType":"enum","enums":[null]}],"required":true},
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Transaction.Treasury": {
        "dataType": "refObject",
        "properties": {
            "received_credit": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "received_debit": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Transaction.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["capture"]},{"dataType":"enum","enums":["refund"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Transaction.Wallet": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["apple_pay"]},{"dataType":"enum","enums":["google_pay"]},{"dataType":"enum","enums":["samsung_pay"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.Treasury": {
        "dataType": "refObject",
        "properties": {
            "received_credits": {"dataType":"array","array":{"dataType":"string"},"required":true},
            "received_debits": {"dataType":"array","array":{"dataType":"string"},"required":true},
            "transaction": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.VerificationData.AddressLine1Check": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["match"]},{"dataType":"enum","enums":["mismatch"]},{"dataType":"enum","enums":["not_provided"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.VerificationData.AddressPostalCodeCheck": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["match"]},{"dataType":"enum","enums":["mismatch"]},{"dataType":"enum","enums":["not_provided"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.VerificationData.AuthenticationExemption.ClaimedBy": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["acquirer"]},{"dataType":"enum","enums":["issuer"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.VerificationData.AuthenticationExemption.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["low_value_transaction"]},{"dataType":"enum","enums":["transaction_risk_analysis"]},{"dataType":"enum","enums":["unknown"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.VerificationData.AuthenticationExemption": {
        "dataType": "refObject",
        "properties": {
            "claimed_by": {"ref":"stripe.Stripe.Issuing.Authorization.VerificationData.AuthenticationExemption.ClaimedBy","required":true},
            "type": {"ref":"stripe.Stripe.Issuing.Authorization.VerificationData.AuthenticationExemption.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.VerificationData.CvcCheck": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["match"]},{"dataType":"enum","enums":["mismatch"]},{"dataType":"enum","enums":["not_provided"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.VerificationData.ExpiryCheck": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["match"]},{"dataType":"enum","enums":["mismatch"]},{"dataType":"enum","enums":["not_provided"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.VerificationData.ThreeDSecure.Result": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["attempt_acknowledged"]},{"dataType":"enum","enums":["authenticated"]},{"dataType":"enum","enums":["failed"]},{"dataType":"enum","enums":["required"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.VerificationData.ThreeDSecure": {
        "dataType": "refObject",
        "properties": {
            "result": {"ref":"stripe.Stripe.Issuing.Authorization.VerificationData.ThreeDSecure.Result","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Issuing.Authorization.VerificationData": {
        "dataType": "refObject",
        "properties": {
            "address_line1_check": {"ref":"stripe.Stripe.Issuing.Authorization.VerificationData.AddressLine1Check","required":true},
            "address_postal_code_check": {"ref":"stripe.Stripe.Issuing.Authorization.VerificationData.AddressPostalCodeCheck","required":true},
            "authentication_exemption": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Authorization.VerificationData.AuthenticationExemption"},{"dataType":"enum","enums":[null]}],"required":true},
            "cvc_check": {"ref":"stripe.Stripe.Issuing.Authorization.VerificationData.CvcCheck","required":true},
            "expiry_check": {"ref":"stripe.Stripe.Issuing.Authorization.VerificationData.ExpiryCheck","required":true},
            "postal_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "three_d_secure": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Issuing.Authorization.VerificationData.ThreeDSecure"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ExternalAccount": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.BankAccount"},{"ref":"stripe.Stripe.Card"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.DeletedBankAccount": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["bank_account"],"required":true},
            "currency": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "deleted": {"dataType":"enum","enums":[true],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.DeletedCard": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["card"],"required":true},
            "currency": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "deleted": {"dataType":"enum","enums":[true],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.DeletedExternalAccount": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.DeletedBankAccount"},{"ref":"stripe.Stripe.DeletedCard"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Payout": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["payout"],"required":true},
            "amount": {"dataType":"double","required":true},
            "application_fee": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.ApplicationFee"},{"dataType":"enum","enums":[null]}],"required":true},
            "application_fee_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "arrival_date": {"dataType":"double","required":true},
            "automatic": {"dataType":"boolean","required":true},
            "balance_transaction": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.BalanceTransaction"},{"dataType":"enum","enums":[null]}],"required":true},
            "created": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "destination": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.ExternalAccount"},{"ref":"stripe.Stripe.DeletedExternalAccount"},{"dataType":"enum","enums":[null]}],"required":true},
            "failure_balance_transaction": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.BalanceTransaction"},{"dataType":"enum","enums":[null]}],"required":true},
            "failure_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "failure_message": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "livemode": {"dataType":"boolean","required":true},
            "metadata": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Metadata"},{"dataType":"enum","enums":[null]}],"required":true},
            "method": {"dataType":"string","required":true},
            "original_payout": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Payout"},{"dataType":"enum","enums":[null]}],"required":true},
            "reconciliation_status": {"ref":"stripe.Stripe.Payout.ReconciliationStatus","required":true},
            "reversed_by": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Payout"},{"dataType":"enum","enums":[null]}],"required":true},
            "source_type": {"dataType":"string","required":true},
            "statement_descriptor": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "status": {"dataType":"string","required":true},
            "type": {"ref":"stripe.Stripe.Payout.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Payout.ReconciliationStatus": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["completed"]},{"dataType":"enum","enums":["in_progress"]},{"dataType":"enum","enums":["not_applicable"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Payout.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["bank_account"]},{"dataType":"enum","enums":["card"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ReserveTransaction": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["reserve_transaction"],"required":true},
            "amount": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.TaxDeductedAtSource": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["tax_deducted_at_source"],"required":true},
            "period_end": {"dataType":"double","required":true},
            "period_start": {"dataType":"double","required":true},
            "tax_deduction_account_number": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Topup.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["canceled"]},{"dataType":"enum","enums":["failed"]},{"dataType":"enum","enums":["pending"]},{"dataType":"enum","enums":["reversed"]},{"dataType":"enum","enums":["succeeded"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Topup": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["topup"],"required":true},
            "amount": {"dataType":"double","required":true},
            "balance_transaction": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.BalanceTransaction"},{"dataType":"enum","enums":[null]}],"required":true},
            "created": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "expected_availability_date": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "failure_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "failure_message": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "livemode": {"dataType":"boolean","required":true},
            "metadata": {"ref":"stripe.Stripe.Metadata","required":true},
            "source": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Source"},{"dataType":"enum","enums":[null]}],"required":true},
            "statement_descriptor": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "status": {"ref":"stripe.Stripe.Topup.Status","required":true},
            "transfer_group": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.BalanceTransactionSource": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.ApplicationFee"},{"ref":"stripe.Stripe.Charge"},{"ref":"stripe.Stripe.ConnectCollectionTransfer"},{"ref":"stripe.Stripe.CustomerCashBalanceTransaction"},{"ref":"stripe.Stripe.Dispute"},{"ref":"stripe.Stripe.FeeRefund"},{"ref":"stripe.Stripe.Issuing.Authorization"},{"ref":"stripe.Stripe.Issuing.Dispute"},{"ref":"stripe.Stripe.Issuing.Transaction"},{"ref":"stripe.Stripe.Payout"},{"ref":"stripe.Stripe.Refund"},{"ref":"stripe.Stripe.ReserveTransaction"},{"ref":"stripe.Stripe.TaxDeductedAtSource"},{"ref":"stripe.Stripe.Topup"},{"ref":"stripe.Stripe.Transfer"},{"ref":"stripe.Stripe.TransferReversal"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.BalanceTransaction.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["adjustment"]},{"dataType":"enum","enums":["advance"]},{"dataType":"enum","enums":["advance_funding"]},{"dataType":"enum","enums":["anticipation_repayment"]},{"dataType":"enum","enums":["application_fee"]},{"dataType":"enum","enums":["application_fee_refund"]},{"dataType":"enum","enums":["charge"]},{"dataType":"enum","enums":["climate_order_purchase"]},{"dataType":"enum","enums":["climate_order_refund"]},{"dataType":"enum","enums":["connect_collection_transfer"]},{"dataType":"enum","enums":["contribution"]},{"dataType":"enum","enums":["issuing_authorization_hold"]},{"dataType":"enum","enums":["issuing_authorization_release"]},{"dataType":"enum","enums":["issuing_dispute"]},{"dataType":"enum","enums":["issuing_transaction"]},{"dataType":"enum","enums":["obligation_outbound"]},{"dataType":"enum","enums":["obligation_reversal_inbound"]},{"dataType":"enum","enums":["payment"]},{"dataType":"enum","enums":["payment_failure_refund"]},{"dataType":"enum","enums":["payment_network_reserve_hold"]},{"dataType":"enum","enums":["payment_network_reserve_release"]},{"dataType":"enum","enums":["payment_refund"]},{"dataType":"enum","enums":["payment_reversal"]},{"dataType":"enum","enums":["payment_unreconciled"]},{"dataType":"enum","enums":["payout"]},{"dataType":"enum","enums":["payout_cancel"]},{"dataType":"enum","enums":["payout_failure"]},{"dataType":"enum","enums":["refund"]},{"dataType":"enum","enums":["refund_failure"]},{"dataType":"enum","enums":["reserve_transaction"]},{"dataType":"enum","enums":["reserved_funds"]},{"dataType":"enum","enums":["stripe_fee"]},{"dataType":"enum","enums":["stripe_fx_fee"]},{"dataType":"enum","enums":["tax_fee"]},{"dataType":"enum","enums":["topup"]},{"dataType":"enum","enums":["topup_reversal"]},{"dataType":"enum","enums":["transfer"]},{"dataType":"enum","enums":["transfer_cancel"]},{"dataType":"enum","enums":["transfer_failure"]},{"dataType":"enum","enums":["transfer_refund"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ApplicationFee.FeeSource.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["charge"]},{"dataType":"enum","enums":["payout"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ApplicationFee.FeeSource": {
        "dataType": "refObject",
        "properties": {
            "charge": {"dataType":"string"},
            "payout": {"dataType":"string"},
            "type": {"ref":"stripe.Stripe.ApplicationFee.FeeSource.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ApiList_stripe.Stripe.FeeRefund_": {
        "dataType": "refObject",
        "properties": {
            "object": {"dataType":"enum","enums":["list"],"required":true},
            "data": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.FeeRefund"},"required":true},
            "has_more": {"dataType":"boolean","required":true},
            "url": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.BillingDetails": {
        "dataType": "refObject",
        "properties": {
            "address": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Address"},{"dataType":"enum","enums":[null]}],"required":true},
            "email": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "phone": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.FraudDetails": {
        "dataType": "refObject",
        "properties": {
            "stripe_report": {"dataType":"string"},
            "user_report": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["invoice"],"required":true},
            "account_country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "account_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "account_tax_ids": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.TaxId"},{"ref":"stripe.Stripe.DeletedTaxId"}]}},{"dataType":"enum","enums":[null]}],"required":true},
            "amount_due": {"dataType":"double","required":true},
            "amount_paid": {"dataType":"double","required":true},
            "amount_remaining": {"dataType":"double","required":true},
            "amount_shipping": {"dataType":"double","required":true},
            "application": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Application"},{"ref":"stripe.Stripe.DeletedApplication"},{"dataType":"enum","enums":[null]}],"required":true},
            "application_fee_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "attempt_count": {"dataType":"double","required":true},
            "attempted": {"dataType":"boolean","required":true},
            "auto_advance": {"dataType":"boolean"},
            "automatic_tax": {"ref":"stripe.Stripe.Invoice.AutomaticTax","required":true},
            "automatically_finalizes_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "billing_reason": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.BillingReason"},{"dataType":"enum","enums":[null]}],"required":true},
            "charge": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Charge"},{"dataType":"enum","enums":[null]}],"required":true},
            "collection_method": {"ref":"stripe.Stripe.Invoice.CollectionMethod","required":true},
            "created": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "custom_fields": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Invoice.CustomField"}},{"dataType":"enum","enums":[null]}],"required":true},
            "customer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Customer"},{"ref":"stripe.Stripe.DeletedCustomer"},{"dataType":"enum","enums":[null]}],"required":true},
            "customer_address": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Address"},{"dataType":"enum","enums":[null]}],"required":true},
            "customer_email": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "customer_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "customer_phone": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "customer_shipping": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.CustomerShipping"},{"dataType":"enum","enums":[null]}],"required":true},
            "customer_tax_exempt": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.CustomerTaxExempt"},{"dataType":"enum","enums":[null]}],"required":true},
            "customer_tax_ids": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Invoice.CustomerTaxId"}},{"dataType":"enum","enums":[null]}]},
            "default_payment_method": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PaymentMethod"},{"dataType":"enum","enums":[null]}],"required":true},
            "default_source": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.CustomerSource"},{"dataType":"enum","enums":[null]}],"required":true},
            "default_tax_rates": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.TaxRate"},"required":true},
            "deleted": {"dataType":"void"},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "discount": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Discount"},{"dataType":"enum","enums":[null]}],"required":true},
            "discounts": {"dataType":"array","array":{"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Discount"},{"ref":"stripe.Stripe.DeletedDiscount"}]},"required":true},
            "due_date": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "effective_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "ending_balance": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "footer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "from_invoice": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.FromInvoice"},{"dataType":"enum","enums":[null]}],"required":true},
            "hosted_invoice_url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "invoice_pdf": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "issuer": {"ref":"stripe.Stripe.Invoice.Issuer","required":true},
            "last_finalization_error": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.LastFinalizationError"},{"dataType":"enum","enums":[null]}],"required":true},
            "latest_revision": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Invoice"},{"dataType":"enum","enums":[null]}],"required":true},
            "lines": {"ref":"stripe.Stripe.ApiList_stripe.Stripe.InvoiceLineItem_","required":true},
            "livemode": {"dataType":"boolean","required":true},
            "metadata": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Metadata"},{"dataType":"enum","enums":[null]}],"required":true},
            "next_payment_attempt": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "on_behalf_of": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"},{"dataType":"enum","enums":[null]}],"required":true},
            "paid": {"dataType":"boolean","required":true},
            "paid_out_of_band": {"dataType":"boolean","required":true},
            "payment_intent": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PaymentIntent"},{"dataType":"enum","enums":[null]}],"required":true},
            "payment_settings": {"ref":"stripe.Stripe.Invoice.PaymentSettings","required":true},
            "period_end": {"dataType":"double","required":true},
            "period_start": {"dataType":"double","required":true},
            "post_payment_credit_notes_amount": {"dataType":"double","required":true},
            "pre_payment_credit_notes_amount": {"dataType":"double","required":true},
            "quote": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Quote"},{"dataType":"enum","enums":[null]}],"required":true},
            "receipt_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "rendering": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.Rendering"},{"dataType":"enum","enums":[null]}],"required":true},
            "shipping_cost": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.ShippingCost"},{"dataType":"enum","enums":[null]}],"required":true},
            "shipping_details": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.ShippingDetails"},{"dataType":"enum","enums":[null]}],"required":true},
            "starting_balance": {"dataType":"double","required":true},
            "statement_descriptor": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "status": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.Status"},{"dataType":"enum","enums":[null]}],"required":true},
            "status_transitions": {"ref":"stripe.Stripe.Invoice.StatusTransitions","required":true},
            "subscription": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Subscription"},{"dataType":"enum","enums":[null]}],"required":true},
            "subscription_details": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.SubscriptionDetails"},{"dataType":"enum","enums":[null]}],"required":true},
            "subscription_proration_date": {"dataType":"double"},
            "subtotal": {"dataType":"double","required":true},
            "subtotal_excluding_tax": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "tax": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "test_clock": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.TestHelpers.TestClock"},{"dataType":"enum","enums":[null]}],"required":true},
            "threshold_reason": {"ref":"stripe.Stripe.Invoice.ThresholdReason"},
            "total": {"dataType":"double","required":true},
            "total_discount_amounts": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Invoice.TotalDiscountAmount"}},{"dataType":"enum","enums":[null]}],"required":true},
            "total_excluding_tax": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "total_tax_amounts": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Invoice.TotalTaxAmount"},"required":true},
            "transfer_data": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.TransferData"},{"dataType":"enum","enums":[null]}],"required":true},
            "webhooks_delivered_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.Level3.LineItem": {
        "dataType": "refObject",
        "properties": {
            "discount_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "product_code": {"dataType":"string","required":true},
            "product_description": {"dataType":"string","required":true},
            "quantity": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "tax_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "unit_cost": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.Level3": {
        "dataType": "refObject",
        "properties": {
            "customer_reference": {"dataType":"string"},
            "line_items": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Charge.Level3.LineItem"},"required":true},
            "merchant_reference": {"dataType":"string","required":true},
            "shipping_address_zip": {"dataType":"string"},
            "shipping_amount": {"dataType":"double"},
            "shipping_from_zip": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.Outcome.Rule": {
        "dataType": "refObject",
        "properties": {
            "action": {"dataType":"string","required":true},
            "id": {"dataType":"string","required":true},
            "predicate": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.Outcome": {
        "dataType": "refObject",
        "properties": {
            "network_status": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "reason": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "risk_level": {"dataType":"string"},
            "risk_score": {"dataType":"double"},
            "rule": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Charge.Outcome.Rule"}]},
            "seller_message": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "type": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.AchCreditTransfer": {
        "dataType": "refObject",
        "properties": {
            "account_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "bank_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "routing_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "swift_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.AchDebit.AccountHolderType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["company"]},{"dataType":"enum","enums":["individual"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.AchDebit": {
        "dataType": "refObject",
        "properties": {
            "account_holder_type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.AchDebit.AccountHolderType"},{"dataType":"enum","enums":[null]}],"required":true},
            "bank_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "routing_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.AcssDebit": {
        "dataType": "refObject",
        "properties": {
            "bank_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "institution_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "mandate": {"dataType":"string"},
            "transit_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Affirm": {
        "dataType": "refObject",
        "properties": {
            "transaction_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.AfterpayClearpay": {
        "dataType": "refObject",
        "properties": {
            "order_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Alipay": {
        "dataType": "refObject",
        "properties": {
            "buyer_id": {"dataType":"string"},
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "transaction_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.AmazonPay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.AuBecsDebit": {
        "dataType": "refObject",
        "properties": {
            "bsb_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "mandate": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.BacsDebit": {
        "dataType": "refObject",
        "properties": {
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "mandate": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "sort_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Bancontact.PreferredLanguage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["de"]},{"dataType":"enum","enums":["en"]},{"dataType":"enum","enums":["fr"]},{"dataType":"enum","enums":["nl"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Bancontact": {
        "dataType": "refObject",
        "properties": {
            "bank_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "bank_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "bic": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "generated_sepa_debit": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PaymentMethod"},{"dataType":"enum","enums":[null]}],"required":true},
            "generated_sepa_debit_mandate": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Mandate"},{"dataType":"enum","enums":[null]}],"required":true},
            "iban_last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "preferred_language": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Bancontact.PreferredLanguage"},{"dataType":"enum","enums":[null]}],"required":true},
            "verified_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Blik": {
        "dataType": "refObject",
        "properties": {
            "buyer_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Boleto": {
        "dataType": "refObject",
        "properties": {
            "tax_id": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.Checks": {
        "dataType": "refObject",
        "properties": {
            "address_line1_check": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "address_postal_code_check": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "cvc_check": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.ExtendedAuthorization.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["disabled"]},{"dataType":"enum","enums":["enabled"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.ExtendedAuthorization": {
        "dataType": "refObject",
        "properties": {
            "status": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.ExtendedAuthorization.Status","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.IncrementalAuthorization.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["available"]},{"dataType":"enum","enums":["unavailable"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.IncrementalAuthorization": {
        "dataType": "refObject",
        "properties": {
            "status": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.IncrementalAuthorization.Status","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.Installments.Plan": {
        "dataType": "refObject",
        "properties": {
            "count": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "interval": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["month"]},{"dataType":"enum","enums":[null]}],"required":true},
            "type": {"dataType":"enum","enums":["fixed_count"],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.Installments": {
        "dataType": "refObject",
        "properties": {
            "plan": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.Installments.Plan"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.Multicapture.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["available"]},{"dataType":"enum","enums":["unavailable"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.Multicapture": {
        "dataType": "refObject",
        "properties": {
            "status": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.Multicapture.Status","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.NetworkToken": {
        "dataType": "refObject",
        "properties": {
            "used": {"dataType":"boolean","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.Overcapture.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["available"]},{"dataType":"enum","enums":["unavailable"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.Overcapture": {
        "dataType": "refObject",
        "properties": {
            "maximum_amount_capturable": {"dataType":"double","required":true},
            "status": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.Overcapture.Status","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.ThreeDSecure.AuthenticationFlow": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["challenge"]},{"dataType":"enum","enums":["frictionless"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.ThreeDSecure.ElectronicCommerceIndicator": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["01"]},{"dataType":"enum","enums":["02"]},{"dataType":"enum","enums":["05"]},{"dataType":"enum","enums":["06"]},{"dataType":"enum","enums":["07"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.ThreeDSecure.ExemptionIndicator": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["low_risk"]},{"dataType":"enum","enums":["none"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.ThreeDSecure.Result": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["attempt_acknowledged"]},{"dataType":"enum","enums":["authenticated"]},{"dataType":"enum","enums":["exempted"]},{"dataType":"enum","enums":["failed"]},{"dataType":"enum","enums":["not_supported"]},{"dataType":"enum","enums":["processing_error"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.ThreeDSecure.ResultReason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["abandoned"]},{"dataType":"enum","enums":["bypassed"]},{"dataType":"enum","enums":["canceled"]},{"dataType":"enum","enums":["card_not_enrolled"]},{"dataType":"enum","enums":["network_not_supported"]},{"dataType":"enum","enums":["protocol_error"]},{"dataType":"enum","enums":["rejected"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.ThreeDSecure.Version": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["1.0.2"]},{"dataType":"enum","enums":["2.1.0"]},{"dataType":"enum","enums":["2.2.0"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.ThreeDSecure": {
        "dataType": "refObject",
        "properties": {
            "authentication_flow": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.ThreeDSecure.AuthenticationFlow"},{"dataType":"enum","enums":[null]}],"required":true},
            "electronic_commerce_indicator": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.ThreeDSecure.ElectronicCommerceIndicator"},{"dataType":"enum","enums":[null]}],"required":true},
            "exemption_indicator": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.ThreeDSecure.ExemptionIndicator"},{"dataType":"enum","enums":[null]}],"required":true},
            "exemption_indicator_applied": {"dataType":"boolean"},
            "result": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.ThreeDSecure.Result"},{"dataType":"enum","enums":[null]}],"required":true},
            "result_reason": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.ThreeDSecure.ResultReason"},{"dataType":"enum","enums":[null]}],"required":true},
            "transaction_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "version": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.ThreeDSecure.Version"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.Wallet.AmexExpressCheckout": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.Wallet.ApplePay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.Wallet.GooglePay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.Wallet.Link": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.Wallet.Masterpass": {
        "dataType": "refObject",
        "properties": {
            "billing_address": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Address"},{"dataType":"enum","enums":[null]}],"required":true},
            "email": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "shipping_address": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Address"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.Wallet.SamsungPay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.Wallet.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["amex_express_checkout"]},{"dataType":"enum","enums":["apple_pay"]},{"dataType":"enum","enums":["google_pay"]},{"dataType":"enum","enums":["link"]},{"dataType":"enum","enums":["masterpass"]},{"dataType":"enum","enums":["samsung_pay"]},{"dataType":"enum","enums":["visa_checkout"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.Wallet.VisaCheckout": {
        "dataType": "refObject",
        "properties": {
            "billing_address": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Address"},{"dataType":"enum","enums":[null]}],"required":true},
            "email": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "shipping_address": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Address"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card.Wallet": {
        "dataType": "refObject",
        "properties": {
            "amex_express_checkout": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.Wallet.AmexExpressCheckout"},
            "apple_pay": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.Wallet.ApplePay"},
            "dynamic_last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "google_pay": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.Wallet.GooglePay"},
            "link": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.Wallet.Link"},
            "masterpass": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.Wallet.Masterpass"},
            "samsung_pay": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.Wallet.SamsungPay"},
            "type": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.Wallet.Type","required":true},
            "visa_checkout": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.Wallet.VisaCheckout"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Card": {
        "dataType": "refObject",
        "properties": {
            "amount_authorized": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "authorization_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "brand": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "capture_before": {"dataType":"double"},
            "checks": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.Checks"},{"dataType":"enum","enums":[null]}],"required":true},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "exp_month": {"dataType":"double","required":true},
            "exp_year": {"dataType":"double","required":true},
            "extended_authorization": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.ExtendedAuthorization"},
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "funding": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "iin": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "incremental_authorization": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.IncrementalAuthorization"},
            "installments": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.Installments"},{"dataType":"enum","enums":[null]}],"required":true},
            "issuer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "mandate": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "moto": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}]},
            "multicapture": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.Multicapture"},
            "network": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "network_token": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.NetworkToken"},{"dataType":"enum","enums":[null]}]},
            "overcapture": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.Overcapture"},
            "three_d_secure": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.ThreeDSecure"},{"dataType":"enum","enums":[null]}],"required":true},
            "wallet": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card.Wallet"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.CardPresent.Offline": {
        "dataType": "refObject",
        "properties": {
            "stored_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["deferred"]},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.CardPresent.ReadMethod": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["contact_emv"]},{"dataType":"enum","enums":["contactless_emv"]},{"dataType":"enum","enums":["contactless_magstripe_mode"]},{"dataType":"enum","enums":["magnetic_stripe_fallback"]},{"dataType":"enum","enums":["magnetic_stripe_track2"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.CardPresent.Receipt.AccountType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["checking"]},{"dataType":"enum","enums":["credit"]},{"dataType":"enum","enums":["prepaid"]},{"dataType":"enum","enums":["unknown"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.CardPresent.Receipt": {
        "dataType": "refObject",
        "properties": {
            "account_type": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.CardPresent.Receipt.AccountType"},
            "application_cryptogram": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "application_preferred_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "authorization_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "authorization_response_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "cardholder_verification_method": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "dedicated_file_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "terminal_verification_results": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "transaction_status_information": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.CardPresent.Wallet.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["apple_pay"]},{"dataType":"enum","enums":["google_pay"]},{"dataType":"enum","enums":["samsung_pay"]},{"dataType":"enum","enums":["unknown"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.CardPresent.Wallet": {
        "dataType": "refObject",
        "properties": {
            "type": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.CardPresent.Wallet.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.CardPresent": {
        "dataType": "refObject",
        "properties": {
            "amount_authorized": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "brand": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "brand_product": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "capture_before": {"dataType":"double"},
            "cardholder_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "emv_auth_data": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "exp_month": {"dataType":"double","required":true},
            "exp_year": {"dataType":"double","required":true},
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "funding": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "generated_card": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "iin": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "incremental_authorization_supported": {"dataType":"boolean","required":true},
            "issuer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "network": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "network_transaction_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "offline": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.CardPresent.Offline"},{"dataType":"enum","enums":[null]}],"required":true},
            "overcapture_supported": {"dataType":"boolean","required":true},
            "preferred_locales": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
            "read_method": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.CardPresent.ReadMethod"},{"dataType":"enum","enums":[null]}],"required":true},
            "receipt": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.CardPresent.Receipt"},{"dataType":"enum","enums":[null]}],"required":true},
            "wallet": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.CardPresent.Wallet"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Cashapp": {
        "dataType": "refObject",
        "properties": {
            "buyer_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "cashtag": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.CustomerBalance": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Eps.Bank": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["arzte_und_apotheker_bank"]},{"dataType":"enum","enums":["austrian_anadi_bank_ag"]},{"dataType":"enum","enums":["bank_austria"]},{"dataType":"enum","enums":["bankhaus_carl_spangler"]},{"dataType":"enum","enums":["bankhaus_schelhammer_und_schattera_ag"]},{"dataType":"enum","enums":["bawag_psk_ag"]},{"dataType":"enum","enums":["bks_bank_ag"]},{"dataType":"enum","enums":["brull_kallmus_bank_ag"]},{"dataType":"enum","enums":["btv_vier_lander_bank"]},{"dataType":"enum","enums":["capital_bank_grawe_gruppe_ag"]},{"dataType":"enum","enums":["deutsche_bank_ag"]},{"dataType":"enum","enums":["dolomitenbank"]},{"dataType":"enum","enums":["easybank_ag"]},{"dataType":"enum","enums":["erste_bank_und_sparkassen"]},{"dataType":"enum","enums":["hypo_alpeadriabank_international_ag"]},{"dataType":"enum","enums":["hypo_bank_burgenland_aktiengesellschaft"]},{"dataType":"enum","enums":["hypo_noe_lb_fur_niederosterreich_u_wien"]},{"dataType":"enum","enums":["hypo_oberosterreich_salzburg_steiermark"]},{"dataType":"enum","enums":["hypo_tirol_bank_ag"]},{"dataType":"enum","enums":["hypo_vorarlberg_bank_ag"]},{"dataType":"enum","enums":["marchfelder_bank"]},{"dataType":"enum","enums":["oberbank_ag"]},{"dataType":"enum","enums":["raiffeisen_bankengruppe_osterreich"]},{"dataType":"enum","enums":["schoellerbank_ag"]},{"dataType":"enum","enums":["sparda_bank_wien"]},{"dataType":"enum","enums":["volksbank_gruppe"]},{"dataType":"enum","enums":["volkskreditbank_ag"]},{"dataType":"enum","enums":["vr_bank_braunau"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Eps": {
        "dataType": "refObject",
        "properties": {
            "bank": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Eps.Bank"},{"dataType":"enum","enums":[null]}],"required":true},
            "verified_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Fpx.AccountHolderType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["company"]},{"dataType":"enum","enums":["individual"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Fpx.Bank": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["affin_bank"]},{"dataType":"enum","enums":["agrobank"]},{"dataType":"enum","enums":["alliance_bank"]},{"dataType":"enum","enums":["ambank"]},{"dataType":"enum","enums":["bank_islam"]},{"dataType":"enum","enums":["bank_muamalat"]},{"dataType":"enum","enums":["bank_of_china"]},{"dataType":"enum","enums":["bank_rakyat"]},{"dataType":"enum","enums":["bsn"]},{"dataType":"enum","enums":["cimb"]},{"dataType":"enum","enums":["deutsche_bank"]},{"dataType":"enum","enums":["hong_leong_bank"]},{"dataType":"enum","enums":["hsbc"]},{"dataType":"enum","enums":["kfh"]},{"dataType":"enum","enums":["maybank2e"]},{"dataType":"enum","enums":["maybank2u"]},{"dataType":"enum","enums":["ocbc"]},{"dataType":"enum","enums":["pb_enterprise"]},{"dataType":"enum","enums":["public_bank"]},{"dataType":"enum","enums":["rhb"]},{"dataType":"enum","enums":["standard_chartered"]},{"dataType":"enum","enums":["uob"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Fpx": {
        "dataType": "refObject",
        "properties": {
            "account_holder_type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Fpx.AccountHolderType"},{"dataType":"enum","enums":[null]}],"required":true},
            "bank": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Fpx.Bank","required":true},
            "transaction_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Giropay": {
        "dataType": "refObject",
        "properties": {
            "bank_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "bank_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "bic": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "verified_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Grabpay": {
        "dataType": "refObject",
        "properties": {
            "transaction_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Ideal.Bank": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["abn_amro"]},{"dataType":"enum","enums":["asn_bank"]},{"dataType":"enum","enums":["bunq"]},{"dataType":"enum","enums":["handelsbanken"]},{"dataType":"enum","enums":["ing"]},{"dataType":"enum","enums":["knab"]},{"dataType":"enum","enums":["moneyou"]},{"dataType":"enum","enums":["n26"]},{"dataType":"enum","enums":["nn"]},{"dataType":"enum","enums":["rabobank"]},{"dataType":"enum","enums":["regiobank"]},{"dataType":"enum","enums":["revolut"]},{"dataType":"enum","enums":["sns_bank"]},{"dataType":"enum","enums":["triodos_bank"]},{"dataType":"enum","enums":["van_lanschot"]},{"dataType":"enum","enums":["yoursafe"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Ideal.Bic": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["ABNANL2A"]},{"dataType":"enum","enums":["ASNBNL21"]},{"dataType":"enum","enums":["BITSNL2A"]},{"dataType":"enum","enums":["BUNQNL2A"]},{"dataType":"enum","enums":["FVLBNL22"]},{"dataType":"enum","enums":["HANDNL2A"]},{"dataType":"enum","enums":["INGBNL2A"]},{"dataType":"enum","enums":["KNABNL2H"]},{"dataType":"enum","enums":["MOYONL21"]},{"dataType":"enum","enums":["NNBANL2G"]},{"dataType":"enum","enums":["NTSBDEB1"]},{"dataType":"enum","enums":["RABONL2U"]},{"dataType":"enum","enums":["RBRBNL21"]},{"dataType":"enum","enums":["REVOIE23"]},{"dataType":"enum","enums":["REVOLT21"]},{"dataType":"enum","enums":["SNSBNL2A"]},{"dataType":"enum","enums":["TRIONL2U"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Ideal": {
        "dataType": "refObject",
        "properties": {
            "bank": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Ideal.Bank"},{"dataType":"enum","enums":[null]}],"required":true},
            "bic": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Ideal.Bic"},{"dataType":"enum","enums":[null]}],"required":true},
            "generated_sepa_debit": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PaymentMethod"},{"dataType":"enum","enums":[null]}],"required":true},
            "generated_sepa_debit_mandate": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Mandate"},{"dataType":"enum","enums":[null]}],"required":true},
            "iban_last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "verified_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.InteracPresent.ReadMethod": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["contact_emv"]},{"dataType":"enum","enums":["contactless_emv"]},{"dataType":"enum","enums":["contactless_magstripe_mode"]},{"dataType":"enum","enums":["magnetic_stripe_fallback"]},{"dataType":"enum","enums":["magnetic_stripe_track2"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.InteracPresent.Receipt.AccountType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["checking"]},{"dataType":"enum","enums":["savings"]},{"dataType":"enum","enums":["unknown"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.InteracPresent.Receipt": {
        "dataType": "refObject",
        "properties": {
            "account_type": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.InteracPresent.Receipt.AccountType"},
            "application_cryptogram": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "application_preferred_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "authorization_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "authorization_response_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "cardholder_verification_method": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "dedicated_file_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "terminal_verification_results": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "transaction_status_information": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.InteracPresent": {
        "dataType": "refObject",
        "properties": {
            "brand": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "cardholder_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "emv_auth_data": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "exp_month": {"dataType":"double","required":true},
            "exp_year": {"dataType":"double","required":true},
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "funding": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "generated_card": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "iin": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "issuer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "network": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "network_transaction_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "preferred_locales": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
            "read_method": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.InteracPresent.ReadMethod"},{"dataType":"enum","enums":[null]}],"required":true},
            "receipt": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.InteracPresent.Receipt"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Klarna.PayerDetails.Address": {
        "dataType": "refObject",
        "properties": {
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Klarna.PayerDetails": {
        "dataType": "refObject",
        "properties": {
            "address": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Klarna.PayerDetails.Address"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Klarna": {
        "dataType": "refObject",
        "properties": {
            "payer_details": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Klarna.PayerDetails"},{"dataType":"enum","enums":[null]}],"required":true},
            "payment_method_category": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "preferred_locale": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Konbini.Store.Chain": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["familymart"]},{"dataType":"enum","enums":["lawson"]},{"dataType":"enum","enums":["ministop"]},{"dataType":"enum","enums":["seicomart"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Konbini.Store": {
        "dataType": "refObject",
        "properties": {
            "chain": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Konbini.Store.Chain"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Konbini": {
        "dataType": "refObject",
        "properties": {
            "store": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Konbini.Store"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Link": {
        "dataType": "refObject",
        "properties": {
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Mobilepay.Card": {
        "dataType": "refObject",
        "properties": {
            "brand": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "exp_month": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "exp_year": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Mobilepay": {
        "dataType": "refObject",
        "properties": {
            "card": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Mobilepay.Card"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Multibanco": {
        "dataType": "refObject",
        "properties": {
            "entity": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Oxxo": {
        "dataType": "refObject",
        "properties": {
            "number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.P24.Bank": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["alior_bank"]},{"dataType":"enum","enums":["bank_millennium"]},{"dataType":"enum","enums":["bank_nowy_bfg_sa"]},{"dataType":"enum","enums":["bank_pekao_sa"]},{"dataType":"enum","enums":["banki_spbdzielcze"]},{"dataType":"enum","enums":["blik"]},{"dataType":"enum","enums":["bnp_paribas"]},{"dataType":"enum","enums":["boz"]},{"dataType":"enum","enums":["citi_handlowy"]},{"dataType":"enum","enums":["credit_agricole"]},{"dataType":"enum","enums":["envelobank"]},{"dataType":"enum","enums":["etransfer_pocztowy24"]},{"dataType":"enum","enums":["getin_bank"]},{"dataType":"enum","enums":["ideabank"]},{"dataType":"enum","enums":["ing"]},{"dataType":"enum","enums":["inteligo"]},{"dataType":"enum","enums":["mbank_mtransfer"]},{"dataType":"enum","enums":["nest_przelew"]},{"dataType":"enum","enums":["noble_pay"]},{"dataType":"enum","enums":["pbac_z_ipko"]},{"dataType":"enum","enums":["plus_bank"]},{"dataType":"enum","enums":["santander_przelew24"]},{"dataType":"enum","enums":["tmobile_usbugi_bankowe"]},{"dataType":"enum","enums":["toyota_bank"]},{"dataType":"enum","enums":["velobank"]},{"dataType":"enum","enums":["volkswagen_bank"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.P24": {
        "dataType": "refObject",
        "properties": {
            "bank": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.P24.Bank"},{"dataType":"enum","enums":[null]}],"required":true},
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "verified_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Paynow": {
        "dataType": "refObject",
        "properties": {
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Paypal.SellerProtection.DisputeCategory": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["fraudulent"]},{"dataType":"enum","enums":["product_not_received"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Paypal.SellerProtection.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["eligible"]},{"dataType":"enum","enums":["not_eligible"]},{"dataType":"enum","enums":["partially_eligible"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Paypal.SellerProtection": {
        "dataType": "refObject",
        "properties": {
            "dispute_categories": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.Charge.PaymentMethodDetails.Paypal.SellerProtection.DisputeCategory"}},{"dataType":"enum","enums":[null]}],"required":true},
            "status": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Paypal.SellerProtection.Status","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Paypal": {
        "dataType": "refObject",
        "properties": {
            "payer_email": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "payer_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "payer_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "seller_protection": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Paypal.SellerProtection"},{"dataType":"enum","enums":[null]}],"required":true},
            "transaction_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Pix": {
        "dataType": "refObject",
        "properties": {
            "bank_transaction_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Promptpay": {
        "dataType": "refObject",
        "properties": {
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.RevolutPay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.SepaCreditTransfer": {
        "dataType": "refObject",
        "properties": {
            "bank_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "bic": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "iban": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.SepaDebit": {
        "dataType": "refObject",
        "properties": {
            "bank_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "branch_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "mandate": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Sofort.PreferredLanguage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["de"]},{"dataType":"enum","enums":["en"]},{"dataType":"enum","enums":["es"]},{"dataType":"enum","enums":["fr"]},{"dataType":"enum","enums":["it"]},{"dataType":"enum","enums":["nl"]},{"dataType":"enum","enums":["pl"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Sofort": {
        "dataType": "refObject",
        "properties": {
            "bank_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "bank_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "bic": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "generated_sepa_debit": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PaymentMethod"},{"dataType":"enum","enums":[null]}],"required":true},
            "generated_sepa_debit_mandate": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Mandate"},{"dataType":"enum","enums":[null]}],"required":true},
            "iban_last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "preferred_language": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Sofort.PreferredLanguage"},{"dataType":"enum","enums":[null]}],"required":true},
            "verified_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.StripeAccount": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Swish": {
        "dataType": "refObject",
        "properties": {
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "payment_reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "verified_phone_last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Twint": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.UsBankAccount.AccountHolderType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["company"]},{"dataType":"enum","enums":["individual"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.UsBankAccount.AccountType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["checking"]},{"dataType":"enum","enums":["savings"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.UsBankAccount": {
        "dataType": "refObject",
        "properties": {
            "account_holder_type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.UsBankAccount.AccountHolderType"},{"dataType":"enum","enums":[null]}],"required":true},
            "account_type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Charge.PaymentMethodDetails.UsBankAccount.AccountType"},{"dataType":"enum","enums":[null]}],"required":true},
            "bank_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "mandate": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Mandate"}]},
            "payment_reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "routing_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Wechat": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.WechatPay": {
        "dataType": "refObject",
        "properties": {
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "transaction_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails.Zip": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.PaymentMethodDetails": {
        "dataType": "refObject",
        "properties": {
            "ach_credit_transfer": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.AchCreditTransfer"},
            "ach_debit": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.AchDebit"},
            "acss_debit": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.AcssDebit"},
            "affirm": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Affirm"},
            "afterpay_clearpay": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.AfterpayClearpay"},
            "alipay": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Alipay"},
            "amazon_pay": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.AmazonPay"},
            "au_becs_debit": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.AuBecsDebit"},
            "bacs_debit": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.BacsDebit"},
            "bancontact": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Bancontact"},
            "blik": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Blik"},
            "boleto": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Boleto"},
            "card": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Card"},
            "card_present": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.CardPresent"},
            "cashapp": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Cashapp"},
            "customer_balance": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.CustomerBalance"},
            "eps": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Eps"},
            "fpx": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Fpx"},
            "giropay": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Giropay"},
            "grabpay": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Grabpay"},
            "ideal": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Ideal"},
            "interac_present": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.InteracPresent"},
            "klarna": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Klarna"},
            "konbini": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Konbini"},
            "link": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Link"},
            "mobilepay": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Mobilepay"},
            "multibanco": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Multibanco"},
            "oxxo": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Oxxo"},
            "p24": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.P24"},
            "paynow": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Paynow"},
            "paypal": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Paypal"},
            "pix": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Pix"},
            "promptpay": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Promptpay"},
            "revolut_pay": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.RevolutPay"},
            "sepa_credit_transfer": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.SepaCreditTransfer"},
            "sepa_debit": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.SepaDebit"},
            "sofort": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Sofort"},
            "stripe_account": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.StripeAccount"},
            "swish": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Swish"},
            "twint": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Twint"},
            "type": {"dataType":"string","required":true},
            "us_bank_account": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.UsBankAccount"},
            "wechat": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Wechat"},
            "wechat_pay": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.WechatPay"},
            "zip": {"ref":"stripe.Stripe.Charge.PaymentMethodDetails.Zip"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.RadarOptions": {
        "dataType": "refObject",
        "properties": {
            "session": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ApiList_stripe.Stripe.Refund_": {
        "dataType": "refObject",
        "properties": {
            "object": {"dataType":"enum","enums":["list"],"required":true},
            "data": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Refund"},"required":true},
            "has_more": {"dataType":"boolean","required":true},
            "url": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Review.ClosedReason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["approved"]},{"dataType":"enum","enums":["disputed"]},{"dataType":"enum","enums":["redacted"]},{"dataType":"enum","enums":["refunded"]},{"dataType":"enum","enums":["refunded_as_fraud"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Review.IpAddressLocation": {
        "dataType": "refObject",
        "properties": {
            "city": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "latitude": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "longitude": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "region": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Review.OpenedReason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["manual"]},{"dataType":"enum","enums":["rule"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Review.Session": {
        "dataType": "refObject",
        "properties": {
            "browser": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "device": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "platform": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "version": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Review": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["review"],"required":true},
            "billing_zip": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "charge": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Charge"},{"dataType":"enum","enums":[null]}],"required":true},
            "closed_reason": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Review.ClosedReason"},{"dataType":"enum","enums":[null]}],"required":true},
            "created": {"dataType":"double","required":true},
            "ip_address": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "ip_address_location": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Review.IpAddressLocation"},{"dataType":"enum","enums":[null]}],"required":true},
            "livemode": {"dataType":"boolean","required":true},
            "open": {"dataType":"boolean","required":true},
            "opened_reason": {"ref":"stripe.Stripe.Review.OpenedReason","required":true},
            "payment_intent": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PaymentIntent"}]},
            "reason": {"dataType":"string","required":true},
            "session": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Review.Session"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.Shipping": {
        "dataType": "refObject",
        "properties": {
            "address": {"ref":"stripe.Stripe.Address"},
            "carrier": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "name": {"dataType":"string"},
            "phone": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "tracking_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["failed"]},{"dataType":"enum","enums":["pending"]},{"dataType":"enum","enums":["succeeded"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Charge.TransferData": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "destination": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.CollectionMethod": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["charge_automatically"]},{"dataType":"enum","enums":["send_invoice"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.CustomField": {
        "dataType": "refObject",
        "properties": {
            "name": {"dataType":"string","required":true},
            "value": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.CustomerShipping": {
        "dataType": "refObject",
        "properties": {
            "address": {"ref":"stripe.Stripe.Address"},
            "carrier": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "name": {"dataType":"string"},
            "phone": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "tracking_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.CustomerTaxExempt": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["exempt"]},{"dataType":"enum","enums":["none"]},{"dataType":"enum","enums":["reverse"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.CustomerTaxId.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["ad_nrt"]},{"dataType":"enum","enums":["ae_trn"]},{"dataType":"enum","enums":["ar_cuit"]},{"dataType":"enum","enums":["au_abn"]},{"dataType":"enum","enums":["au_arn"]},{"dataType":"enum","enums":["bg_uic"]},{"dataType":"enum","enums":["bh_vat"]},{"dataType":"enum","enums":["bo_tin"]},{"dataType":"enum","enums":["br_cnpj"]},{"dataType":"enum","enums":["br_cpf"]},{"dataType":"enum","enums":["ca_bn"]},{"dataType":"enum","enums":["ca_gst_hst"]},{"dataType":"enum","enums":["ca_pst_bc"]},{"dataType":"enum","enums":["ca_pst_mb"]},{"dataType":"enum","enums":["ca_pst_sk"]},{"dataType":"enum","enums":["ca_qst"]},{"dataType":"enum","enums":["ch_uid"]},{"dataType":"enum","enums":["ch_vat"]},{"dataType":"enum","enums":["cl_tin"]},{"dataType":"enum","enums":["cn_tin"]},{"dataType":"enum","enums":["co_nit"]},{"dataType":"enum","enums":["cr_tin"]},{"dataType":"enum","enums":["de_stn"]},{"dataType":"enum","enums":["do_rcn"]},{"dataType":"enum","enums":["ec_ruc"]},{"dataType":"enum","enums":["eg_tin"]},{"dataType":"enum","enums":["es_cif"]},{"dataType":"enum","enums":["eu_oss_vat"]},{"dataType":"enum","enums":["eu_vat"]},{"dataType":"enum","enums":["gb_vat"]},{"dataType":"enum","enums":["ge_vat"]},{"dataType":"enum","enums":["hk_br"]},{"dataType":"enum","enums":["hr_oib"]},{"dataType":"enum","enums":["hu_tin"]},{"dataType":"enum","enums":["id_npwp"]},{"dataType":"enum","enums":["il_vat"]},{"dataType":"enum","enums":["in_gst"]},{"dataType":"enum","enums":["is_vat"]},{"dataType":"enum","enums":["jp_cn"]},{"dataType":"enum","enums":["jp_rn"]},{"dataType":"enum","enums":["jp_trn"]},{"dataType":"enum","enums":["ke_pin"]},{"dataType":"enum","enums":["kr_brn"]},{"dataType":"enum","enums":["kz_bin"]},{"dataType":"enum","enums":["li_uid"]},{"dataType":"enum","enums":["mx_rfc"]},{"dataType":"enum","enums":["my_frp"]},{"dataType":"enum","enums":["my_itn"]},{"dataType":"enum","enums":["my_sst"]},{"dataType":"enum","enums":["ng_tin"]},{"dataType":"enum","enums":["no_vat"]},{"dataType":"enum","enums":["no_voec"]},{"dataType":"enum","enums":["nz_gst"]},{"dataType":"enum","enums":["om_vat"]},{"dataType":"enum","enums":["pe_ruc"]},{"dataType":"enum","enums":["ph_tin"]},{"dataType":"enum","enums":["ro_tin"]},{"dataType":"enum","enums":["rs_pib"]},{"dataType":"enum","enums":["ru_inn"]},{"dataType":"enum","enums":["ru_kpp"]},{"dataType":"enum","enums":["sa_vat"]},{"dataType":"enum","enums":["sg_gst"]},{"dataType":"enum","enums":["sg_uen"]},{"dataType":"enum","enums":["si_tin"]},{"dataType":"enum","enums":["sv_nit"]},{"dataType":"enum","enums":["th_vat"]},{"dataType":"enum","enums":["tr_tin"]},{"dataType":"enum","enums":["tw_vat"]},{"dataType":"enum","enums":["ua_vat"]},{"dataType":"enum","enums":["unknown"]},{"dataType":"enum","enums":["us_ein"]},{"dataType":"enum","enums":["uy_ruc"]},{"dataType":"enum","enums":["ve_rif"]},{"dataType":"enum","enums":["vn_tin"]},{"dataType":"enum","enums":["za_vat"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.CustomerTaxId": {
        "dataType": "refObject",
        "properties": {
            "type": {"ref":"stripe.Stripe.Invoice.CustomerTaxId.Type","required":true},
            "value": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.TaxRate.JurisdictionLevel": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["city"]},{"dataType":"enum","enums":["country"]},{"dataType":"enum","enums":["county"]},{"dataType":"enum","enums":["district"]},{"dataType":"enum","enums":["multiple"]},{"dataType":"enum","enums":["state"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.TaxRate.TaxType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["amusement_tax"]},{"dataType":"enum","enums":["communications_tax"]},{"dataType":"enum","enums":["gst"]},{"dataType":"enum","enums":["hst"]},{"dataType":"enum","enums":["igst"]},{"dataType":"enum","enums":["jct"]},{"dataType":"enum","enums":["lease_tax"]},{"dataType":"enum","enums":["pst"]},{"dataType":"enum","enums":["qst"]},{"dataType":"enum","enums":["rst"]},{"dataType":"enum","enums":["sales_tax"]},{"dataType":"enum","enums":["vat"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.TaxRate": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["tax_rate"],"required":true},
            "active": {"dataType":"boolean","required":true},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "created": {"dataType":"double","required":true},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "display_name": {"dataType":"string","required":true},
            "effective_percentage": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "inclusive": {"dataType":"boolean","required":true},
            "jurisdiction": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "jurisdiction_level": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.TaxRate.JurisdictionLevel"},{"dataType":"enum","enums":[null]}],"required":true},
            "livemode": {"dataType":"boolean","required":true},
            "metadata": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Metadata"},{"dataType":"enum","enums":[null]}],"required":true},
            "percentage": {"dataType":"double","required":true},
            "state": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "tax_type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.TaxRate.TaxType"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.DeletedDiscount": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["discount"],"required":true},
            "checkout_session": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "coupon": {"ref":"stripe.Stripe.Coupon","required":true},
            "customer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Customer"},{"ref":"stripe.Stripe.DeletedCustomer"},{"dataType":"enum","enums":[null]}],"required":true},
            "deleted": {"dataType":"enum","enums":[true],"required":true},
            "invoice": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "invoice_item": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "promotion_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PromotionCode"},{"dataType":"enum","enums":[null]}],"required":true},
            "start": {"dataType":"double","required":true},
            "subscription": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "subscription_item": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.FromInvoice": {
        "dataType": "refObject",
        "properties": {
            "action": {"dataType":"string","required":true},
            "invoice": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Invoice"}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.Issuer.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["account"]},{"dataType":"enum","enums":["self"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.Issuer": {
        "dataType": "refObject",
        "properties": {
            "account": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"}]},
            "type": {"ref":"stripe.Stripe.Invoice.Issuer.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.LastFinalizationError.Code": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["account_closed"]},{"dataType":"enum","enums":["account_country_invalid_address"]},{"dataType":"enum","enums":["account_error_country_change_requires_additional_steps"]},{"dataType":"enum","enums":["account_information_mismatch"]},{"dataType":"enum","enums":["account_invalid"]},{"dataType":"enum","enums":["account_number_invalid"]},{"dataType":"enum","enums":["acss_debit_session_incomplete"]},{"dataType":"enum","enums":["alipay_upgrade_required"]},{"dataType":"enum","enums":["amount_too_large"]},{"dataType":"enum","enums":["amount_too_small"]},{"dataType":"enum","enums":["api_key_expired"]},{"dataType":"enum","enums":["application_fees_not_allowed"]},{"dataType":"enum","enums":["authentication_required"]},{"dataType":"enum","enums":["balance_insufficient"]},{"dataType":"enum","enums":["balance_invalid_parameter"]},{"dataType":"enum","enums":["bank_account_bad_routing_numbers"]},{"dataType":"enum","enums":["bank_account_declined"]},{"dataType":"enum","enums":["bank_account_exists"]},{"dataType":"enum","enums":["bank_account_restricted"]},{"dataType":"enum","enums":["bank_account_unusable"]},{"dataType":"enum","enums":["bank_account_unverified"]},{"dataType":"enum","enums":["bank_account_verification_failed"]},{"dataType":"enum","enums":["billing_invalid_mandate"]},{"dataType":"enum","enums":["bitcoin_upgrade_required"]},{"dataType":"enum","enums":["capture_charge_authorization_expired"]},{"dataType":"enum","enums":["capture_unauthorized_payment"]},{"dataType":"enum","enums":["card_decline_rate_limit_exceeded"]},{"dataType":"enum","enums":["card_declined"]},{"dataType":"enum","enums":["cardholder_phone_number_required"]},{"dataType":"enum","enums":["charge_already_captured"]},{"dataType":"enum","enums":["charge_already_refunded"]},{"dataType":"enum","enums":["charge_disputed"]},{"dataType":"enum","enums":["charge_exceeds_source_limit"]},{"dataType":"enum","enums":["charge_exceeds_transaction_limit"]},{"dataType":"enum","enums":["charge_expired_for_capture"]},{"dataType":"enum","enums":["charge_invalid_parameter"]},{"dataType":"enum","enums":["charge_not_refundable"]},{"dataType":"enum","enums":["clearing_code_unsupported"]},{"dataType":"enum","enums":["country_code_invalid"]},{"dataType":"enum","enums":["country_unsupported"]},{"dataType":"enum","enums":["coupon_expired"]},{"dataType":"enum","enums":["customer_max_payment_methods"]},{"dataType":"enum","enums":["customer_max_subscriptions"]},{"dataType":"enum","enums":["customer_tax_location_invalid"]},{"dataType":"enum","enums":["debit_not_authorized"]},{"dataType":"enum","enums":["email_invalid"]},{"dataType":"enum","enums":["expired_card"]},{"dataType":"enum","enums":["financial_connections_account_inactive"]},{"dataType":"enum","enums":["financial_connections_no_successful_transaction_refresh"]},{"dataType":"enum","enums":["forwarding_api_inactive"]},{"dataType":"enum","enums":["forwarding_api_invalid_parameter"]},{"dataType":"enum","enums":["forwarding_api_upstream_connection_error"]},{"dataType":"enum","enums":["forwarding_api_upstream_connection_timeout"]},{"dataType":"enum","enums":["idempotency_key_in_use"]},{"dataType":"enum","enums":["incorrect_address"]},{"dataType":"enum","enums":["incorrect_cvc"]},{"dataType":"enum","enums":["incorrect_number"]},{"dataType":"enum","enums":["incorrect_zip"]},{"dataType":"enum","enums":["instant_payouts_config_disabled"]},{"dataType":"enum","enums":["instant_payouts_currency_disabled"]},{"dataType":"enum","enums":["instant_payouts_limit_exceeded"]},{"dataType":"enum","enums":["instant_payouts_unsupported"]},{"dataType":"enum","enums":["insufficient_funds"]},{"dataType":"enum","enums":["intent_invalid_state"]},{"dataType":"enum","enums":["intent_verification_method_missing"]},{"dataType":"enum","enums":["invalid_card_type"]},{"dataType":"enum","enums":["invalid_characters"]},{"dataType":"enum","enums":["invalid_charge_amount"]},{"dataType":"enum","enums":["invalid_cvc"]},{"dataType":"enum","enums":["invalid_expiry_month"]},{"dataType":"enum","enums":["invalid_expiry_year"]},{"dataType":"enum","enums":["invalid_mandate_reference_prefix_format"]},{"dataType":"enum","enums":["invalid_number"]},{"dataType":"enum","enums":["invalid_source_usage"]},{"dataType":"enum","enums":["invalid_tax_location"]},{"dataType":"enum","enums":["invoice_no_customer_line_items"]},{"dataType":"enum","enums":["invoice_no_payment_method_types"]},{"dataType":"enum","enums":["invoice_no_subscription_line_items"]},{"dataType":"enum","enums":["invoice_not_editable"]},{"dataType":"enum","enums":["invoice_on_behalf_of_not_editable"]},{"dataType":"enum","enums":["invoice_payment_intent_requires_action"]},{"dataType":"enum","enums":["invoice_upcoming_none"]},{"dataType":"enum","enums":["livemode_mismatch"]},{"dataType":"enum","enums":["lock_timeout"]},{"dataType":"enum","enums":["missing"]},{"dataType":"enum","enums":["no_account"]},{"dataType":"enum","enums":["not_allowed_on_standard_account"]},{"dataType":"enum","enums":["out_of_inventory"]},{"dataType":"enum","enums":["ownership_declaration_not_allowed"]},{"dataType":"enum","enums":["parameter_invalid_empty"]},{"dataType":"enum","enums":["parameter_invalid_integer"]},{"dataType":"enum","enums":["parameter_invalid_string_blank"]},{"dataType":"enum","enums":["parameter_invalid_string_empty"]},{"dataType":"enum","enums":["parameter_missing"]},{"dataType":"enum","enums":["parameter_unknown"]},{"dataType":"enum","enums":["parameters_exclusive"]},{"dataType":"enum","enums":["payment_intent_action_required"]},{"dataType":"enum","enums":["payment_intent_authentication_failure"]},{"dataType":"enum","enums":["payment_intent_incompatible_payment_method"]},{"dataType":"enum","enums":["payment_intent_invalid_parameter"]},{"dataType":"enum","enums":["payment_intent_konbini_rejected_confirmation_number"]},{"dataType":"enum","enums":["payment_intent_mandate_invalid"]},{"dataType":"enum","enums":["payment_intent_payment_attempt_expired"]},{"dataType":"enum","enums":["payment_intent_payment_attempt_failed"]},{"dataType":"enum","enums":["payment_intent_unexpected_state"]},{"dataType":"enum","enums":["payment_method_bank_account_already_verified"]},{"dataType":"enum","enums":["payment_method_bank_account_blocked"]},{"dataType":"enum","enums":["payment_method_billing_details_address_missing"]},{"dataType":"enum","enums":["payment_method_configuration_failures"]},{"dataType":"enum","enums":["payment_method_currency_mismatch"]},{"dataType":"enum","enums":["payment_method_customer_decline"]},{"dataType":"enum","enums":["payment_method_invalid_parameter"]},{"dataType":"enum","enums":["payment_method_invalid_parameter_testmode"]},{"dataType":"enum","enums":["payment_method_microdeposit_failed"]},{"dataType":"enum","enums":["payment_method_microdeposit_verification_amounts_invalid"]},{"dataType":"enum","enums":["payment_method_microdeposit_verification_amounts_mismatch"]},{"dataType":"enum","enums":["payment_method_microdeposit_verification_attempts_exceeded"]},{"dataType":"enum","enums":["payment_method_microdeposit_verification_descriptor_code_mismatch"]},{"dataType":"enum","enums":["payment_method_microdeposit_verification_timeout"]},{"dataType":"enum","enums":["payment_method_not_available"]},{"dataType":"enum","enums":["payment_method_provider_decline"]},{"dataType":"enum","enums":["payment_method_provider_timeout"]},{"dataType":"enum","enums":["payment_method_unactivated"]},{"dataType":"enum","enums":["payment_method_unexpected_state"]},{"dataType":"enum","enums":["payment_method_unsupported_type"]},{"dataType":"enum","enums":["payout_reconciliation_not_ready"]},{"dataType":"enum","enums":["payouts_limit_exceeded"]},{"dataType":"enum","enums":["payouts_not_allowed"]},{"dataType":"enum","enums":["platform_account_required"]},{"dataType":"enum","enums":["platform_api_key_expired"]},{"dataType":"enum","enums":["postal_code_invalid"]},{"dataType":"enum","enums":["processing_error"]},{"dataType":"enum","enums":["product_inactive"]},{"dataType":"enum","enums":["progressive_onboarding_limit_exceeded"]},{"dataType":"enum","enums":["rate_limit"]},{"dataType":"enum","enums":["refer_to_customer"]},{"dataType":"enum","enums":["refund_disputed_payment"]},{"dataType":"enum","enums":["resource_already_exists"]},{"dataType":"enum","enums":["resource_missing"]},{"dataType":"enum","enums":["return_intent_already_processed"]},{"dataType":"enum","enums":["routing_number_invalid"]},{"dataType":"enum","enums":["secret_key_required"]},{"dataType":"enum","enums":["sepa_unsupported_account"]},{"dataType":"enum","enums":["setup_attempt_failed"]},{"dataType":"enum","enums":["setup_intent_authentication_failure"]},{"dataType":"enum","enums":["setup_intent_invalid_parameter"]},{"dataType":"enum","enums":["setup_intent_mandate_invalid"]},{"dataType":"enum","enums":["setup_intent_setup_attempt_expired"]},{"dataType":"enum","enums":["setup_intent_unexpected_state"]},{"dataType":"enum","enums":["shipping_address_invalid"]},{"dataType":"enum","enums":["shipping_calculation_failed"]},{"dataType":"enum","enums":["sku_inactive"]},{"dataType":"enum","enums":["state_unsupported"]},{"dataType":"enum","enums":["status_transition_invalid"]},{"dataType":"enum","enums":["stripe_tax_inactive"]},{"dataType":"enum","enums":["tax_id_invalid"]},{"dataType":"enum","enums":["taxes_calculation_failed"]},{"dataType":"enum","enums":["terminal_location_country_unsupported"]},{"dataType":"enum","enums":["terminal_reader_busy"]},{"dataType":"enum","enums":["terminal_reader_hardware_fault"]},{"dataType":"enum","enums":["terminal_reader_invalid_location_for_activation"]},{"dataType":"enum","enums":["terminal_reader_invalid_location_for_payment"]},{"dataType":"enum","enums":["terminal_reader_offline"]},{"dataType":"enum","enums":["terminal_reader_timeout"]},{"dataType":"enum","enums":["testmode_charges_only"]},{"dataType":"enum","enums":["tls_version_unsupported"]},{"dataType":"enum","enums":["token_already_used"]},{"dataType":"enum","enums":["token_card_network_invalid"]},{"dataType":"enum","enums":["token_in_use"]},{"dataType":"enum","enums":["transfer_source_balance_parameters_mismatch"]},{"dataType":"enum","enums":["transfers_not_allowed"]},{"dataType":"enum","enums":["url_invalid"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.AutomaticPaymentMethods.AllowRedirects": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["always"]},{"dataType":"enum","enums":["never"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.AutomaticPaymentMethods": {
        "dataType": "refObject",
        "properties": {
            "allow_redirects": {"ref":"stripe.Stripe.SetupIntent.AutomaticPaymentMethods.AllowRedirects"},
            "enabled": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.CancellationReason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["abandoned"]},{"dataType":"enum","enums":["duplicate"]},{"dataType":"enum","enums":["requested_by_customer"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.FlowDirection": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["inbound"]},{"dataType":"enum","enums":["outbound"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.LastSetupError.Code": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["account_closed"]},{"dataType":"enum","enums":["account_country_invalid_address"]},{"dataType":"enum","enums":["account_error_country_change_requires_additional_steps"]},{"dataType":"enum","enums":["account_information_mismatch"]},{"dataType":"enum","enums":["account_invalid"]},{"dataType":"enum","enums":["account_number_invalid"]},{"dataType":"enum","enums":["acss_debit_session_incomplete"]},{"dataType":"enum","enums":["alipay_upgrade_required"]},{"dataType":"enum","enums":["amount_too_large"]},{"dataType":"enum","enums":["amount_too_small"]},{"dataType":"enum","enums":["api_key_expired"]},{"dataType":"enum","enums":["application_fees_not_allowed"]},{"dataType":"enum","enums":["authentication_required"]},{"dataType":"enum","enums":["balance_insufficient"]},{"dataType":"enum","enums":["balance_invalid_parameter"]},{"dataType":"enum","enums":["bank_account_bad_routing_numbers"]},{"dataType":"enum","enums":["bank_account_declined"]},{"dataType":"enum","enums":["bank_account_exists"]},{"dataType":"enum","enums":["bank_account_restricted"]},{"dataType":"enum","enums":["bank_account_unusable"]},{"dataType":"enum","enums":["bank_account_unverified"]},{"dataType":"enum","enums":["bank_account_verification_failed"]},{"dataType":"enum","enums":["billing_invalid_mandate"]},{"dataType":"enum","enums":["bitcoin_upgrade_required"]},{"dataType":"enum","enums":["capture_charge_authorization_expired"]},{"dataType":"enum","enums":["capture_unauthorized_payment"]},{"dataType":"enum","enums":["card_decline_rate_limit_exceeded"]},{"dataType":"enum","enums":["card_declined"]},{"dataType":"enum","enums":["cardholder_phone_number_required"]},{"dataType":"enum","enums":["charge_already_captured"]},{"dataType":"enum","enums":["charge_already_refunded"]},{"dataType":"enum","enums":["charge_disputed"]},{"dataType":"enum","enums":["charge_exceeds_source_limit"]},{"dataType":"enum","enums":["charge_exceeds_transaction_limit"]},{"dataType":"enum","enums":["charge_expired_for_capture"]},{"dataType":"enum","enums":["charge_invalid_parameter"]},{"dataType":"enum","enums":["charge_not_refundable"]},{"dataType":"enum","enums":["clearing_code_unsupported"]},{"dataType":"enum","enums":["country_code_invalid"]},{"dataType":"enum","enums":["country_unsupported"]},{"dataType":"enum","enums":["coupon_expired"]},{"dataType":"enum","enums":["customer_max_payment_methods"]},{"dataType":"enum","enums":["customer_max_subscriptions"]},{"dataType":"enum","enums":["customer_tax_location_invalid"]},{"dataType":"enum","enums":["debit_not_authorized"]},{"dataType":"enum","enums":["email_invalid"]},{"dataType":"enum","enums":["expired_card"]},{"dataType":"enum","enums":["financial_connections_account_inactive"]},{"dataType":"enum","enums":["financial_connections_no_successful_transaction_refresh"]},{"dataType":"enum","enums":["forwarding_api_inactive"]},{"dataType":"enum","enums":["forwarding_api_invalid_parameter"]},{"dataType":"enum","enums":["forwarding_api_upstream_connection_error"]},{"dataType":"enum","enums":["forwarding_api_upstream_connection_timeout"]},{"dataType":"enum","enums":["idempotency_key_in_use"]},{"dataType":"enum","enums":["incorrect_address"]},{"dataType":"enum","enums":["incorrect_cvc"]},{"dataType":"enum","enums":["incorrect_number"]},{"dataType":"enum","enums":["incorrect_zip"]},{"dataType":"enum","enums":["instant_payouts_config_disabled"]},{"dataType":"enum","enums":["instant_payouts_currency_disabled"]},{"dataType":"enum","enums":["instant_payouts_limit_exceeded"]},{"dataType":"enum","enums":["instant_payouts_unsupported"]},{"dataType":"enum","enums":["insufficient_funds"]},{"dataType":"enum","enums":["intent_invalid_state"]},{"dataType":"enum","enums":["intent_verification_method_missing"]},{"dataType":"enum","enums":["invalid_card_type"]},{"dataType":"enum","enums":["invalid_characters"]},{"dataType":"enum","enums":["invalid_charge_amount"]},{"dataType":"enum","enums":["invalid_cvc"]},{"dataType":"enum","enums":["invalid_expiry_month"]},{"dataType":"enum","enums":["invalid_expiry_year"]},{"dataType":"enum","enums":["invalid_mandate_reference_prefix_format"]},{"dataType":"enum","enums":["invalid_number"]},{"dataType":"enum","enums":["invalid_source_usage"]},{"dataType":"enum","enums":["invalid_tax_location"]},{"dataType":"enum","enums":["invoice_no_customer_line_items"]},{"dataType":"enum","enums":["invoice_no_payment_method_types"]},{"dataType":"enum","enums":["invoice_no_subscription_line_items"]},{"dataType":"enum","enums":["invoice_not_editable"]},{"dataType":"enum","enums":["invoice_on_behalf_of_not_editable"]},{"dataType":"enum","enums":["invoice_payment_intent_requires_action"]},{"dataType":"enum","enums":["invoice_upcoming_none"]},{"dataType":"enum","enums":["livemode_mismatch"]},{"dataType":"enum","enums":["lock_timeout"]},{"dataType":"enum","enums":["missing"]},{"dataType":"enum","enums":["no_account"]},{"dataType":"enum","enums":["not_allowed_on_standard_account"]},{"dataType":"enum","enums":["out_of_inventory"]},{"dataType":"enum","enums":["ownership_declaration_not_allowed"]},{"dataType":"enum","enums":["parameter_invalid_empty"]},{"dataType":"enum","enums":["parameter_invalid_integer"]},{"dataType":"enum","enums":["parameter_invalid_string_blank"]},{"dataType":"enum","enums":["parameter_invalid_string_empty"]},{"dataType":"enum","enums":["parameter_missing"]},{"dataType":"enum","enums":["parameter_unknown"]},{"dataType":"enum","enums":["parameters_exclusive"]},{"dataType":"enum","enums":["payment_intent_action_required"]},{"dataType":"enum","enums":["payment_intent_authentication_failure"]},{"dataType":"enum","enums":["payment_intent_incompatible_payment_method"]},{"dataType":"enum","enums":["payment_intent_invalid_parameter"]},{"dataType":"enum","enums":["payment_intent_konbini_rejected_confirmation_number"]},{"dataType":"enum","enums":["payment_intent_mandate_invalid"]},{"dataType":"enum","enums":["payment_intent_payment_attempt_expired"]},{"dataType":"enum","enums":["payment_intent_payment_attempt_failed"]},{"dataType":"enum","enums":["payment_intent_unexpected_state"]},{"dataType":"enum","enums":["payment_method_bank_account_already_verified"]},{"dataType":"enum","enums":["payment_method_bank_account_blocked"]},{"dataType":"enum","enums":["payment_method_billing_details_address_missing"]},{"dataType":"enum","enums":["payment_method_configuration_failures"]},{"dataType":"enum","enums":["payment_method_currency_mismatch"]},{"dataType":"enum","enums":["payment_method_customer_decline"]},{"dataType":"enum","enums":["payment_method_invalid_parameter"]},{"dataType":"enum","enums":["payment_method_invalid_parameter_testmode"]},{"dataType":"enum","enums":["payment_method_microdeposit_failed"]},{"dataType":"enum","enums":["payment_method_microdeposit_verification_amounts_invalid"]},{"dataType":"enum","enums":["payment_method_microdeposit_verification_amounts_mismatch"]},{"dataType":"enum","enums":["payment_method_microdeposit_verification_attempts_exceeded"]},{"dataType":"enum","enums":["payment_method_microdeposit_verification_descriptor_code_mismatch"]},{"dataType":"enum","enums":["payment_method_microdeposit_verification_timeout"]},{"dataType":"enum","enums":["payment_method_not_available"]},{"dataType":"enum","enums":["payment_method_provider_decline"]},{"dataType":"enum","enums":["payment_method_provider_timeout"]},{"dataType":"enum","enums":["payment_method_unactivated"]},{"dataType":"enum","enums":["payment_method_unexpected_state"]},{"dataType":"enum","enums":["payment_method_unsupported_type"]},{"dataType":"enum","enums":["payout_reconciliation_not_ready"]},{"dataType":"enum","enums":["payouts_limit_exceeded"]},{"dataType":"enum","enums":["payouts_not_allowed"]},{"dataType":"enum","enums":["platform_account_required"]},{"dataType":"enum","enums":["platform_api_key_expired"]},{"dataType":"enum","enums":["postal_code_invalid"]},{"dataType":"enum","enums":["processing_error"]},{"dataType":"enum","enums":["product_inactive"]},{"dataType":"enum","enums":["progressive_onboarding_limit_exceeded"]},{"dataType":"enum","enums":["rate_limit"]},{"dataType":"enum","enums":["refer_to_customer"]},{"dataType":"enum","enums":["refund_disputed_payment"]},{"dataType":"enum","enums":["resource_already_exists"]},{"dataType":"enum","enums":["resource_missing"]},{"dataType":"enum","enums":["return_intent_already_processed"]},{"dataType":"enum","enums":["routing_number_invalid"]},{"dataType":"enum","enums":["secret_key_required"]},{"dataType":"enum","enums":["sepa_unsupported_account"]},{"dataType":"enum","enums":["setup_attempt_failed"]},{"dataType":"enum","enums":["setup_intent_authentication_failure"]},{"dataType":"enum","enums":["setup_intent_invalid_parameter"]},{"dataType":"enum","enums":["setup_intent_mandate_invalid"]},{"dataType":"enum","enums":["setup_intent_setup_attempt_expired"]},{"dataType":"enum","enums":["setup_intent_unexpected_state"]},{"dataType":"enum","enums":["shipping_address_invalid"]},{"dataType":"enum","enums":["shipping_calculation_failed"]},{"dataType":"enum","enums":["sku_inactive"]},{"dataType":"enum","enums":["state_unsupported"]},{"dataType":"enum","enums":["status_transition_invalid"]},{"dataType":"enum","enums":["stripe_tax_inactive"]},{"dataType":"enum","enums":["tax_id_invalid"]},{"dataType":"enum","enums":["taxes_calculation_failed"]},{"dataType":"enum","enums":["terminal_location_country_unsupported"]},{"dataType":"enum","enums":["terminal_reader_busy"]},{"dataType":"enum","enums":["terminal_reader_hardware_fault"]},{"dataType":"enum","enums":["terminal_reader_invalid_location_for_activation"]},{"dataType":"enum","enums":["terminal_reader_invalid_location_for_payment"]},{"dataType":"enum","enums":["terminal_reader_offline"]},{"dataType":"enum","enums":["terminal_reader_timeout"]},{"dataType":"enum","enums":["testmode_charges_only"]},{"dataType":"enum","enums":["tls_version_unsupported"]},{"dataType":"enum","enums":["token_already_used"]},{"dataType":"enum","enums":["token_card_network_invalid"]},{"dataType":"enum","enums":["token_in_use"]},{"dataType":"enum","enums":["transfer_source_balance_parameters_mismatch"]},{"dataType":"enum","enums":["transfers_not_allowed"]},{"dataType":"enum","enums":["url_invalid"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["setup_intent"],"required":true},
            "application": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Application"},{"dataType":"enum","enums":[null]}],"required":true},
            "attach_to_self": {"dataType":"boolean"},
            "automatic_payment_methods": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupIntent.AutomaticPaymentMethods"},{"dataType":"enum","enums":[null]}],"required":true},
            "cancellation_reason": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupIntent.CancellationReason"},{"dataType":"enum","enums":[null]}],"required":true},
            "client_secret": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "created": {"dataType":"double","required":true},
            "customer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Customer"},{"ref":"stripe.Stripe.DeletedCustomer"},{"dataType":"enum","enums":[null]}],"required":true},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "flow_directions": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.SetupIntent.FlowDirection"}},{"dataType":"enum","enums":[null]}],"required":true},
            "last_setup_error": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupIntent.LastSetupError"},{"dataType":"enum","enums":[null]}],"required":true},
            "latest_attempt": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.SetupAttempt"},{"dataType":"enum","enums":[null]}],"required":true},
            "livemode": {"dataType":"boolean","required":true},
            "mandate": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Mandate"},{"dataType":"enum","enums":[null]}],"required":true},
            "metadata": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Metadata"},{"dataType":"enum","enums":[null]}],"required":true},
            "next_action": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupIntent.NextAction"},{"dataType":"enum","enums":[null]}],"required":true},
            "on_behalf_of": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"},{"dataType":"enum","enums":[null]}],"required":true},
            "payment_method": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PaymentMethod"},{"dataType":"enum","enums":[null]}],"required":true},
            "payment_method_configuration_details": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupIntent.PaymentMethodConfigurationDetails"},{"dataType":"enum","enums":[null]}],"required":true},
            "payment_method_options": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions"},{"dataType":"enum","enums":[null]}],"required":true},
            "payment_method_types": {"dataType":"array","array":{"dataType":"string"},"required":true},
            "single_use_mandate": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Mandate"},{"dataType":"enum","enums":[null]}],"required":true},
            "status": {"ref":"stripe.Stripe.SetupIntent.Status","required":true},
            "usage": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.LastSetupError.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["api_error"]},{"dataType":"enum","enums":["card_error"]},{"dataType":"enum","enums":["idempotency_error"]},{"dataType":"enum","enums":["invalid_request_error"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.LastSetupError": {
        "dataType": "refObject",
        "properties": {
            "charge": {"dataType":"string"},
            "code": {"ref":"stripe.Stripe.SetupIntent.LastSetupError.Code"},
            "decline_code": {"dataType":"string"},
            "doc_url": {"dataType":"string"},
            "message": {"dataType":"string"},
            "param": {"dataType":"string"},
            "payment_intent": {"ref":"stripe.Stripe.PaymentIntent"},
            "payment_method": {"ref":"stripe.Stripe.PaymentMethod"},
            "payment_method_type": {"dataType":"string"},
            "request_log_url": {"dataType":"string"},
            "setup_intent": {"ref":"stripe.Stripe.SetupIntent"},
            "source": {"ref":"stripe.Stripe.CustomerSource"},
            "type": {"ref":"stripe.Stripe.SetupIntent.LastSetupError.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["setup_attempt"],"required":true},
            "application": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Application"},{"dataType":"enum","enums":[null]}],"required":true},
            "attach_to_self": {"dataType":"boolean"},
            "created": {"dataType":"double","required":true},
            "customer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Customer"},{"ref":"stripe.Stripe.DeletedCustomer"},{"dataType":"enum","enums":[null]}],"required":true},
            "flow_directions": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.SetupAttempt.FlowDirection"}},{"dataType":"enum","enums":[null]}],"required":true},
            "livemode": {"dataType":"boolean","required":true},
            "on_behalf_of": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"},{"dataType":"enum","enums":[null]}],"required":true},
            "payment_method": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PaymentMethod"}],"required":true},
            "payment_method_details": {"ref":"stripe.Stripe.SetupAttempt.PaymentMethodDetails","required":true},
            "setup_error": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupAttempt.SetupError"},{"dataType":"enum","enums":[null]}],"required":true},
            "setup_intent": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.SetupIntent"}],"required":true},
            "status": {"dataType":"string","required":true},
            "usage": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.NextAction.CashappHandleRedirectOrDisplayQrCode.QrCode": {
        "dataType": "refObject",
        "properties": {
            "expires_at": {"dataType":"double","required":true},
            "image_url_png": {"dataType":"string","required":true},
            "image_url_svg": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.NextAction.CashappHandleRedirectOrDisplayQrCode": {
        "dataType": "refObject",
        "properties": {
            "hosted_instructions_url": {"dataType":"string","required":true},
            "mobile_auth_url": {"dataType":"string","required":true},
            "qr_code": {"ref":"stripe.Stripe.SetupIntent.NextAction.CashappHandleRedirectOrDisplayQrCode.QrCode","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.NextAction.RedirectToUrl": {
        "dataType": "refObject",
        "properties": {
            "return_url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.NextAction.UseStripeSdk": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.NextAction.VerifyWithMicrodeposits.MicrodepositType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["amounts"]},{"dataType":"enum","enums":["descriptor_code"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.NextAction.VerifyWithMicrodeposits": {
        "dataType": "refObject",
        "properties": {
            "arrival_date": {"dataType":"double","required":true},
            "hosted_verification_url": {"dataType":"string","required":true},
            "microdeposit_type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupIntent.NextAction.VerifyWithMicrodeposits.MicrodepositType"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.NextAction": {
        "dataType": "refObject",
        "properties": {
            "cashapp_handle_redirect_or_display_qr_code": {"ref":"stripe.Stripe.SetupIntent.NextAction.CashappHandleRedirectOrDisplayQrCode"},
            "redirect_to_url": {"ref":"stripe.Stripe.SetupIntent.NextAction.RedirectToUrl"},
            "type": {"dataType":"string","required":true},
            "use_stripe_sdk": {"ref":"stripe.Stripe.SetupIntent.NextAction.UseStripeSdk"},
            "verify_with_microdeposits": {"ref":"stripe.Stripe.SetupIntent.NextAction.VerifyWithMicrodeposits"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodConfigurationDetails": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "parent": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.AcssDebit.Currency": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["cad"]},{"dataType":"enum","enums":["usd"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.AcssDebit.MandateOptions.DefaultFor": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["invoice"]},{"dataType":"enum","enums":["subscription"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.AcssDebit.MandateOptions.PaymentSchedule": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["combined"]},{"dataType":"enum","enums":["interval"]},{"dataType":"enum","enums":["sporadic"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.AcssDebit.MandateOptions.TransactionType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["business"]},{"dataType":"enum","enums":["personal"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.AcssDebit.MandateOptions": {
        "dataType": "refObject",
        "properties": {
            "custom_mandate_url": {"dataType":"string"},
            "default_for": {"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.AcssDebit.MandateOptions.DefaultFor"}},
            "interval_description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "payment_schedule": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.AcssDebit.MandateOptions.PaymentSchedule"},{"dataType":"enum","enums":[null]}],"required":true},
            "transaction_type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.AcssDebit.MandateOptions.TransactionType"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.AcssDebit.VerificationMethod": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["automatic"]},{"dataType":"enum","enums":["instant"]},{"dataType":"enum","enums":["microdeposits"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.AcssDebit": {
        "dataType": "refObject",
        "properties": {
            "currency": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.AcssDebit.Currency"},{"dataType":"enum","enums":[null]}],"required":true},
            "mandate_options": {"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.AcssDebit.MandateOptions"},
            "verification_method": {"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.AcssDebit.VerificationMethod"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.AmazonPay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.BacsDebit.MandateOptions": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.BacsDebit": {
        "dataType": "refObject",
        "properties": {
            "mandate_options": {"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.BacsDebit.MandateOptions"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.Card.MandateOptions.AmountType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["fixed"]},{"dataType":"enum","enums":["maximum"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.Card.MandateOptions.Interval": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["day"]},{"dataType":"enum","enums":["month"]},{"dataType":"enum","enums":["sporadic"]},{"dataType":"enum","enums":["week"]},{"dataType":"enum","enums":["year"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.Card.MandateOptions": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double","required":true},
            "amount_type": {"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.Card.MandateOptions.AmountType","required":true},
            "currency": {"dataType":"string","required":true},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "end_date": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "interval": {"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.Card.MandateOptions.Interval","required":true},
            "interval_count": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "reference": {"dataType":"string","required":true},
            "start_date": {"dataType":"double","required":true},
            "supported_types": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"enum","enums":["india"]}},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.Card.Network": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["amex"]},{"dataType":"enum","enums":["cartes_bancaires"]},{"dataType":"enum","enums":["diners"]},{"dataType":"enum","enums":["discover"]},{"dataType":"enum","enums":["eftpos_au"]},{"dataType":"enum","enums":["girocard"]},{"dataType":"enum","enums":["interac"]},{"dataType":"enum","enums":["jcb"]},{"dataType":"enum","enums":["mastercard"]},{"dataType":"enum","enums":["unionpay"]},{"dataType":"enum","enums":["unknown"]},{"dataType":"enum","enums":["visa"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.Card.RequestThreeDSecure": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["any"]},{"dataType":"enum","enums":["automatic"]},{"dataType":"enum","enums":["challenge"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.Card": {
        "dataType": "refObject",
        "properties": {
            "mandate_options": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.Card.MandateOptions"},{"dataType":"enum","enums":[null]}],"required":true},
            "network": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.Card.Network"},{"dataType":"enum","enums":[null]}],"required":true},
            "request_three_d_secure": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.Card.RequestThreeDSecure"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.CardPresent": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.Link": {
        "dataType": "refObject",
        "properties": {
            "persistent_token": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.Paypal": {
        "dataType": "refObject",
        "properties": {
            "billing_agreement_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.SepaDebit.MandateOptions": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.SepaDebit": {
        "dataType": "refObject",
        "properties": {
            "mandate_options": {"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.SepaDebit.MandateOptions"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.UsBankAccount.FinancialConnections.Filters.AccountSubcategory": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["checking"]},{"dataType":"enum","enums":["savings"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.UsBankAccount.FinancialConnections.Filters": {
        "dataType": "refObject",
        "properties": {
            "account_subcategories": {"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.UsBankAccount.FinancialConnections.Filters.AccountSubcategory"}},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.UsBankAccount.FinancialConnections.Permission": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["balances"]},{"dataType":"enum","enums":["ownership"]},{"dataType":"enum","enums":["payment_method"]},{"dataType":"enum","enums":["transactions"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.UsBankAccount.FinancialConnections.Prefetch": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["balances"]},{"dataType":"enum","enums":["ownership"]},{"dataType":"enum","enums":["transactions"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.UsBankAccount.FinancialConnections": {
        "dataType": "refObject",
        "properties": {
            "filters": {"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.UsBankAccount.FinancialConnections.Filters"},
            "permissions": {"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.UsBankAccount.FinancialConnections.Permission"}},
            "prefetch": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.UsBankAccount.FinancialConnections.Prefetch"}},{"dataType":"enum","enums":[null]}],"required":true},
            "return_url": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.UsBankAccount.MandateOptions": {
        "dataType": "refObject",
        "properties": {
            "collection_method": {"dataType":"enum","enums":["paper"]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.UsBankAccount.VerificationMethod": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["automatic"]},{"dataType":"enum","enums":["instant"]},{"dataType":"enum","enums":["microdeposits"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions.UsBankAccount": {
        "dataType": "refObject",
        "properties": {
            "financial_connections": {"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.UsBankAccount.FinancialConnections"},
            "mandate_options": {"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.UsBankAccount.MandateOptions"},
            "verification_method": {"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.UsBankAccount.VerificationMethod"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.PaymentMethodOptions": {
        "dataType": "refObject",
        "properties": {
            "acss_debit": {"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.AcssDebit"},
            "amazon_pay": {"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.AmazonPay"},
            "bacs_debit": {"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.BacsDebit"},
            "card": {"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.Card"},
            "card_present": {"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.CardPresent"},
            "link": {"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.Link"},
            "paypal": {"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.Paypal"},
            "sepa_debit": {"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.SepaDebit"},
            "us_bank_account": {"ref":"stripe.Stripe.SetupIntent.PaymentMethodOptions.UsBankAccount"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupIntent.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["canceled"]},{"dataType":"enum","enums":["processing"]},{"dataType":"enum","enums":["requires_action"]},{"dataType":"enum","enums":["requires_confirmation"]},{"dataType":"enum","enums":["requires_payment_method"]},{"dataType":"enum","enums":["succeeded"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.LastFinalizationError.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["api_error"]},{"dataType":"enum","enums":["card_error"]},{"dataType":"enum","enums":["idempotency_error"]},{"dataType":"enum","enums":["invalid_request_error"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.LastFinalizationError": {
        "dataType": "refObject",
        "properties": {
            "charge": {"dataType":"string"},
            "code": {"ref":"stripe.Stripe.Invoice.LastFinalizationError.Code"},
            "decline_code": {"dataType":"string"},
            "doc_url": {"dataType":"string"},
            "message": {"dataType":"string"},
            "param": {"dataType":"string"},
            "payment_intent": {"ref":"stripe.Stripe.PaymentIntent"},
            "payment_method": {"ref":"stripe.Stripe.PaymentMethod"},
            "payment_method_type": {"dataType":"string"},
            "request_log_url": {"dataType":"string"},
            "setup_intent": {"ref":"stripe.Stripe.SetupIntent"},
            "source": {"ref":"stripe.Stripe.CustomerSource"},
            "type": {"ref":"stripe.Stripe.Invoice.LastFinalizationError.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.InvoiceLineItem.DiscountAmount": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double","required":true},
            "discount": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Discount"},{"ref":"stripe.Stripe.DeletedDiscount"}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.InvoiceItem.Period": {
        "dataType": "refObject",
        "properties": {
            "end": {"dataType":"double","required":true},
            "start": {"dataType":"double","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Plan.AggregateUsage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["last_during_period"]},{"dataType":"enum","enums":["last_ever"]},{"dataType":"enum","enums":["max"]},{"dataType":"enum","enums":["sum"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Plan.BillingScheme": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["per_unit"]},{"dataType":"enum","enums":["tiered"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Plan.Interval": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["day"]},{"dataType":"enum","enums":["month"]},{"dataType":"enum","enums":["week"]},{"dataType":"enum","enums":["year"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Price.BillingScheme": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["per_unit"]},{"dataType":"enum","enums":["tiered"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Price.CurrencyOptions.CustomUnitAmount": {
        "dataType": "refObject",
        "properties": {
            "maximum": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "minimum": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "preset": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Price.CurrencyOptions.TaxBehavior": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["exclusive"]},{"dataType":"enum","enums":["inclusive"]},{"dataType":"enum","enums":["unspecified"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Price.CurrencyOptions.Tier": {
        "dataType": "refObject",
        "properties": {
            "flat_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "flat_amount_decimal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "unit_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "unit_amount_decimal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "up_to": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Price.CurrencyOptions": {
        "dataType": "refObject",
        "properties": {
            "custom_unit_amount": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Price.CurrencyOptions.CustomUnitAmount"},{"dataType":"enum","enums":[null]}],"required":true},
            "tax_behavior": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Price.CurrencyOptions.TaxBehavior"},{"dataType":"enum","enums":[null]}],"required":true},
            "tiers": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Price.CurrencyOptions.Tier"}},
            "unit_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "unit_amount_decimal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Price.CustomUnitAmount": {
        "dataType": "refObject",
        "properties": {
            "maximum": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "minimum": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "preset": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Product": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["product"],"required":true},
            "active": {"dataType":"boolean","required":true},
            "created": {"dataType":"double","required":true},
            "default_price": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Price"},{"dataType":"enum","enums":[null]}]},
            "deleted": {"dataType":"void"},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "images": {"dataType":"array","array":{"dataType":"string"},"required":true},
            "livemode": {"dataType":"boolean","required":true},
            "marketing_features": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Product.MarketingFeature"},"required":true},
            "metadata": {"ref":"stripe.Stripe.Metadata","required":true},
            "name": {"dataType":"string","required":true},
            "package_dimensions": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Product.PackageDimensions"},{"dataType":"enum","enums":[null]}],"required":true},
            "shippable": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}],"required":true},
            "statement_descriptor": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "tax_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.TaxCode"},{"dataType":"enum","enums":[null]}],"required":true},
            "type": {"ref":"stripe.Stripe.Product.Type","required":true},
            "unit_label": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "updated": {"dataType":"double","required":true},
            "url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.DeletedProduct": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["product"],"required":true},
            "deleted": {"dataType":"enum","enums":[true],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Price.Recurring.AggregateUsage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["last_during_period"]},{"dataType":"enum","enums":["last_ever"]},{"dataType":"enum","enums":["max"]},{"dataType":"enum","enums":["sum"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Price.Recurring.Interval": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["day"]},{"dataType":"enum","enums":["month"]},{"dataType":"enum","enums":["week"]},{"dataType":"enum","enums":["year"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Price.Recurring.UsageType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["licensed"]},{"dataType":"enum","enums":["metered"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Price.Recurring": {
        "dataType": "refObject",
        "properties": {
            "aggregate_usage": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Price.Recurring.AggregateUsage"},{"dataType":"enum","enums":[null]}],"required":true},
            "interval": {"ref":"stripe.Stripe.Price.Recurring.Interval","required":true},
            "interval_count": {"dataType":"double","required":true},
            "meter": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "trial_period_days": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "usage_type": {"ref":"stripe.Stripe.Price.Recurring.UsageType","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Price.TaxBehavior": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["exclusive"]},{"dataType":"enum","enums":["inclusive"]},{"dataType":"enum","enums":["unspecified"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Price.Tier": {
        "dataType": "refObject",
        "properties": {
            "flat_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "flat_amount_decimal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "unit_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "unit_amount_decimal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "up_to": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Price.TiersMode": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["graduated"]},{"dataType":"enum","enums":["volume"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Price.TransformQuantity.Round": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["down"]},{"dataType":"enum","enums":["up"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Price.TransformQuantity": {
        "dataType": "refObject",
        "properties": {
            "divide_by": {"dataType":"double","required":true},
            "round": {"ref":"stripe.Stripe.Price.TransformQuantity.Round","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Price.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["one_time"]},{"dataType":"enum","enums":["recurring"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Price": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["price"],"required":true},
            "active": {"dataType":"boolean","required":true},
            "billing_scheme": {"ref":"stripe.Stripe.Price.BillingScheme","required":true},
            "created": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "currency_options": {"dataType":"nestedObjectLiteral","nestedProperties":{},"additionalProperties":{"ref":"stripe.Stripe.Price.CurrencyOptions"}},
            "custom_unit_amount": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Price.CustomUnitAmount"},{"dataType":"enum","enums":[null]}],"required":true},
            "deleted": {"dataType":"void"},
            "livemode": {"dataType":"boolean","required":true},
            "lookup_key": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "metadata": {"ref":"stripe.Stripe.Metadata","required":true},
            "nickname": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "product": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Product"},{"ref":"stripe.Stripe.DeletedProduct"}],"required":true},
            "recurring": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Price.Recurring"},{"dataType":"enum","enums":[null]}],"required":true},
            "tax_behavior": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Price.TaxBehavior"},{"dataType":"enum","enums":[null]}],"required":true},
            "tiers": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Price.Tier"}},
            "tiers_mode": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Price.TiersMode"},{"dataType":"enum","enums":[null]}],"required":true},
            "transform_quantity": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Price.TransformQuantity"},{"dataType":"enum","enums":[null]}],"required":true},
            "type": {"ref":"stripe.Stripe.Price.Type","required":true},
            "unit_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "unit_amount_decimal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Product.MarketingFeature": {
        "dataType": "refObject",
        "properties": {
            "name": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Product.PackageDimensions": {
        "dataType": "refObject",
        "properties": {
            "height": {"dataType":"double","required":true},
            "length": {"dataType":"double","required":true},
            "weight": {"dataType":"double","required":true},
            "width": {"dataType":"double","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.TaxCode": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["tax_code"],"required":true},
            "description": {"dataType":"string","required":true},
            "name": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Product.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["good"]},{"dataType":"enum","enums":["service"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Plan.Tier": {
        "dataType": "refObject",
        "properties": {
            "flat_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "flat_amount_decimal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "unit_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "unit_amount_decimal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "up_to": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Plan.TiersMode": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["graduated"]},{"dataType":"enum","enums":["volume"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Plan.TransformUsage.Round": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["down"]},{"dataType":"enum","enums":["up"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Plan.TransformUsage": {
        "dataType": "refObject",
        "properties": {
            "divide_by": {"dataType":"double","required":true},
            "round": {"ref":"stripe.Stripe.Plan.TransformUsage.Round","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Plan.UsageType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["licensed"]},{"dataType":"enum","enums":["metered"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Plan": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["plan"],"required":true},
            "active": {"dataType":"boolean","required":true},
            "aggregate_usage": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Plan.AggregateUsage"},{"dataType":"enum","enums":[null]}],"required":true},
            "amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "amount_decimal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "billing_scheme": {"ref":"stripe.Stripe.Plan.BillingScheme","required":true},
            "created": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "deleted": {"dataType":"void"},
            "interval": {"ref":"stripe.Stripe.Plan.Interval","required":true},
            "interval_count": {"dataType":"double","required":true},
            "livemode": {"dataType":"boolean","required":true},
            "metadata": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Metadata"},{"dataType":"enum","enums":[null]}],"required":true},
            "meter": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "nickname": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "product": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Product"},{"ref":"stripe.Stripe.DeletedProduct"},{"dataType":"enum","enums":[null]}],"required":true},
            "tiers": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Plan.Tier"}},
            "tiers_mode": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Plan.TiersMode"},{"dataType":"enum","enums":[null]}],"required":true},
            "transform_usage": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Plan.TransformUsage"},{"dataType":"enum","enums":[null]}],"required":true},
            "trial_period_days": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "usage_type": {"ref":"stripe.Stripe.Plan.UsageType","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["subscription"],"required":true},
            "application": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Application"},{"ref":"stripe.Stripe.DeletedApplication"},{"dataType":"enum","enums":[null]}],"required":true},
            "application_fee_percent": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "automatic_tax": {"ref":"stripe.Stripe.Subscription.AutomaticTax","required":true},
            "billing_cycle_anchor": {"dataType":"double","required":true},
            "billing_cycle_anchor_config": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Subscription.BillingCycleAnchorConfig"},{"dataType":"enum","enums":[null]}],"required":true},
            "billing_thresholds": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Subscription.BillingThresholds"},{"dataType":"enum","enums":[null]}],"required":true},
            "cancel_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "cancel_at_period_end": {"dataType":"boolean","required":true},
            "canceled_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "cancellation_details": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Subscription.CancellationDetails"},{"dataType":"enum","enums":[null]}],"required":true},
            "collection_method": {"ref":"stripe.Stripe.Subscription.CollectionMethod","required":true},
            "created": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "current_period_end": {"dataType":"double","required":true},
            "current_period_start": {"dataType":"double","required":true},
            "customer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Customer"},{"ref":"stripe.Stripe.DeletedCustomer"}],"required":true},
            "days_until_due": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "default_payment_method": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PaymentMethod"},{"dataType":"enum","enums":[null]}],"required":true},
            "default_source": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.CustomerSource"},{"dataType":"enum","enums":[null]}],"required":true},
            "default_tax_rates": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.TaxRate"}},{"dataType":"enum","enums":[null]}]},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "discount": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Discount"},{"dataType":"enum","enums":[null]}],"required":true},
            "discounts": {"dataType":"array","array":{"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Discount"}]},"required":true},
            "ended_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "invoice_settings": {"ref":"stripe.Stripe.Subscription.InvoiceSettings","required":true},
            "items": {"ref":"stripe.Stripe.ApiList_stripe.Stripe.SubscriptionItem_","required":true},
            "latest_invoice": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Invoice"},{"dataType":"enum","enums":[null]}],"required":true},
            "livemode": {"dataType":"boolean","required":true},
            "metadata": {"ref":"stripe.Stripe.Metadata","required":true},
            "next_pending_invoice_item_invoice": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "on_behalf_of": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"},{"dataType":"enum","enums":[null]}],"required":true},
            "pause_collection": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Subscription.PauseCollection"},{"dataType":"enum","enums":[null]}],"required":true},
            "payment_settings": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Subscription.PaymentSettings"},{"dataType":"enum","enums":[null]}],"required":true},
            "pending_invoice_item_interval": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Subscription.PendingInvoiceItemInterval"},{"dataType":"enum","enums":[null]}],"required":true},
            "pending_setup_intent": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.SetupIntent"},{"dataType":"enum","enums":[null]}],"required":true},
            "pending_update": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Subscription.PendingUpdate"},{"dataType":"enum","enums":[null]}],"required":true},
            "schedule": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.SubscriptionSchedule"},{"dataType":"enum","enums":[null]}],"required":true},
            "start_date": {"dataType":"double","required":true},
            "status": {"ref":"stripe.Stripe.Subscription.Status","required":true},
            "test_clock": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.TestHelpers.TestClock"},{"dataType":"enum","enums":[null]}],"required":true},
            "transfer_data": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Subscription.TransferData"},{"dataType":"enum","enums":[null]}],"required":true},
            "trial_end": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "trial_settings": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Subscription.TrialSettings"},{"dataType":"enum","enums":[null]}],"required":true},
            "trial_start": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.TestHelpers.TestClock.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["advancing"]},{"dataType":"enum","enums":["internal_failure"]},{"dataType":"enum","enums":["ready"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.TestHelpers.TestClock.StatusDetails.Advancing": {
        "dataType": "refObject",
        "properties": {
            "target_frozen_time": {"dataType":"double","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.TestHelpers.TestClock.StatusDetails": {
        "dataType": "refObject",
        "properties": {
            "advancing": {"ref":"stripe.Stripe.TestHelpers.TestClock.StatusDetails.Advancing"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.TestHelpers.TestClock": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["test_helpers.test_clock"],"required":true},
            "created": {"dataType":"double","required":true},
            "deleted": {"dataType":"void"},
            "deletes_after": {"dataType":"double","required":true},
            "frozen_time": {"dataType":"double","required":true},
            "livemode": {"dataType":"boolean","required":true},
            "name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "status": {"ref":"stripe.Stripe.TestHelpers.TestClock.Status","required":true},
            "status_details": {"ref":"stripe.Stripe.TestHelpers.TestClock.StatusDetails","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.InvoiceItem": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["invoiceitem"],"required":true},
            "amount": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "customer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Customer"},{"ref":"stripe.Stripe.DeletedCustomer"}],"required":true},
            "date": {"dataType":"double","required":true},
            "deleted": {"dataType":"void"},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "discountable": {"dataType":"boolean","required":true},
            "discounts": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Discount"}]}},{"dataType":"enum","enums":[null]}],"required":true},
            "invoice": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Invoice"},{"dataType":"enum","enums":[null]}],"required":true},
            "livemode": {"dataType":"boolean","required":true},
            "metadata": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Metadata"},{"dataType":"enum","enums":[null]}],"required":true},
            "period": {"ref":"stripe.Stripe.InvoiceItem.Period","required":true},
            "plan": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Plan"},{"dataType":"enum","enums":[null]}],"required":true},
            "price": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Price"},{"dataType":"enum","enums":[null]}],"required":true},
            "proration": {"dataType":"boolean","required":true},
            "quantity": {"dataType":"double","required":true},
            "subscription": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Subscription"},{"dataType":"enum","enums":[null]}],"required":true},
            "subscription_item": {"dataType":"string"},
            "tax_rates": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.TaxRate"}},{"dataType":"enum","enums":[null]}],"required":true},
            "test_clock": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.TestHelpers.TestClock"},{"dataType":"enum","enums":[null]}],"required":true},
            "unit_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "unit_amount_decimal": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.InvoiceLineItem.Period": {
        "dataType": "refObject",
        "properties": {
            "end": {"dataType":"double","required":true},
            "start": {"dataType":"double","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.InvoiceLineItem.ProrationDetails.CreditedItems": {
        "dataType": "refObject",
        "properties": {
            "invoice": {"dataType":"string","required":true},
            "invoice_line_items": {"dataType":"array","array":{"dataType":"string"},"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.InvoiceLineItem.ProrationDetails": {
        "dataType": "refObject",
        "properties": {
            "credited_items": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.InvoiceLineItem.ProrationDetails.CreditedItems"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionItem.BillingThresholds": {
        "dataType": "refObject",
        "properties": {
            "usage_gte": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionItem": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["subscription_item"],"required":true},
            "billing_thresholds": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SubscriptionItem.BillingThresholds"},{"dataType":"enum","enums":[null]}],"required":true},
            "created": {"dataType":"double","required":true},
            "deleted": {"dataType":"void"},
            "discounts": {"dataType":"array","array":{"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Discount"}]},"required":true},
            "metadata": {"ref":"stripe.Stripe.Metadata","required":true},
            "plan": {"ref":"stripe.Stripe.Plan","required":true},
            "price": {"ref":"stripe.Stripe.Price","required":true},
            "quantity": {"dataType":"double"},
            "subscription": {"dataType":"string","required":true},
            "tax_rates": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.TaxRate"}},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.InvoiceLineItem.TaxAmount.TaxabilityReason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["customer_exempt"]},{"dataType":"enum","enums":["not_collecting"]},{"dataType":"enum","enums":["not_subject_to_tax"]},{"dataType":"enum","enums":["not_supported"]},{"dataType":"enum","enums":["portion_product_exempt"]},{"dataType":"enum","enums":["portion_reduced_rated"]},{"dataType":"enum","enums":["portion_standard_rated"]},{"dataType":"enum","enums":["product_exempt"]},{"dataType":"enum","enums":["product_exempt_holiday"]},{"dataType":"enum","enums":["proportionally_rated"]},{"dataType":"enum","enums":["reduced_rated"]},{"dataType":"enum","enums":["reverse_charge"]},{"dataType":"enum","enums":["standard_rated"]},{"dataType":"enum","enums":["taxable_basis_reduced"]},{"dataType":"enum","enums":["zero_rated"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.InvoiceLineItem.TaxAmount": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double","required":true},
            "inclusive": {"dataType":"boolean","required":true},
            "tax_rate": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.TaxRate"}],"required":true},
            "taxability_reason": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.InvoiceLineItem.TaxAmount.TaxabilityReason"},{"dataType":"enum","enums":[null]}],"required":true},
            "taxable_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.InvoiceLineItem.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["invoiceitem"]},{"dataType":"enum","enums":["subscription"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.InvoiceLineItem": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["line_item"],"required":true},
            "amount": {"dataType":"double","required":true},
            "amount_excluding_tax": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "currency": {"dataType":"string","required":true},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "discount_amounts": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.InvoiceLineItem.DiscountAmount"}},{"dataType":"enum","enums":[null]}],"required":true},
            "discountable": {"dataType":"boolean","required":true},
            "discounts": {"dataType":"array","array":{"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Discount"}]},"required":true},
            "invoice": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "invoice_item": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.InvoiceItem"}]},
            "livemode": {"dataType":"boolean","required":true},
            "metadata": {"ref":"stripe.Stripe.Metadata","required":true},
            "period": {"ref":"stripe.Stripe.InvoiceLineItem.Period","required":true},
            "plan": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Plan"},{"dataType":"enum","enums":[null]}],"required":true},
            "price": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Price"},{"dataType":"enum","enums":[null]}],"required":true},
            "proration": {"dataType":"boolean","required":true},
            "proration_details": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.InvoiceLineItem.ProrationDetails"},{"dataType":"enum","enums":[null]}],"required":true},
            "quantity": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "subscription": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Subscription"},{"dataType":"enum","enums":[null]}],"required":true},
            "subscription_item": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.SubscriptionItem"}]},
            "tax_amounts": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.InvoiceLineItem.TaxAmount"},"required":true},
            "tax_rates": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.TaxRate"},"required":true},
            "type": {"ref":"stripe.Stripe.InvoiceLineItem.Type","required":true},
            "unit_amount_excluding_tax": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ApiList_stripe.Stripe.InvoiceLineItem_": {
        "dataType": "refObject",
        "properties": {
            "object": {"dataType":"enum","enums":["list"],"required":true},
            "data": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.InvoiceLineItem"},"required":true},
            "has_more": {"dataType":"boolean","required":true},
            "url": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.AcssDebit.MandateOptions.TransactionType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["business"]},{"dataType":"enum","enums":["personal"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.AcssDebit.MandateOptions": {
        "dataType": "refObject",
        "properties": {
            "transaction_type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.AcssDebit.MandateOptions.TransactionType"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.AcssDebit.VerificationMethod": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["automatic"]},{"dataType":"enum","enums":["instant"]},{"dataType":"enum","enums":["microdeposits"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.AcssDebit": {
        "dataType": "refObject",
        "properties": {
            "mandate_options": {"ref":"stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.AcssDebit.MandateOptions"},
            "verification_method": {"ref":"stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.AcssDebit.VerificationMethod"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.Bancontact.PreferredLanguage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["de"]},{"dataType":"enum","enums":["en"]},{"dataType":"enum","enums":["fr"]},{"dataType":"enum","enums":["nl"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.Bancontact": {
        "dataType": "refObject",
        "properties": {
            "preferred_language": {"ref":"stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.Bancontact.PreferredLanguage","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.Card.Installments": {
        "dataType": "refObject",
        "properties": {
            "enabled": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.Card.RequestThreeDSecure": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["any"]},{"dataType":"enum","enums":["automatic"]},{"dataType":"enum","enums":["challenge"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.Card": {
        "dataType": "refObject",
        "properties": {
            "installments": {"ref":"stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.Card.Installments"},
            "request_three_d_secure": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.Card.RequestThreeDSecure"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.CustomerBalance.BankTransfer.EuBankTransfer.Country": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["BE"]},{"dataType":"enum","enums":["DE"]},{"dataType":"enum","enums":["ES"]},{"dataType":"enum","enums":["FR"]},{"dataType":"enum","enums":["IE"]},{"dataType":"enum","enums":["NL"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.CustomerBalance.BankTransfer.EuBankTransfer": {
        "dataType": "refObject",
        "properties": {
            "country": {"ref":"stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.CustomerBalance.BankTransfer.EuBankTransfer.Country","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.CustomerBalance.BankTransfer": {
        "dataType": "refObject",
        "properties": {
            "eu_bank_transfer": {"ref":"stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.CustomerBalance.BankTransfer.EuBankTransfer"},
            "type": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.CustomerBalance": {
        "dataType": "refObject",
        "properties": {
            "bank_transfer": {"ref":"stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.CustomerBalance.BankTransfer"},
            "funding_type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["bank_transfer"]},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.Konbini": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.SepaDebit": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.UsBankAccount.FinancialConnections.Filters.AccountSubcategory": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["checking"]},{"dataType":"enum","enums":["savings"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.UsBankAccount.FinancialConnections.Filters": {
        "dataType": "refObject",
        "properties": {
            "account_subcategories": {"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.UsBankAccount.FinancialConnections.Filters.AccountSubcategory"}},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.UsBankAccount.FinancialConnections.Permission": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["balances"]},{"dataType":"enum","enums":["ownership"]},{"dataType":"enum","enums":["payment_method"]},{"dataType":"enum","enums":["transactions"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.UsBankAccount.FinancialConnections.Prefetch": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["balances"]},{"dataType":"enum","enums":["ownership"]},{"dataType":"enum","enums":["transactions"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.UsBankAccount.FinancialConnections": {
        "dataType": "refObject",
        "properties": {
            "filters": {"ref":"stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.UsBankAccount.FinancialConnections.Filters"},
            "permissions": {"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.UsBankAccount.FinancialConnections.Permission"}},
            "prefetch": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.UsBankAccount.FinancialConnections.Prefetch"}},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.UsBankAccount.VerificationMethod": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["automatic"]},{"dataType":"enum","enums":["instant"]},{"dataType":"enum","enums":["microdeposits"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.UsBankAccount": {
        "dataType": "refObject",
        "properties": {
            "financial_connections": {"ref":"stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.UsBankAccount.FinancialConnections"},
            "verification_method": {"ref":"stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.UsBankAccount.VerificationMethod"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions": {
        "dataType": "refObject",
        "properties": {
            "acss_debit": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.AcssDebit"},{"dataType":"enum","enums":[null]}],"required":true},
            "bancontact": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.Bancontact"},{"dataType":"enum","enums":[null]}],"required":true},
            "card": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.Card"},{"dataType":"enum","enums":[null]}],"required":true},
            "customer_balance": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.CustomerBalance"},{"dataType":"enum","enums":[null]}],"required":true},
            "konbini": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.Konbini"},{"dataType":"enum","enums":[null]}],"required":true},
            "sepa_debit": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.SepaDebit"},{"dataType":"enum","enums":[null]}],"required":true},
            "us_bank_account": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions.UsBankAccount"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.PaymentSettings.PaymentMethodType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["ach_credit_transfer"]},{"dataType":"enum","enums":["ach_debit"]},{"dataType":"enum","enums":["acss_debit"]},{"dataType":"enum","enums":["amazon_pay"]},{"dataType":"enum","enums":["au_becs_debit"]},{"dataType":"enum","enums":["bacs_debit"]},{"dataType":"enum","enums":["bancontact"]},{"dataType":"enum","enums":["boleto"]},{"dataType":"enum","enums":["card"]},{"dataType":"enum","enums":["cashapp"]},{"dataType":"enum","enums":["customer_balance"]},{"dataType":"enum","enums":["eps"]},{"dataType":"enum","enums":["fpx"]},{"dataType":"enum","enums":["giropay"]},{"dataType":"enum","enums":["grabpay"]},{"dataType":"enum","enums":["ideal"]},{"dataType":"enum","enums":["konbini"]},{"dataType":"enum","enums":["link"]},{"dataType":"enum","enums":["multibanco"]},{"dataType":"enum","enums":["p24"]},{"dataType":"enum","enums":["paynow"]},{"dataType":"enum","enums":["paypal"]},{"dataType":"enum","enums":["promptpay"]},{"dataType":"enum","enums":["revolut_pay"]},{"dataType":"enum","enums":["sepa_credit_transfer"]},{"dataType":"enum","enums":["sepa_debit"]},{"dataType":"enum","enums":["sofort"]},{"dataType":"enum","enums":["swish"]},{"dataType":"enum","enums":["us_bank_account"]},{"dataType":"enum","enums":["wechat_pay"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.PaymentSettings": {
        "dataType": "refObject",
        "properties": {
            "default_mandate": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "payment_method_options": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.PaymentSettings.PaymentMethodOptions"},{"dataType":"enum","enums":[null]}],"required":true},
            "payment_method_types": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.Invoice.PaymentSettings.PaymentMethodType"}},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.AutomaticTax.Liability.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["account"]},{"dataType":"enum","enums":["self"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.AutomaticTax.Liability": {
        "dataType": "refObject",
        "properties": {
            "account": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"}]},
            "type": {"ref":"stripe.Stripe.Quote.AutomaticTax.Liability.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.AutomaticTax.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["complete"]},{"dataType":"enum","enums":["failed"]},{"dataType":"enum","enums":["requires_location_inputs"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.AutomaticTax": {
        "dataType": "refObject",
        "properties": {
            "enabled": {"dataType":"boolean","required":true},
            "liability": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Quote.AutomaticTax.Liability"},{"dataType":"enum","enums":[null]}],"required":true},
            "status": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Quote.AutomaticTax.Status"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.CollectionMethod": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["charge_automatically"]},{"dataType":"enum","enums":["send_invoice"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.Computed.Recurring.Interval": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["day"]},{"dataType":"enum","enums":["month"]},{"dataType":"enum","enums":["week"]},{"dataType":"enum","enums":["year"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.Computed.Recurring.TotalDetails.Breakdown.Discount": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double","required":true},
            "discount": {"ref":"stripe.Stripe.Discount","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.Computed.Recurring.TotalDetails.Breakdown.Tax.TaxabilityReason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["customer_exempt"]},{"dataType":"enum","enums":["not_collecting"]},{"dataType":"enum","enums":["not_subject_to_tax"]},{"dataType":"enum","enums":["not_supported"]},{"dataType":"enum","enums":["portion_product_exempt"]},{"dataType":"enum","enums":["portion_reduced_rated"]},{"dataType":"enum","enums":["portion_standard_rated"]},{"dataType":"enum","enums":["product_exempt"]},{"dataType":"enum","enums":["product_exempt_holiday"]},{"dataType":"enum","enums":["proportionally_rated"]},{"dataType":"enum","enums":["reduced_rated"]},{"dataType":"enum","enums":["reverse_charge"]},{"dataType":"enum","enums":["standard_rated"]},{"dataType":"enum","enums":["taxable_basis_reduced"]},{"dataType":"enum","enums":["zero_rated"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.Computed.Recurring.TotalDetails.Breakdown.Tax": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double","required":true},
            "rate": {"ref":"stripe.Stripe.TaxRate","required":true},
            "taxability_reason": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Quote.Computed.Recurring.TotalDetails.Breakdown.Tax.TaxabilityReason"},{"dataType":"enum","enums":[null]}],"required":true},
            "taxable_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.Computed.Recurring.TotalDetails.Breakdown": {
        "dataType": "refObject",
        "properties": {
            "discounts": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Quote.Computed.Recurring.TotalDetails.Breakdown.Discount"},"required":true},
            "taxes": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Quote.Computed.Recurring.TotalDetails.Breakdown.Tax"},"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.Computed.Recurring.TotalDetails": {
        "dataType": "refObject",
        "properties": {
            "amount_discount": {"dataType":"double","required":true},
            "amount_shipping": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "amount_tax": {"dataType":"double","required":true},
            "breakdown": {"ref":"stripe.Stripe.Quote.Computed.Recurring.TotalDetails.Breakdown"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.Computed.Recurring": {
        "dataType": "refObject",
        "properties": {
            "amount_subtotal": {"dataType":"double","required":true},
            "amount_total": {"dataType":"double","required":true},
            "interval": {"ref":"stripe.Stripe.Quote.Computed.Recurring.Interval","required":true},
            "interval_count": {"dataType":"double","required":true},
            "total_details": {"ref":"stripe.Stripe.Quote.Computed.Recurring.TotalDetails","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.LineItem.Discount": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double","required":true},
            "discount": {"ref":"stripe.Stripe.Discount","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.LineItem.Tax.TaxabilityReason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["customer_exempt"]},{"dataType":"enum","enums":["not_collecting"]},{"dataType":"enum","enums":["not_subject_to_tax"]},{"dataType":"enum","enums":["not_supported"]},{"dataType":"enum","enums":["portion_product_exempt"]},{"dataType":"enum","enums":["portion_reduced_rated"]},{"dataType":"enum","enums":["portion_standard_rated"]},{"dataType":"enum","enums":["product_exempt"]},{"dataType":"enum","enums":["product_exempt_holiday"]},{"dataType":"enum","enums":["proportionally_rated"]},{"dataType":"enum","enums":["reduced_rated"]},{"dataType":"enum","enums":["reverse_charge"]},{"dataType":"enum","enums":["standard_rated"]},{"dataType":"enum","enums":["taxable_basis_reduced"]},{"dataType":"enum","enums":["zero_rated"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.LineItem.Tax": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double","required":true},
            "rate": {"ref":"stripe.Stripe.TaxRate","required":true},
            "taxability_reason": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.LineItem.Tax.TaxabilityReason"},{"dataType":"enum","enums":[null]}],"required":true},
            "taxable_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.LineItem": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["item"],"required":true},
            "amount_discount": {"dataType":"double","required":true},
            "amount_subtotal": {"dataType":"double","required":true},
            "amount_tax": {"dataType":"double","required":true},
            "amount_total": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "description": {"dataType":"string"},
            "discounts": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.LineItem.Discount"}},
            "price": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Price"},{"dataType":"enum","enums":[null]}],"required":true},
            "quantity": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "taxes": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.LineItem.Tax"}},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ApiList_stripe.Stripe.LineItem_": {
        "dataType": "refObject",
        "properties": {
            "object": {"dataType":"enum","enums":["list"],"required":true},
            "data": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.LineItem"},"required":true},
            "has_more": {"dataType":"boolean","required":true},
            "url": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.Computed.Upfront.TotalDetails.Breakdown.Discount": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double","required":true},
            "discount": {"ref":"stripe.Stripe.Discount","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.Computed.Upfront.TotalDetails.Breakdown.Tax.TaxabilityReason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["customer_exempt"]},{"dataType":"enum","enums":["not_collecting"]},{"dataType":"enum","enums":["not_subject_to_tax"]},{"dataType":"enum","enums":["not_supported"]},{"dataType":"enum","enums":["portion_product_exempt"]},{"dataType":"enum","enums":["portion_reduced_rated"]},{"dataType":"enum","enums":["portion_standard_rated"]},{"dataType":"enum","enums":["product_exempt"]},{"dataType":"enum","enums":["product_exempt_holiday"]},{"dataType":"enum","enums":["proportionally_rated"]},{"dataType":"enum","enums":["reduced_rated"]},{"dataType":"enum","enums":["reverse_charge"]},{"dataType":"enum","enums":["standard_rated"]},{"dataType":"enum","enums":["taxable_basis_reduced"]},{"dataType":"enum","enums":["zero_rated"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.Computed.Upfront.TotalDetails.Breakdown.Tax": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double","required":true},
            "rate": {"ref":"stripe.Stripe.TaxRate","required":true},
            "taxability_reason": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Quote.Computed.Upfront.TotalDetails.Breakdown.Tax.TaxabilityReason"},{"dataType":"enum","enums":[null]}],"required":true},
            "taxable_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.Computed.Upfront.TotalDetails.Breakdown": {
        "dataType": "refObject",
        "properties": {
            "discounts": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Quote.Computed.Upfront.TotalDetails.Breakdown.Discount"},"required":true},
            "taxes": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Quote.Computed.Upfront.TotalDetails.Breakdown.Tax"},"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.Computed.Upfront.TotalDetails": {
        "dataType": "refObject",
        "properties": {
            "amount_discount": {"dataType":"double","required":true},
            "amount_shipping": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "amount_tax": {"dataType":"double","required":true},
            "breakdown": {"ref":"stripe.Stripe.Quote.Computed.Upfront.TotalDetails.Breakdown"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.Computed.Upfront": {
        "dataType": "refObject",
        "properties": {
            "amount_subtotal": {"dataType":"double","required":true},
            "amount_total": {"dataType":"double","required":true},
            "line_items": {"ref":"stripe.Stripe.ApiList_stripe.Stripe.LineItem_"},
            "total_details": {"ref":"stripe.Stripe.Quote.Computed.Upfront.TotalDetails","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.Computed": {
        "dataType": "refObject",
        "properties": {
            "recurring": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Quote.Computed.Recurring"},{"dataType":"enum","enums":[null]}],"required":true},
            "upfront": {"ref":"stripe.Stripe.Quote.Computed.Upfront","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["quote"],"required":true},
            "amount_subtotal": {"dataType":"double","required":true},
            "amount_total": {"dataType":"double","required":true},
            "application": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Application"},{"ref":"stripe.Stripe.DeletedApplication"},{"dataType":"enum","enums":[null]}],"required":true},
            "application_fee_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "application_fee_percent": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "automatic_tax": {"ref":"stripe.Stripe.Quote.AutomaticTax","required":true},
            "collection_method": {"ref":"stripe.Stripe.Quote.CollectionMethod","required":true},
            "computed": {"ref":"stripe.Stripe.Quote.Computed","required":true},
            "created": {"dataType":"double","required":true},
            "currency": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "customer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Customer"},{"ref":"stripe.Stripe.DeletedCustomer"},{"dataType":"enum","enums":[null]}],"required":true},
            "default_tax_rates": {"dataType":"array","array":{"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.TaxRate"}]}},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "discounts": {"dataType":"array","array":{"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Discount"}]},"required":true},
            "expires_at": {"dataType":"double","required":true},
            "footer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "from_quote": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Quote.FromQuote"},{"dataType":"enum","enums":[null]}],"required":true},
            "header": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "invoice": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Invoice"},{"ref":"stripe.Stripe.DeletedInvoice"},{"dataType":"enum","enums":[null]}],"required":true},
            "invoice_settings": {"ref":"stripe.Stripe.Quote.InvoiceSettings","required":true},
            "line_items": {"ref":"stripe.Stripe.ApiList_stripe.Stripe.LineItem_"},
            "livemode": {"dataType":"boolean","required":true},
            "metadata": {"ref":"stripe.Stripe.Metadata","required":true},
            "number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "on_behalf_of": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"},{"dataType":"enum","enums":[null]}],"required":true},
            "status": {"ref":"stripe.Stripe.Quote.Status","required":true},
            "status_transitions": {"ref":"stripe.Stripe.Quote.StatusTransitions","required":true},
            "subscription": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Subscription"},{"dataType":"enum","enums":[null]}],"required":true},
            "subscription_data": {"ref":"stripe.Stripe.Quote.SubscriptionData","required":true},
            "subscription_schedule": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.SubscriptionSchedule"},{"dataType":"enum","enums":[null]}],"required":true},
            "test_clock": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.TestHelpers.TestClock"},{"dataType":"enum","enums":[null]}],"required":true},
            "total_details": {"ref":"stripe.Stripe.Quote.TotalDetails","required":true},
            "transfer_data": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Quote.TransferData"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.FromQuote": {
        "dataType": "refObject",
        "properties": {
            "is_revision": {"dataType":"boolean","required":true},
            "quote": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Quote"}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.DeletedInvoice": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["invoice"],"required":true},
            "deleted": {"dataType":"enum","enums":[true],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.InvoiceSettings.Issuer.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["account"]},{"dataType":"enum","enums":["self"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.InvoiceSettings.Issuer": {
        "dataType": "refObject",
        "properties": {
            "account": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"}]},
            "type": {"ref":"stripe.Stripe.Quote.InvoiceSettings.Issuer.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.InvoiceSettings": {
        "dataType": "refObject",
        "properties": {
            "days_until_due": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "issuer": {"ref":"stripe.Stripe.Quote.InvoiceSettings.Issuer","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["accepted"]},{"dataType":"enum","enums":["canceled"]},{"dataType":"enum","enums":["draft"]},{"dataType":"enum","enums":["open"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.StatusTransitions": {
        "dataType": "refObject",
        "properties": {
            "accepted_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "canceled_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "finalized_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.SubscriptionData": {
        "dataType": "refObject",
        "properties": {
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "effective_date": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "metadata": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Metadata"},{"dataType":"enum","enums":[null]}],"required":true},
            "trial_period_days": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.CurrentPhase": {
        "dataType": "refObject",
        "properties": {
            "end_date": {"dataType":"double","required":true},
            "start_date": {"dataType":"double","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.DefaultSettings.AutomaticTax.Liability.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["account"]},{"dataType":"enum","enums":["self"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.DefaultSettings.AutomaticTax.Liability": {
        "dataType": "refObject",
        "properties": {
            "account": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"}]},
            "type": {"ref":"stripe.Stripe.SubscriptionSchedule.DefaultSettings.AutomaticTax.Liability.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.DefaultSettings.AutomaticTax": {
        "dataType": "refObject",
        "properties": {
            "enabled": {"dataType":"boolean","required":true},
            "liability": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SubscriptionSchedule.DefaultSettings.AutomaticTax.Liability"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.DefaultSettings.BillingCycleAnchor": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["automatic"]},{"dataType":"enum","enums":["phase_start"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.DefaultSettings.BillingThresholds": {
        "dataType": "refObject",
        "properties": {
            "amount_gte": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "reset_billing_cycle_anchor": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.DefaultSettings.CollectionMethod": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["charge_automatically"]},{"dataType":"enum","enums":["send_invoice"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.DefaultSettings.InvoiceSettings.Issuer.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["account"]},{"dataType":"enum","enums":["self"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.DefaultSettings.InvoiceSettings.Issuer": {
        "dataType": "refObject",
        "properties": {
            "account": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"}]},
            "type": {"ref":"stripe.Stripe.SubscriptionSchedule.DefaultSettings.InvoiceSettings.Issuer.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.DefaultSettings.InvoiceSettings": {
        "dataType": "refObject",
        "properties": {
            "account_tax_ids": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.TaxId"},{"ref":"stripe.Stripe.DeletedTaxId"}]}},{"dataType":"enum","enums":[null]}],"required":true},
            "days_until_due": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "issuer": {"ref":"stripe.Stripe.SubscriptionSchedule.DefaultSettings.InvoiceSettings.Issuer","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.DefaultSettings.TransferData": {
        "dataType": "refObject",
        "properties": {
            "amount_percent": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "destination": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.DefaultSettings": {
        "dataType": "refObject",
        "properties": {
            "application_fee_percent": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "automatic_tax": {"ref":"stripe.Stripe.SubscriptionSchedule.DefaultSettings.AutomaticTax"},
            "billing_cycle_anchor": {"ref":"stripe.Stripe.SubscriptionSchedule.DefaultSettings.BillingCycleAnchor","required":true},
            "billing_thresholds": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SubscriptionSchedule.DefaultSettings.BillingThresholds"},{"dataType":"enum","enums":[null]}],"required":true},
            "collection_method": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SubscriptionSchedule.DefaultSettings.CollectionMethod"},{"dataType":"enum","enums":[null]}],"required":true},
            "default_payment_method": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PaymentMethod"},{"dataType":"enum","enums":[null]}],"required":true},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "invoice_settings": {"ref":"stripe.Stripe.SubscriptionSchedule.DefaultSettings.InvoiceSettings","required":true},
            "on_behalf_of": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"},{"dataType":"enum","enums":[null]}],"required":true},
            "transfer_data": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SubscriptionSchedule.DefaultSettings.TransferData"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.EndBehavior": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["cancel"]},{"dataType":"enum","enums":["none"]},{"dataType":"enum","enums":["release"]},{"dataType":"enum","enums":["renew"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.Phase.AddInvoiceItem.Discount": {
        "dataType": "refObject",
        "properties": {
            "coupon": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Coupon"},{"dataType":"enum","enums":[null]}],"required":true},
            "discount": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Discount"},{"dataType":"enum","enums":[null]}],"required":true},
            "promotion_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PromotionCode"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.DeletedPrice": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["price"],"required":true},
            "deleted": {"dataType":"enum","enums":[true],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.Phase.AddInvoiceItem": {
        "dataType": "refObject",
        "properties": {
            "discounts": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.SubscriptionSchedule.Phase.AddInvoiceItem.Discount"},"required":true},
            "price": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Price"},{"ref":"stripe.Stripe.DeletedPrice"}],"required":true},
            "quantity": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "tax_rates": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.TaxRate"}},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.Phase.AutomaticTax.Liability.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["account"]},{"dataType":"enum","enums":["self"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.Phase.AutomaticTax.Liability": {
        "dataType": "refObject",
        "properties": {
            "account": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"}]},
            "type": {"ref":"stripe.Stripe.SubscriptionSchedule.Phase.AutomaticTax.Liability.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.Phase.AutomaticTax": {
        "dataType": "refObject",
        "properties": {
            "enabled": {"dataType":"boolean","required":true},
            "liability": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SubscriptionSchedule.Phase.AutomaticTax.Liability"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.Phase.BillingCycleAnchor": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["automatic"]},{"dataType":"enum","enums":["phase_start"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.Phase.BillingThresholds": {
        "dataType": "refObject",
        "properties": {
            "amount_gte": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "reset_billing_cycle_anchor": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.Phase.CollectionMethod": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["charge_automatically"]},{"dataType":"enum","enums":["send_invoice"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.DeletedCoupon": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["coupon"],"required":true},
            "deleted": {"dataType":"enum","enums":[true],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.Phase.Discount": {
        "dataType": "refObject",
        "properties": {
            "coupon": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Coupon"},{"dataType":"enum","enums":[null]}],"required":true},
            "discount": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Discount"},{"dataType":"enum","enums":[null]}],"required":true},
            "promotion_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PromotionCode"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.Phase.InvoiceSettings.Issuer.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["account"]},{"dataType":"enum","enums":["self"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.Phase.InvoiceSettings.Issuer": {
        "dataType": "refObject",
        "properties": {
            "account": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"}]},
            "type": {"ref":"stripe.Stripe.SubscriptionSchedule.Phase.InvoiceSettings.Issuer.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.Phase.InvoiceSettings": {
        "dataType": "refObject",
        "properties": {
            "account_tax_ids": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.TaxId"},{"ref":"stripe.Stripe.DeletedTaxId"}]}},{"dataType":"enum","enums":[null]}],"required":true},
            "days_until_due": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "issuer": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SubscriptionSchedule.Phase.InvoiceSettings.Issuer"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.Phase.Item.BillingThresholds": {
        "dataType": "refObject",
        "properties": {
            "usage_gte": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.Phase.Item.Discount": {
        "dataType": "refObject",
        "properties": {
            "coupon": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Coupon"},{"dataType":"enum","enums":[null]}],"required":true},
            "discount": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Discount"},{"dataType":"enum","enums":[null]}],"required":true},
            "promotion_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PromotionCode"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.DeletedPlan": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["plan"],"required":true},
            "deleted": {"dataType":"enum","enums":[true],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.Phase.Item": {
        "dataType": "refObject",
        "properties": {
            "billing_thresholds": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SubscriptionSchedule.Phase.Item.BillingThresholds"},{"dataType":"enum","enums":[null]}],"required":true},
            "discounts": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.SubscriptionSchedule.Phase.Item.Discount"},"required":true},
            "metadata": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Metadata"},{"dataType":"enum","enums":[null]}],"required":true},
            "plan": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Plan"},{"ref":"stripe.Stripe.DeletedPlan"}],"required":true},
            "price": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Price"},{"ref":"stripe.Stripe.DeletedPrice"}],"required":true},
            "quantity": {"dataType":"double"},
            "tax_rates": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.TaxRate"}},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.Phase.ProrationBehavior": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["always_invoice"]},{"dataType":"enum","enums":["create_prorations"]},{"dataType":"enum","enums":["none"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.Phase.TransferData": {
        "dataType": "refObject",
        "properties": {
            "amount_percent": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "destination": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.Phase": {
        "dataType": "refObject",
        "properties": {
            "add_invoice_items": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.SubscriptionSchedule.Phase.AddInvoiceItem"},"required":true},
            "application_fee_percent": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "automatic_tax": {"ref":"stripe.Stripe.SubscriptionSchedule.Phase.AutomaticTax"},
            "billing_cycle_anchor": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SubscriptionSchedule.Phase.BillingCycleAnchor"},{"dataType":"enum","enums":[null]}],"required":true},
            "billing_thresholds": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SubscriptionSchedule.Phase.BillingThresholds"},{"dataType":"enum","enums":[null]}],"required":true},
            "collection_method": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SubscriptionSchedule.Phase.CollectionMethod"},{"dataType":"enum","enums":[null]}],"required":true},
            "coupon": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Coupon"},{"ref":"stripe.Stripe.DeletedCoupon"},{"dataType":"enum","enums":[null]}],"required":true},
            "currency": {"dataType":"string","required":true},
            "default_payment_method": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PaymentMethod"},{"dataType":"enum","enums":[null]}],"required":true},
            "default_tax_rates": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.TaxRate"}},{"dataType":"enum","enums":[null]}]},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "discounts": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.SubscriptionSchedule.Phase.Discount"},"required":true},
            "end_date": {"dataType":"double","required":true},
            "invoice_settings": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SubscriptionSchedule.Phase.InvoiceSettings"},{"dataType":"enum","enums":[null]}],"required":true},
            "items": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.SubscriptionSchedule.Phase.Item"},"required":true},
            "metadata": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Metadata"},{"dataType":"enum","enums":[null]}],"required":true},
            "on_behalf_of": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"},{"dataType":"enum","enums":[null]}],"required":true},
            "proration_behavior": {"ref":"stripe.Stripe.SubscriptionSchedule.Phase.ProrationBehavior","required":true},
            "start_date": {"dataType":"double","required":true},
            "transfer_data": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SubscriptionSchedule.Phase.TransferData"},{"dataType":"enum","enums":[null]}],"required":true},
            "trial_end": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["canceled"]},{"dataType":"enum","enums":["completed"]},{"dataType":"enum","enums":["not_started"]},{"dataType":"enum","enums":["released"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SubscriptionSchedule": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["subscription_schedule"],"required":true},
            "application": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Application"},{"ref":"stripe.Stripe.DeletedApplication"},{"dataType":"enum","enums":[null]}],"required":true},
            "canceled_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "completed_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "created": {"dataType":"double","required":true},
            "current_phase": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.SubscriptionSchedule.CurrentPhase"},{"dataType":"enum","enums":[null]}],"required":true},
            "customer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Customer"},{"ref":"stripe.Stripe.DeletedCustomer"}],"required":true},
            "default_settings": {"ref":"stripe.Stripe.SubscriptionSchedule.DefaultSettings","required":true},
            "end_behavior": {"ref":"stripe.Stripe.SubscriptionSchedule.EndBehavior","required":true},
            "livemode": {"dataType":"boolean","required":true},
            "metadata": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Metadata"},{"dataType":"enum","enums":[null]}],"required":true},
            "phases": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.SubscriptionSchedule.Phase"},"required":true},
            "released_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "released_subscription": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "status": {"ref":"stripe.Stripe.SubscriptionSchedule.Status","required":true},
            "subscription": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Subscription"},{"dataType":"enum","enums":[null]}],"required":true},
            "test_clock": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.TestHelpers.TestClock"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.TotalDetails.Breakdown.Discount": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double","required":true},
            "discount": {"ref":"stripe.Stripe.Discount","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.TotalDetails.Breakdown.Tax.TaxabilityReason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["customer_exempt"]},{"dataType":"enum","enums":["not_collecting"]},{"dataType":"enum","enums":["not_subject_to_tax"]},{"dataType":"enum","enums":["not_supported"]},{"dataType":"enum","enums":["portion_product_exempt"]},{"dataType":"enum","enums":["portion_reduced_rated"]},{"dataType":"enum","enums":["portion_standard_rated"]},{"dataType":"enum","enums":["product_exempt"]},{"dataType":"enum","enums":["product_exempt_holiday"]},{"dataType":"enum","enums":["proportionally_rated"]},{"dataType":"enum","enums":["reduced_rated"]},{"dataType":"enum","enums":["reverse_charge"]},{"dataType":"enum","enums":["standard_rated"]},{"dataType":"enum","enums":["taxable_basis_reduced"]},{"dataType":"enum","enums":["zero_rated"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.TotalDetails.Breakdown.Tax": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double","required":true},
            "rate": {"ref":"stripe.Stripe.TaxRate","required":true},
            "taxability_reason": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Quote.TotalDetails.Breakdown.Tax.TaxabilityReason"},{"dataType":"enum","enums":[null]}],"required":true},
            "taxable_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.TotalDetails.Breakdown": {
        "dataType": "refObject",
        "properties": {
            "discounts": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Quote.TotalDetails.Breakdown.Discount"},"required":true},
            "taxes": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Quote.TotalDetails.Breakdown.Tax"},"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.TotalDetails": {
        "dataType": "refObject",
        "properties": {
            "amount_discount": {"dataType":"double","required":true},
            "amount_shipping": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "amount_tax": {"dataType":"double","required":true},
            "breakdown": {"ref":"stripe.Stripe.Quote.TotalDetails.Breakdown"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Quote.TransferData": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "amount_percent": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "destination": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.Rendering.Pdf.PageSize": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["a4"]},{"dataType":"enum","enums":["auto"]},{"dataType":"enum","enums":["letter"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.Rendering.Pdf": {
        "dataType": "refObject",
        "properties": {
            "page_size": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.Rendering.Pdf.PageSize"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.Rendering": {
        "dataType": "refObject",
        "properties": {
            "amount_tax_display": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "pdf": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.Rendering.Pdf"},{"dataType":"enum","enums":[null]}],"required":true},
            "template": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "template_version": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ShippingRate.DeliveryEstimate.Maximum.Unit": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["business_day"]},{"dataType":"enum","enums":["day"]},{"dataType":"enum","enums":["hour"]},{"dataType":"enum","enums":["month"]},{"dataType":"enum","enums":["week"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ShippingRate.DeliveryEstimate.Maximum": {
        "dataType": "refObject",
        "properties": {
            "unit": {"ref":"stripe.Stripe.ShippingRate.DeliveryEstimate.Maximum.Unit","required":true},
            "value": {"dataType":"double","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ShippingRate.DeliveryEstimate.Minimum.Unit": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["business_day"]},{"dataType":"enum","enums":["day"]},{"dataType":"enum","enums":["hour"]},{"dataType":"enum","enums":["month"]},{"dataType":"enum","enums":["week"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ShippingRate.DeliveryEstimate.Minimum": {
        "dataType": "refObject",
        "properties": {
            "unit": {"ref":"stripe.Stripe.ShippingRate.DeliveryEstimate.Minimum.Unit","required":true},
            "value": {"dataType":"double","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ShippingRate.DeliveryEstimate": {
        "dataType": "refObject",
        "properties": {
            "maximum": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.ShippingRate.DeliveryEstimate.Maximum"},{"dataType":"enum","enums":[null]}],"required":true},
            "minimum": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.ShippingRate.DeliveryEstimate.Minimum"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ShippingRate.FixedAmount.CurrencyOptions.TaxBehavior": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["exclusive"]},{"dataType":"enum","enums":["inclusive"]},{"dataType":"enum","enums":["unspecified"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ShippingRate.FixedAmount.CurrencyOptions": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double","required":true},
            "tax_behavior": {"ref":"stripe.Stripe.ShippingRate.FixedAmount.CurrencyOptions.TaxBehavior","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ShippingRate.FixedAmount": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double","required":true},
            "currency": {"dataType":"string","required":true},
            "currency_options": {"dataType":"nestedObjectLiteral","nestedProperties":{},"additionalProperties":{"ref":"stripe.Stripe.ShippingRate.FixedAmount.CurrencyOptions"}},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ShippingRate.TaxBehavior": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["exclusive"]},{"dataType":"enum","enums":["inclusive"]},{"dataType":"enum","enums":["unspecified"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ShippingRate": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["shipping_rate"],"required":true},
            "active": {"dataType":"boolean","required":true},
            "created": {"dataType":"double","required":true},
            "delivery_estimate": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.ShippingRate.DeliveryEstimate"},{"dataType":"enum","enums":[null]}],"required":true},
            "display_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "fixed_amount": {"ref":"stripe.Stripe.ShippingRate.FixedAmount"},
            "livemode": {"dataType":"boolean","required":true},
            "metadata": {"ref":"stripe.Stripe.Metadata","required":true},
            "tax_behavior": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.ShippingRate.TaxBehavior"},{"dataType":"enum","enums":[null]}],"required":true},
            "tax_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.TaxCode"},{"dataType":"enum","enums":[null]}],"required":true},
            "type": {"dataType":"enum","enums":["fixed_amount"],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.ShippingCost.Tax.TaxabilityReason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["customer_exempt"]},{"dataType":"enum","enums":["not_collecting"]},{"dataType":"enum","enums":["not_subject_to_tax"]},{"dataType":"enum","enums":["not_supported"]},{"dataType":"enum","enums":["portion_product_exempt"]},{"dataType":"enum","enums":["portion_reduced_rated"]},{"dataType":"enum","enums":["portion_standard_rated"]},{"dataType":"enum","enums":["product_exempt"]},{"dataType":"enum","enums":["product_exempt_holiday"]},{"dataType":"enum","enums":["proportionally_rated"]},{"dataType":"enum","enums":["reduced_rated"]},{"dataType":"enum","enums":["reverse_charge"]},{"dataType":"enum","enums":["standard_rated"]},{"dataType":"enum","enums":["taxable_basis_reduced"]},{"dataType":"enum","enums":["zero_rated"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.ShippingCost.Tax": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double","required":true},
            "rate": {"ref":"stripe.Stripe.TaxRate","required":true},
            "taxability_reason": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.ShippingCost.Tax.TaxabilityReason"},{"dataType":"enum","enums":[null]}],"required":true},
            "taxable_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.ShippingCost": {
        "dataType": "refObject",
        "properties": {
            "amount_subtotal": {"dataType":"double","required":true},
            "amount_tax": {"dataType":"double","required":true},
            "amount_total": {"dataType":"double","required":true},
            "shipping_rate": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.ShippingRate"},{"dataType":"enum","enums":[null]}],"required":true},
            "taxes": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Invoice.ShippingCost.Tax"}},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.ShippingDetails": {
        "dataType": "refObject",
        "properties": {
            "address": {"ref":"stripe.Stripe.Address"},
            "carrier": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "name": {"dataType":"string"},
            "phone": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "tracking_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["draft"]},{"dataType":"enum","enums":["open"]},{"dataType":"enum","enums":["paid"]},{"dataType":"enum","enums":["uncollectible"]},{"dataType":"enum","enums":["void"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.StatusTransitions": {
        "dataType": "refObject",
        "properties": {
            "finalized_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "marked_uncollectible_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "paid_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "voided_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.SubscriptionDetails": {
        "dataType": "refObject",
        "properties": {
            "metadata": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Metadata"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.ThresholdReason.ItemReason": {
        "dataType": "refObject",
        "properties": {
            "line_item_ids": {"dataType":"array","array":{"dataType":"string"},"required":true},
            "usage_gte": {"dataType":"double","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.ThresholdReason": {
        "dataType": "refObject",
        "properties": {
            "amount_gte": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "item_reasons": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Invoice.ThresholdReason.ItemReason"},"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.TotalDiscountAmount": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double","required":true},
            "discount": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Discount"},{"ref":"stripe.Stripe.DeletedDiscount"}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.TotalTaxAmount.TaxabilityReason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["customer_exempt"]},{"dataType":"enum","enums":["not_collecting"]},{"dataType":"enum","enums":["not_subject_to_tax"]},{"dataType":"enum","enums":["not_supported"]},{"dataType":"enum","enums":["portion_product_exempt"]},{"dataType":"enum","enums":["portion_reduced_rated"]},{"dataType":"enum","enums":["portion_standard_rated"]},{"dataType":"enum","enums":["product_exempt"]},{"dataType":"enum","enums":["product_exempt_holiday"]},{"dataType":"enum","enums":["proportionally_rated"]},{"dataType":"enum","enums":["reduced_rated"]},{"dataType":"enum","enums":["reverse_charge"]},{"dataType":"enum","enums":["standard_rated"]},{"dataType":"enum","enums":["taxable_basis_reduced"]},{"dataType":"enum","enums":["zero_rated"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.TotalTaxAmount": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double","required":true},
            "inclusive": {"dataType":"boolean","required":true},
            "tax_rate": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.TaxRate"}],"required":true},
            "taxability_reason": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Invoice.TotalTaxAmount.TaxabilityReason"},{"dataType":"enum","enums":[null]}],"required":true},
            "taxable_amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Invoice.TransferData": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "destination": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.LastPaymentError.Code": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["account_closed"]},{"dataType":"enum","enums":["account_country_invalid_address"]},{"dataType":"enum","enums":["account_error_country_change_requires_additional_steps"]},{"dataType":"enum","enums":["account_information_mismatch"]},{"dataType":"enum","enums":["account_invalid"]},{"dataType":"enum","enums":["account_number_invalid"]},{"dataType":"enum","enums":["acss_debit_session_incomplete"]},{"dataType":"enum","enums":["alipay_upgrade_required"]},{"dataType":"enum","enums":["amount_too_large"]},{"dataType":"enum","enums":["amount_too_small"]},{"dataType":"enum","enums":["api_key_expired"]},{"dataType":"enum","enums":["application_fees_not_allowed"]},{"dataType":"enum","enums":["authentication_required"]},{"dataType":"enum","enums":["balance_insufficient"]},{"dataType":"enum","enums":["balance_invalid_parameter"]},{"dataType":"enum","enums":["bank_account_bad_routing_numbers"]},{"dataType":"enum","enums":["bank_account_declined"]},{"dataType":"enum","enums":["bank_account_exists"]},{"dataType":"enum","enums":["bank_account_restricted"]},{"dataType":"enum","enums":["bank_account_unusable"]},{"dataType":"enum","enums":["bank_account_unverified"]},{"dataType":"enum","enums":["bank_account_verification_failed"]},{"dataType":"enum","enums":["billing_invalid_mandate"]},{"dataType":"enum","enums":["bitcoin_upgrade_required"]},{"dataType":"enum","enums":["capture_charge_authorization_expired"]},{"dataType":"enum","enums":["capture_unauthorized_payment"]},{"dataType":"enum","enums":["card_decline_rate_limit_exceeded"]},{"dataType":"enum","enums":["card_declined"]},{"dataType":"enum","enums":["cardholder_phone_number_required"]},{"dataType":"enum","enums":["charge_already_captured"]},{"dataType":"enum","enums":["charge_already_refunded"]},{"dataType":"enum","enums":["charge_disputed"]},{"dataType":"enum","enums":["charge_exceeds_source_limit"]},{"dataType":"enum","enums":["charge_exceeds_transaction_limit"]},{"dataType":"enum","enums":["charge_expired_for_capture"]},{"dataType":"enum","enums":["charge_invalid_parameter"]},{"dataType":"enum","enums":["charge_not_refundable"]},{"dataType":"enum","enums":["clearing_code_unsupported"]},{"dataType":"enum","enums":["country_code_invalid"]},{"dataType":"enum","enums":["country_unsupported"]},{"dataType":"enum","enums":["coupon_expired"]},{"dataType":"enum","enums":["customer_max_payment_methods"]},{"dataType":"enum","enums":["customer_max_subscriptions"]},{"dataType":"enum","enums":["customer_tax_location_invalid"]},{"dataType":"enum","enums":["debit_not_authorized"]},{"dataType":"enum","enums":["email_invalid"]},{"dataType":"enum","enums":["expired_card"]},{"dataType":"enum","enums":["financial_connections_account_inactive"]},{"dataType":"enum","enums":["financial_connections_no_successful_transaction_refresh"]},{"dataType":"enum","enums":["forwarding_api_inactive"]},{"dataType":"enum","enums":["forwarding_api_invalid_parameter"]},{"dataType":"enum","enums":["forwarding_api_upstream_connection_error"]},{"dataType":"enum","enums":["forwarding_api_upstream_connection_timeout"]},{"dataType":"enum","enums":["idempotency_key_in_use"]},{"dataType":"enum","enums":["incorrect_address"]},{"dataType":"enum","enums":["incorrect_cvc"]},{"dataType":"enum","enums":["incorrect_number"]},{"dataType":"enum","enums":["incorrect_zip"]},{"dataType":"enum","enums":["instant_payouts_config_disabled"]},{"dataType":"enum","enums":["instant_payouts_currency_disabled"]},{"dataType":"enum","enums":["instant_payouts_limit_exceeded"]},{"dataType":"enum","enums":["instant_payouts_unsupported"]},{"dataType":"enum","enums":["insufficient_funds"]},{"dataType":"enum","enums":["intent_invalid_state"]},{"dataType":"enum","enums":["intent_verification_method_missing"]},{"dataType":"enum","enums":["invalid_card_type"]},{"dataType":"enum","enums":["invalid_characters"]},{"dataType":"enum","enums":["invalid_charge_amount"]},{"dataType":"enum","enums":["invalid_cvc"]},{"dataType":"enum","enums":["invalid_expiry_month"]},{"dataType":"enum","enums":["invalid_expiry_year"]},{"dataType":"enum","enums":["invalid_mandate_reference_prefix_format"]},{"dataType":"enum","enums":["invalid_number"]},{"dataType":"enum","enums":["invalid_source_usage"]},{"dataType":"enum","enums":["invalid_tax_location"]},{"dataType":"enum","enums":["invoice_no_customer_line_items"]},{"dataType":"enum","enums":["invoice_no_payment_method_types"]},{"dataType":"enum","enums":["invoice_no_subscription_line_items"]},{"dataType":"enum","enums":["invoice_not_editable"]},{"dataType":"enum","enums":["invoice_on_behalf_of_not_editable"]},{"dataType":"enum","enums":["invoice_payment_intent_requires_action"]},{"dataType":"enum","enums":["invoice_upcoming_none"]},{"dataType":"enum","enums":["livemode_mismatch"]},{"dataType":"enum","enums":["lock_timeout"]},{"dataType":"enum","enums":["missing"]},{"dataType":"enum","enums":["no_account"]},{"dataType":"enum","enums":["not_allowed_on_standard_account"]},{"dataType":"enum","enums":["out_of_inventory"]},{"dataType":"enum","enums":["ownership_declaration_not_allowed"]},{"dataType":"enum","enums":["parameter_invalid_empty"]},{"dataType":"enum","enums":["parameter_invalid_integer"]},{"dataType":"enum","enums":["parameter_invalid_string_blank"]},{"dataType":"enum","enums":["parameter_invalid_string_empty"]},{"dataType":"enum","enums":["parameter_missing"]},{"dataType":"enum","enums":["parameter_unknown"]},{"dataType":"enum","enums":["parameters_exclusive"]},{"dataType":"enum","enums":["payment_intent_action_required"]},{"dataType":"enum","enums":["payment_intent_authentication_failure"]},{"dataType":"enum","enums":["payment_intent_incompatible_payment_method"]},{"dataType":"enum","enums":["payment_intent_invalid_parameter"]},{"dataType":"enum","enums":["payment_intent_konbini_rejected_confirmation_number"]},{"dataType":"enum","enums":["payment_intent_mandate_invalid"]},{"dataType":"enum","enums":["payment_intent_payment_attempt_expired"]},{"dataType":"enum","enums":["payment_intent_payment_attempt_failed"]},{"dataType":"enum","enums":["payment_intent_unexpected_state"]},{"dataType":"enum","enums":["payment_method_bank_account_already_verified"]},{"dataType":"enum","enums":["payment_method_bank_account_blocked"]},{"dataType":"enum","enums":["payment_method_billing_details_address_missing"]},{"dataType":"enum","enums":["payment_method_configuration_failures"]},{"dataType":"enum","enums":["payment_method_currency_mismatch"]},{"dataType":"enum","enums":["payment_method_customer_decline"]},{"dataType":"enum","enums":["payment_method_invalid_parameter"]},{"dataType":"enum","enums":["payment_method_invalid_parameter_testmode"]},{"dataType":"enum","enums":["payment_method_microdeposit_failed"]},{"dataType":"enum","enums":["payment_method_microdeposit_verification_amounts_invalid"]},{"dataType":"enum","enums":["payment_method_microdeposit_verification_amounts_mismatch"]},{"dataType":"enum","enums":["payment_method_microdeposit_verification_attempts_exceeded"]},{"dataType":"enum","enums":["payment_method_microdeposit_verification_descriptor_code_mismatch"]},{"dataType":"enum","enums":["payment_method_microdeposit_verification_timeout"]},{"dataType":"enum","enums":["payment_method_not_available"]},{"dataType":"enum","enums":["payment_method_provider_decline"]},{"dataType":"enum","enums":["payment_method_provider_timeout"]},{"dataType":"enum","enums":["payment_method_unactivated"]},{"dataType":"enum","enums":["payment_method_unexpected_state"]},{"dataType":"enum","enums":["payment_method_unsupported_type"]},{"dataType":"enum","enums":["payout_reconciliation_not_ready"]},{"dataType":"enum","enums":["payouts_limit_exceeded"]},{"dataType":"enum","enums":["payouts_not_allowed"]},{"dataType":"enum","enums":["platform_account_required"]},{"dataType":"enum","enums":["platform_api_key_expired"]},{"dataType":"enum","enums":["postal_code_invalid"]},{"dataType":"enum","enums":["processing_error"]},{"dataType":"enum","enums":["product_inactive"]},{"dataType":"enum","enums":["progressive_onboarding_limit_exceeded"]},{"dataType":"enum","enums":["rate_limit"]},{"dataType":"enum","enums":["refer_to_customer"]},{"dataType":"enum","enums":["refund_disputed_payment"]},{"dataType":"enum","enums":["resource_already_exists"]},{"dataType":"enum","enums":["resource_missing"]},{"dataType":"enum","enums":["return_intent_already_processed"]},{"dataType":"enum","enums":["routing_number_invalid"]},{"dataType":"enum","enums":["secret_key_required"]},{"dataType":"enum","enums":["sepa_unsupported_account"]},{"dataType":"enum","enums":["setup_attempt_failed"]},{"dataType":"enum","enums":["setup_intent_authentication_failure"]},{"dataType":"enum","enums":["setup_intent_invalid_parameter"]},{"dataType":"enum","enums":["setup_intent_mandate_invalid"]},{"dataType":"enum","enums":["setup_intent_setup_attempt_expired"]},{"dataType":"enum","enums":["setup_intent_unexpected_state"]},{"dataType":"enum","enums":["shipping_address_invalid"]},{"dataType":"enum","enums":["shipping_calculation_failed"]},{"dataType":"enum","enums":["sku_inactive"]},{"dataType":"enum","enums":["state_unsupported"]},{"dataType":"enum","enums":["status_transition_invalid"]},{"dataType":"enum","enums":["stripe_tax_inactive"]},{"dataType":"enum","enums":["tax_id_invalid"]},{"dataType":"enum","enums":["taxes_calculation_failed"]},{"dataType":"enum","enums":["terminal_location_country_unsupported"]},{"dataType":"enum","enums":["terminal_reader_busy"]},{"dataType":"enum","enums":["terminal_reader_hardware_fault"]},{"dataType":"enum","enums":["terminal_reader_invalid_location_for_activation"]},{"dataType":"enum","enums":["terminal_reader_invalid_location_for_payment"]},{"dataType":"enum","enums":["terminal_reader_offline"]},{"dataType":"enum","enums":["terminal_reader_timeout"]},{"dataType":"enum","enums":["testmode_charges_only"]},{"dataType":"enum","enums":["tls_version_unsupported"]},{"dataType":"enum","enums":["token_already_used"]},{"dataType":"enum","enums":["token_card_network_invalid"]},{"dataType":"enum","enums":["token_in_use"]},{"dataType":"enum","enums":["transfer_source_balance_parameters_mismatch"]},{"dataType":"enum","enums":["transfers_not_allowed"]},{"dataType":"enum","enums":["url_invalid"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.LastPaymentError.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["api_error"]},{"dataType":"enum","enums":["card_error"]},{"dataType":"enum","enums":["idempotency_error"]},{"dataType":"enum","enums":["invalid_request_error"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.LastPaymentError": {
        "dataType": "refObject",
        "properties": {
            "charge": {"dataType":"string"},
            "code": {"ref":"stripe.Stripe.PaymentIntent.LastPaymentError.Code"},
            "decline_code": {"dataType":"string"},
            "doc_url": {"dataType":"string"},
            "message": {"dataType":"string"},
            "param": {"dataType":"string"},
            "payment_intent": {"ref":"stripe.Stripe.PaymentIntent"},
            "payment_method": {"ref":"stripe.Stripe.PaymentMethod"},
            "payment_method_type": {"dataType":"string"},
            "request_log_url": {"dataType":"string"},
            "setup_intent": {"ref":"stripe.Stripe.SetupIntent"},
            "source": {"ref":"stripe.Stripe.CustomerSource"},
            "type": {"ref":"stripe.Stripe.PaymentIntent.LastPaymentError.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.AlipayHandleRedirect": {
        "dataType": "refObject",
        "properties": {
            "native_data": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "native_url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "return_url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.BoletoDisplayDetails": {
        "dataType": "refObject",
        "properties": {
            "expires_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "hosted_voucher_url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "pdf": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.CardAwaitNotification": {
        "dataType": "refObject",
        "properties": {
            "charge_attempt_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "customer_approval_required": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.CashappHandleRedirectOrDisplayQrCode.QrCode": {
        "dataType": "refObject",
        "properties": {
            "expires_at": {"dataType":"double","required":true},
            "image_url_png": {"dataType":"string","required":true},
            "image_url_svg": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.CashappHandleRedirectOrDisplayQrCode": {
        "dataType": "refObject",
        "properties": {
            "hosted_instructions_url": {"dataType":"string","required":true},
            "mobile_auth_url": {"dataType":"string","required":true},
            "qr_code": {"ref":"stripe.Stripe.PaymentIntent.NextAction.CashappHandleRedirectOrDisplayQrCode.QrCode","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.DisplayBankTransferInstructions.FinancialAddress.Aba": {
        "dataType": "refObject",
        "properties": {
            "account_number": {"dataType":"string","required":true},
            "bank_name": {"dataType":"string","required":true},
            "routing_number": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.DisplayBankTransferInstructions.FinancialAddress.Iban": {
        "dataType": "refObject",
        "properties": {
            "account_holder_name": {"dataType":"string","required":true},
            "bic": {"dataType":"string","required":true},
            "country": {"dataType":"string","required":true},
            "iban": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.DisplayBankTransferInstructions.FinancialAddress.SortCode": {
        "dataType": "refObject",
        "properties": {
            "account_holder_name": {"dataType":"string","required":true},
            "account_number": {"dataType":"string","required":true},
            "sort_code": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.DisplayBankTransferInstructions.FinancialAddress.Spei": {
        "dataType": "refObject",
        "properties": {
            "bank_code": {"dataType":"string","required":true},
            "bank_name": {"dataType":"string","required":true},
            "clabe": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.DisplayBankTransferInstructions.FinancialAddress.SupportedNetwork": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["ach"]},{"dataType":"enum","enums":["bacs"]},{"dataType":"enum","enums":["domestic_wire_us"]},{"dataType":"enum","enums":["fps"]},{"dataType":"enum","enums":["sepa"]},{"dataType":"enum","enums":["spei"]},{"dataType":"enum","enums":["swift"]},{"dataType":"enum","enums":["zengin"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.DisplayBankTransferInstructions.FinancialAddress.Swift": {
        "dataType": "refObject",
        "properties": {
            "account_number": {"dataType":"string","required":true},
            "bank_name": {"dataType":"string","required":true},
            "swift_code": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.DisplayBankTransferInstructions.FinancialAddress.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["aba"]},{"dataType":"enum","enums":["iban"]},{"dataType":"enum","enums":["sort_code"]},{"dataType":"enum","enums":["spei"]},{"dataType":"enum","enums":["swift"]},{"dataType":"enum","enums":["zengin"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.DisplayBankTransferInstructions.FinancialAddress.Zengin": {
        "dataType": "refObject",
        "properties": {
            "account_holder_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "account_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "account_type": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "bank_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "bank_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "branch_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "branch_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.DisplayBankTransferInstructions.FinancialAddress": {
        "dataType": "refObject",
        "properties": {
            "aba": {"ref":"stripe.Stripe.PaymentIntent.NextAction.DisplayBankTransferInstructions.FinancialAddress.Aba"},
            "iban": {"ref":"stripe.Stripe.PaymentIntent.NextAction.DisplayBankTransferInstructions.FinancialAddress.Iban"},
            "sort_code": {"ref":"stripe.Stripe.PaymentIntent.NextAction.DisplayBankTransferInstructions.FinancialAddress.SortCode"},
            "spei": {"ref":"stripe.Stripe.PaymentIntent.NextAction.DisplayBankTransferInstructions.FinancialAddress.Spei"},
            "supported_networks": {"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.PaymentIntent.NextAction.DisplayBankTransferInstructions.FinancialAddress.SupportedNetwork"}},
            "swift": {"ref":"stripe.Stripe.PaymentIntent.NextAction.DisplayBankTransferInstructions.FinancialAddress.Swift"},
            "type": {"ref":"stripe.Stripe.PaymentIntent.NextAction.DisplayBankTransferInstructions.FinancialAddress.Type","required":true},
            "zengin": {"ref":"stripe.Stripe.PaymentIntent.NextAction.DisplayBankTransferInstructions.FinancialAddress.Zengin"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.DisplayBankTransferInstructions.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["eu_bank_transfer"]},{"dataType":"enum","enums":["gb_bank_transfer"]},{"dataType":"enum","enums":["jp_bank_transfer"]},{"dataType":"enum","enums":["mx_bank_transfer"]},{"dataType":"enum","enums":["us_bank_transfer"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.DisplayBankTransferInstructions": {
        "dataType": "refObject",
        "properties": {
            "amount_remaining": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "currency": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "financial_addresses": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.PaymentIntent.NextAction.DisplayBankTransferInstructions.FinancialAddress"}},
            "hosted_instructions_url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "type": {"ref":"stripe.Stripe.PaymentIntent.NextAction.DisplayBankTransferInstructions.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.KonbiniDisplayDetails.Stores.Familymart": {
        "dataType": "refObject",
        "properties": {
            "confirmation_number": {"dataType":"string"},
            "payment_code": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.KonbiniDisplayDetails.Stores.Lawson": {
        "dataType": "refObject",
        "properties": {
            "confirmation_number": {"dataType":"string"},
            "payment_code": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.KonbiniDisplayDetails.Stores.Ministop": {
        "dataType": "refObject",
        "properties": {
            "confirmation_number": {"dataType":"string"},
            "payment_code": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.KonbiniDisplayDetails.Stores.Seicomart": {
        "dataType": "refObject",
        "properties": {
            "confirmation_number": {"dataType":"string"},
            "payment_code": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.KonbiniDisplayDetails.Stores": {
        "dataType": "refObject",
        "properties": {
            "familymart": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.NextAction.KonbiniDisplayDetails.Stores.Familymart"},{"dataType":"enum","enums":[null]}],"required":true},
            "lawson": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.NextAction.KonbiniDisplayDetails.Stores.Lawson"},{"dataType":"enum","enums":[null]}],"required":true},
            "ministop": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.NextAction.KonbiniDisplayDetails.Stores.Ministop"},{"dataType":"enum","enums":[null]}],"required":true},
            "seicomart": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.NextAction.KonbiniDisplayDetails.Stores.Seicomart"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.KonbiniDisplayDetails": {
        "dataType": "refObject",
        "properties": {
            "expires_at": {"dataType":"double","required":true},
            "hosted_voucher_url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "stores": {"ref":"stripe.Stripe.PaymentIntent.NextAction.KonbiniDisplayDetails.Stores","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.MultibancoDisplayDetails": {
        "dataType": "refObject",
        "properties": {
            "entity": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "expires_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "hosted_voucher_url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.OxxoDisplayDetails": {
        "dataType": "refObject",
        "properties": {
            "expires_after": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "hosted_voucher_url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.PaynowDisplayQrCode": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"string","required":true},
            "hosted_instructions_url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "image_url_png": {"dataType":"string","required":true},
            "image_url_svg": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.PixDisplayQrCode": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"string"},
            "expires_at": {"dataType":"double"},
            "hosted_instructions_url": {"dataType":"string"},
            "image_url_png": {"dataType":"string"},
            "image_url_svg": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.PromptpayDisplayQrCode": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"string","required":true},
            "hosted_instructions_url": {"dataType":"string","required":true},
            "image_url_png": {"dataType":"string","required":true},
            "image_url_svg": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.RedirectToUrl": {
        "dataType": "refObject",
        "properties": {
            "return_url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "url": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.SwishHandleRedirectOrDisplayQrCode.QrCode": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"string","required":true},
            "image_url_png": {"dataType":"string","required":true},
            "image_url_svg": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.SwishHandleRedirectOrDisplayQrCode": {
        "dataType": "refObject",
        "properties": {
            "hosted_instructions_url": {"dataType":"string","required":true},
            "mobile_auth_url": {"dataType":"string","required":true},
            "qr_code": {"ref":"stripe.Stripe.PaymentIntent.NextAction.SwishHandleRedirectOrDisplayQrCode.QrCode","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.UseStripeSdk": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.VerifyWithMicrodeposits.MicrodepositType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["amounts"]},{"dataType":"enum","enums":["descriptor_code"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.VerifyWithMicrodeposits": {
        "dataType": "refObject",
        "properties": {
            "arrival_date": {"dataType":"double","required":true},
            "hosted_verification_url": {"dataType":"string","required":true},
            "microdeposit_type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.NextAction.VerifyWithMicrodeposits.MicrodepositType"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.WechatPayDisplayQrCode": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"string","required":true},
            "hosted_instructions_url": {"dataType":"string","required":true},
            "image_data_url": {"dataType":"string","required":true},
            "image_url_png": {"dataType":"string","required":true},
            "image_url_svg": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.WechatPayRedirectToAndroidApp": {
        "dataType": "refObject",
        "properties": {
            "app_id": {"dataType":"string","required":true},
            "nonce_str": {"dataType":"string","required":true},
            "package": {"dataType":"string","required":true},
            "partner_id": {"dataType":"string","required":true},
            "prepay_id": {"dataType":"string","required":true},
            "sign": {"dataType":"string","required":true},
            "timestamp": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction.WechatPayRedirectToIosApp": {
        "dataType": "refObject",
        "properties": {
            "native_url": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.NextAction": {
        "dataType": "refObject",
        "properties": {
            "alipay_handle_redirect": {"ref":"stripe.Stripe.PaymentIntent.NextAction.AlipayHandleRedirect"},
            "boleto_display_details": {"ref":"stripe.Stripe.PaymentIntent.NextAction.BoletoDisplayDetails"},
            "card_await_notification": {"ref":"stripe.Stripe.PaymentIntent.NextAction.CardAwaitNotification"},
            "cashapp_handle_redirect_or_display_qr_code": {"ref":"stripe.Stripe.PaymentIntent.NextAction.CashappHandleRedirectOrDisplayQrCode"},
            "display_bank_transfer_instructions": {"ref":"stripe.Stripe.PaymentIntent.NextAction.DisplayBankTransferInstructions"},
            "konbini_display_details": {"ref":"stripe.Stripe.PaymentIntent.NextAction.KonbiniDisplayDetails"},
            "multibanco_display_details": {"ref":"stripe.Stripe.PaymentIntent.NextAction.MultibancoDisplayDetails"},
            "oxxo_display_details": {"ref":"stripe.Stripe.PaymentIntent.NextAction.OxxoDisplayDetails"},
            "paynow_display_qr_code": {"ref":"stripe.Stripe.PaymentIntent.NextAction.PaynowDisplayQrCode"},
            "pix_display_qr_code": {"ref":"stripe.Stripe.PaymentIntent.NextAction.PixDisplayQrCode"},
            "promptpay_display_qr_code": {"ref":"stripe.Stripe.PaymentIntent.NextAction.PromptpayDisplayQrCode"},
            "redirect_to_url": {"ref":"stripe.Stripe.PaymentIntent.NextAction.RedirectToUrl"},
            "swish_handle_redirect_or_display_qr_code": {"ref":"stripe.Stripe.PaymentIntent.NextAction.SwishHandleRedirectOrDisplayQrCode"},
            "type": {"dataType":"string","required":true},
            "use_stripe_sdk": {"ref":"stripe.Stripe.PaymentIntent.NextAction.UseStripeSdk"},
            "verify_with_microdeposits": {"ref":"stripe.Stripe.PaymentIntent.NextAction.VerifyWithMicrodeposits"},
            "wechat_pay_display_qr_code": {"ref":"stripe.Stripe.PaymentIntent.NextAction.WechatPayDisplayQrCode"},
            "wechat_pay_redirect_to_android_app": {"ref":"stripe.Stripe.PaymentIntent.NextAction.WechatPayRedirectToAndroidApp"},
            "wechat_pay_redirect_to_ios_app": {"ref":"stripe.Stripe.PaymentIntent.NextAction.WechatPayRedirectToIosApp"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodConfigurationDetails": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "parent": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.AcssDebit.MandateOptions.PaymentSchedule": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["combined"]},{"dataType":"enum","enums":["interval"]},{"dataType":"enum","enums":["sporadic"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.AcssDebit.MandateOptions.TransactionType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["business"]},{"dataType":"enum","enums":["personal"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.AcssDebit.MandateOptions": {
        "dataType": "refObject",
        "properties": {
            "custom_mandate_url": {"dataType":"string"},
            "interval_description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "payment_schedule": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.AcssDebit.MandateOptions.PaymentSchedule"},{"dataType":"enum","enums":[null]}],"required":true},
            "transaction_type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.AcssDebit.MandateOptions.TransactionType"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.AcssDebit.SetupFutureUsage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["none"]},{"dataType":"enum","enums":["off_session"]},{"dataType":"enum","enums":["on_session"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.AcssDebit.VerificationMethod": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["automatic"]},{"dataType":"enum","enums":["instant"]},{"dataType":"enum","enums":["microdeposits"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.AcssDebit": {
        "dataType": "refObject",
        "properties": {
            "mandate_options": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.AcssDebit.MandateOptions"},
            "setup_future_usage": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.AcssDebit.SetupFutureUsage"},
            "verification_method": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.AcssDebit.VerificationMethod"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Affirm": {
        "dataType": "refObject",
        "properties": {
            "capture_method": {"dataType":"enum","enums":["manual"]},
            "preferred_locale": {"dataType":"string"},
            "setup_future_usage": {"dataType":"enum","enums":["none"]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.AfterpayClearpay": {
        "dataType": "refObject",
        "properties": {
            "capture_method": {"dataType":"enum","enums":["manual"]},
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "setup_future_usage": {"dataType":"enum","enums":["none"]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Alipay.SetupFutureUsage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["none"]},{"dataType":"enum","enums":["off_session"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Alipay": {
        "dataType": "refObject",
        "properties": {
            "setup_future_usage": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Alipay.SetupFutureUsage"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.AmazonPay.SetupFutureUsage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["none"]},{"dataType":"enum","enums":["off_session"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.AmazonPay": {
        "dataType": "refObject",
        "properties": {
            "capture_method": {"dataType":"enum","enums":["manual"]},
            "setup_future_usage": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.AmazonPay.SetupFutureUsage"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.AuBecsDebit.SetupFutureUsage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["none"]},{"dataType":"enum","enums":["off_session"]},{"dataType":"enum","enums":["on_session"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.AuBecsDebit": {
        "dataType": "refObject",
        "properties": {
            "setup_future_usage": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.AuBecsDebit.SetupFutureUsage"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.BacsDebit.MandateOptions": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.BacsDebit.SetupFutureUsage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["none"]},{"dataType":"enum","enums":["off_session"]},{"dataType":"enum","enums":["on_session"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.BacsDebit": {
        "dataType": "refObject",
        "properties": {
            "mandate_options": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.BacsDebit.MandateOptions"},
            "setup_future_usage": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.BacsDebit.SetupFutureUsage"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Bancontact.PreferredLanguage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["de"]},{"dataType":"enum","enums":["en"]},{"dataType":"enum","enums":["fr"]},{"dataType":"enum","enums":["nl"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Bancontact.SetupFutureUsage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["none"]},{"dataType":"enum","enums":["off_session"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Bancontact": {
        "dataType": "refObject",
        "properties": {
            "preferred_language": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Bancontact.PreferredLanguage","required":true},
            "setup_future_usage": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Bancontact.SetupFutureUsage"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Blik": {
        "dataType": "refObject",
        "properties": {
            "setup_future_usage": {"dataType":"enum","enums":["none"]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Boleto.SetupFutureUsage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["none"]},{"dataType":"enum","enums":["off_session"]},{"dataType":"enum","enums":["on_session"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Boleto": {
        "dataType": "refObject",
        "properties": {
            "expires_after_days": {"dataType":"double","required":true},
            "setup_future_usage": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Boleto.SetupFutureUsage"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.Installments.AvailablePlan": {
        "dataType": "refObject",
        "properties": {
            "count": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "interval": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["month"]},{"dataType":"enum","enums":[null]}],"required":true},
            "type": {"dataType":"enum","enums":["fixed_count"],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.Installments.Plan": {
        "dataType": "refObject",
        "properties": {
            "count": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "interval": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["month"]},{"dataType":"enum","enums":[null]}],"required":true},
            "type": {"dataType":"enum","enums":["fixed_count"],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.Installments": {
        "dataType": "refObject",
        "properties": {
            "available_plans": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.Installments.AvailablePlan"}},{"dataType":"enum","enums":[null]}],"required":true},
            "enabled": {"dataType":"boolean","required":true},
            "plan": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.Installments.Plan"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.MandateOptions.AmountType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["fixed"]},{"dataType":"enum","enums":["maximum"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.MandateOptions.Interval": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["day"]},{"dataType":"enum","enums":["month"]},{"dataType":"enum","enums":["sporadic"]},{"dataType":"enum","enums":["week"]},{"dataType":"enum","enums":["year"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.MandateOptions": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double","required":true},
            "amount_type": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.MandateOptions.AmountType","required":true},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "end_date": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "interval": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.MandateOptions.Interval","required":true},
            "interval_count": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "reference": {"dataType":"string","required":true},
            "start_date": {"dataType":"double","required":true},
            "supported_types": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"enum","enums":["india"]}},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.Network": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["amex"]},{"dataType":"enum","enums":["cartes_bancaires"]},{"dataType":"enum","enums":["diners"]},{"dataType":"enum","enums":["discover"]},{"dataType":"enum","enums":["eftpos_au"]},{"dataType":"enum","enums":["girocard"]},{"dataType":"enum","enums":["interac"]},{"dataType":"enum","enums":["jcb"]},{"dataType":"enum","enums":["mastercard"]},{"dataType":"enum","enums":["unionpay"]},{"dataType":"enum","enums":["unknown"]},{"dataType":"enum","enums":["visa"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.RequestExtendedAuthorization": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["if_available"]},{"dataType":"enum","enums":["never"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.RequestIncrementalAuthorization": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["if_available"]},{"dataType":"enum","enums":["never"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.RequestMulticapture": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["if_available"]},{"dataType":"enum","enums":["never"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.RequestOvercapture": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["if_available"]},{"dataType":"enum","enums":["never"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.RequestThreeDSecure": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["any"]},{"dataType":"enum","enums":["automatic"]},{"dataType":"enum","enums":["challenge"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.SetupFutureUsage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["none"]},{"dataType":"enum","enums":["off_session"]},{"dataType":"enum","enums":["on_session"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card": {
        "dataType": "refObject",
        "properties": {
            "capture_method": {"dataType":"enum","enums":["manual"]},
            "installments": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.Installments"},{"dataType":"enum","enums":[null]}],"required":true},
            "mandate_options": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.MandateOptions"},{"dataType":"enum","enums":[null]}],"required":true},
            "network": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.Network"},{"dataType":"enum","enums":[null]}],"required":true},
            "request_extended_authorization": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.RequestExtendedAuthorization"},
            "request_incremental_authorization": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.RequestIncrementalAuthorization"},
            "request_multicapture": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.RequestMulticapture"},
            "request_overcapture": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.RequestOvercapture"},
            "request_three_d_secure": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.RequestThreeDSecure"},{"dataType":"enum","enums":[null]}],"required":true},
            "require_cvc_recollection": {"dataType":"boolean"},
            "setup_future_usage": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card.SetupFutureUsage"},
            "statement_descriptor_suffix_kana": {"dataType":"string"},
            "statement_descriptor_suffix_kanji": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.CardPresent.Routing.RequestedPriority": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["domestic"]},{"dataType":"enum","enums":["international"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.CardPresent.Routing": {
        "dataType": "refObject",
        "properties": {
            "requested_priority": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.CardPresent.Routing.RequestedPriority"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.CardPresent": {
        "dataType": "refObject",
        "properties": {
            "request_extended_authorization": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}],"required":true},
            "request_incremental_authorization_support": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}],"required":true},
            "routing": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.CardPresent.Routing"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Cashapp.SetupFutureUsage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["none"]},{"dataType":"enum","enums":["off_session"]},{"dataType":"enum","enums":["on_session"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Cashapp": {
        "dataType": "refObject",
        "properties": {
            "capture_method": {"dataType":"enum","enums":["manual"]},
            "setup_future_usage": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Cashapp.SetupFutureUsage"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.CustomerBalance.BankTransfer.EuBankTransfer.Country": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["BE"]},{"dataType":"enum","enums":["DE"]},{"dataType":"enum","enums":["ES"]},{"dataType":"enum","enums":["FR"]},{"dataType":"enum","enums":["IE"]},{"dataType":"enum","enums":["NL"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.CustomerBalance.BankTransfer.EuBankTransfer": {
        "dataType": "refObject",
        "properties": {
            "country": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.CustomerBalance.BankTransfer.EuBankTransfer.Country","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.CustomerBalance.BankTransfer.RequestedAddressType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["aba"]},{"dataType":"enum","enums":["iban"]},{"dataType":"enum","enums":["sepa"]},{"dataType":"enum","enums":["sort_code"]},{"dataType":"enum","enums":["spei"]},{"dataType":"enum","enums":["swift"]},{"dataType":"enum","enums":["zengin"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.CustomerBalance.BankTransfer.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["eu_bank_transfer"]},{"dataType":"enum","enums":["gb_bank_transfer"]},{"dataType":"enum","enums":["jp_bank_transfer"]},{"dataType":"enum","enums":["mx_bank_transfer"]},{"dataType":"enum","enums":["us_bank_transfer"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.CustomerBalance.BankTransfer": {
        "dataType": "refObject",
        "properties": {
            "eu_bank_transfer": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.CustomerBalance.BankTransfer.EuBankTransfer"},
            "requested_address_types": {"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.CustomerBalance.BankTransfer.RequestedAddressType"}},
            "type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.CustomerBalance.BankTransfer.Type"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.CustomerBalance": {
        "dataType": "refObject",
        "properties": {
            "bank_transfer": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.CustomerBalance.BankTransfer"},
            "funding_type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["bank_transfer"]},{"dataType":"enum","enums":[null]}],"required":true},
            "setup_future_usage": {"dataType":"enum","enums":["none"]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Eps": {
        "dataType": "refObject",
        "properties": {
            "setup_future_usage": {"dataType":"enum","enums":["none"]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Fpx": {
        "dataType": "refObject",
        "properties": {
            "setup_future_usage": {"dataType":"enum","enums":["none"]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Giropay": {
        "dataType": "refObject",
        "properties": {
            "setup_future_usage": {"dataType":"enum","enums":["none"]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Grabpay": {
        "dataType": "refObject",
        "properties": {
            "setup_future_usage": {"dataType":"enum","enums":["none"]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Ideal.SetupFutureUsage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["none"]},{"dataType":"enum","enums":["off_session"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Ideal": {
        "dataType": "refObject",
        "properties": {
            "setup_future_usage": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Ideal.SetupFutureUsage"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.InteracPresent": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Klarna": {
        "dataType": "refObject",
        "properties": {
            "capture_method": {"dataType":"enum","enums":["manual"]},
            "preferred_locale": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "setup_future_usage": {"dataType":"enum","enums":["none"]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Konbini": {
        "dataType": "refObject",
        "properties": {
            "confirmation_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "expires_after_days": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "expires_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "product_description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "setup_future_usage": {"dataType":"enum","enums":["none"]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Link.SetupFutureUsage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["none"]},{"dataType":"enum","enums":["off_session"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Link": {
        "dataType": "refObject",
        "properties": {
            "capture_method": {"dataType":"enum","enums":["manual"]},
            "persistent_token": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "setup_future_usage": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Link.SetupFutureUsage"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Mobilepay": {
        "dataType": "refObject",
        "properties": {
            "capture_method": {"dataType":"enum","enums":["manual"]},
            "setup_future_usage": {"dataType":"enum","enums":["none"]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Multibanco": {
        "dataType": "refObject",
        "properties": {
            "setup_future_usage": {"dataType":"enum","enums":["none"]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Oxxo": {
        "dataType": "refObject",
        "properties": {
            "expires_after_days": {"dataType":"double","required":true},
            "setup_future_usage": {"dataType":"enum","enums":["none"]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.P24": {
        "dataType": "refObject",
        "properties": {
            "setup_future_usage": {"dataType":"enum","enums":["none"]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Paynow": {
        "dataType": "refObject",
        "properties": {
            "setup_future_usage": {"dataType":"enum","enums":["none"]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Paypal.SetupFutureUsage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["none"]},{"dataType":"enum","enums":["off_session"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Paypal": {
        "dataType": "refObject",
        "properties": {
            "capture_method": {"dataType":"enum","enums":["manual"]},
            "preferred_locale": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "setup_future_usage": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Paypal.SetupFutureUsage"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Pix": {
        "dataType": "refObject",
        "properties": {
            "expires_after_seconds": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "expires_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "setup_future_usage": {"dataType":"enum","enums":["none"]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Promptpay": {
        "dataType": "refObject",
        "properties": {
            "setup_future_usage": {"dataType":"enum","enums":["none"]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.RevolutPay.SetupFutureUsage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["none"]},{"dataType":"enum","enums":["off_session"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.RevolutPay": {
        "dataType": "refObject",
        "properties": {
            "capture_method": {"dataType":"enum","enums":["manual"]},
            "setup_future_usage": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.RevolutPay.SetupFutureUsage"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.SepaDebit.MandateOptions": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.SepaDebit.SetupFutureUsage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["none"]},{"dataType":"enum","enums":["off_session"]},{"dataType":"enum","enums":["on_session"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.SepaDebit": {
        "dataType": "refObject",
        "properties": {
            "mandate_options": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.SepaDebit.MandateOptions"},
            "setup_future_usage": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.SepaDebit.SetupFutureUsage"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Sofort.PreferredLanguage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["de"]},{"dataType":"enum","enums":["en"]},{"dataType":"enum","enums":["es"]},{"dataType":"enum","enums":["fr"]},{"dataType":"enum","enums":["it"]},{"dataType":"enum","enums":["nl"]},{"dataType":"enum","enums":["pl"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Sofort.SetupFutureUsage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["none"]},{"dataType":"enum","enums":["off_session"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Sofort": {
        "dataType": "refObject",
        "properties": {
            "preferred_language": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Sofort.PreferredLanguage"},{"dataType":"enum","enums":[null]}],"required":true},
            "setup_future_usage": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Sofort.SetupFutureUsage"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Swish": {
        "dataType": "refObject",
        "properties": {
            "reference": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "setup_future_usage": {"dataType":"enum","enums":["none"]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Twint": {
        "dataType": "refObject",
        "properties": {
            "setup_future_usage": {"dataType":"enum","enums":["none"]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.UsBankAccount.FinancialConnections.Filters.AccountSubcategory": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["checking"]},{"dataType":"enum","enums":["savings"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.UsBankAccount.FinancialConnections.Filters": {
        "dataType": "refObject",
        "properties": {
            "account_subcategories": {"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.UsBankAccount.FinancialConnections.Filters.AccountSubcategory"}},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.UsBankAccount.FinancialConnections.Permission": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["balances"]},{"dataType":"enum","enums":["ownership"]},{"dataType":"enum","enums":["payment_method"]},{"dataType":"enum","enums":["transactions"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.UsBankAccount.FinancialConnections.Prefetch": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["balances"]},{"dataType":"enum","enums":["ownership"]},{"dataType":"enum","enums":["transactions"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.UsBankAccount.FinancialConnections": {
        "dataType": "refObject",
        "properties": {
            "filters": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.UsBankAccount.FinancialConnections.Filters"},
            "permissions": {"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.UsBankAccount.FinancialConnections.Permission"}},
            "prefetch": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.UsBankAccount.FinancialConnections.Prefetch"}},{"dataType":"enum","enums":[null]}],"required":true},
            "return_url": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.UsBankAccount.MandateOptions": {
        "dataType": "refObject",
        "properties": {
            "collection_method": {"dataType":"enum","enums":["paper"]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.UsBankAccount.PreferredSettlementSpeed": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["fastest"]},{"dataType":"enum","enums":["standard"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.UsBankAccount.SetupFutureUsage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["none"]},{"dataType":"enum","enums":["off_session"]},{"dataType":"enum","enums":["on_session"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.UsBankAccount.VerificationMethod": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["automatic"]},{"dataType":"enum","enums":["instant"]},{"dataType":"enum","enums":["microdeposits"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.UsBankAccount": {
        "dataType": "refObject",
        "properties": {
            "financial_connections": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.UsBankAccount.FinancialConnections"},
            "mandate_options": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.UsBankAccount.MandateOptions"},
            "preferred_settlement_speed": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.UsBankAccount.PreferredSettlementSpeed"},
            "setup_future_usage": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.UsBankAccount.SetupFutureUsage"},
            "verification_method": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.UsBankAccount.VerificationMethod"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.WechatPay.Client": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["android"]},{"dataType":"enum","enums":["ios"]},{"dataType":"enum","enums":["web"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.WechatPay": {
        "dataType": "refObject",
        "properties": {
            "app_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "client": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.WechatPay.Client"},{"dataType":"enum","enums":[null]}],"required":true},
            "setup_future_usage": {"dataType":"enum","enums":["none"]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions.Zip": {
        "dataType": "refObject",
        "properties": {
            "setup_future_usage": {"dataType":"enum","enums":["none"]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.PaymentMethodOptions": {
        "dataType": "refObject",
        "properties": {
            "acss_debit": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.AcssDebit"},
            "affirm": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Affirm"},
            "afterpay_clearpay": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.AfterpayClearpay"},
            "alipay": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Alipay"},
            "amazon_pay": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.AmazonPay"},
            "au_becs_debit": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.AuBecsDebit"},
            "bacs_debit": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.BacsDebit"},
            "bancontact": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Bancontact"},
            "blik": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Blik"},
            "boleto": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Boleto"},
            "card": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Card"},
            "card_present": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.CardPresent"},
            "cashapp": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Cashapp"},
            "customer_balance": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.CustomerBalance"},
            "eps": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Eps"},
            "fpx": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Fpx"},
            "giropay": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Giropay"},
            "grabpay": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Grabpay"},
            "ideal": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Ideal"},
            "interac_present": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.InteracPresent"},
            "klarna": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Klarna"},
            "konbini": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Konbini"},
            "link": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Link"},
            "mobilepay": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Mobilepay"},
            "multibanco": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Multibanco"},
            "oxxo": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Oxxo"},
            "p24": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.P24"},
            "paynow": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Paynow"},
            "paypal": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Paypal"},
            "pix": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Pix"},
            "promptpay": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Promptpay"},
            "revolut_pay": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.RevolutPay"},
            "sepa_debit": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.SepaDebit"},
            "sofort": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Sofort"},
            "swish": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Swish"},
            "twint": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Twint"},
            "us_bank_account": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.UsBankAccount"},
            "wechat_pay": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.WechatPay"},
            "zip": {"ref":"stripe.Stripe.PaymentIntent.PaymentMethodOptions.Zip"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.Processing.Card.CustomerNotification": {
        "dataType": "refObject",
        "properties": {
            "approval_requested": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}],"required":true},
            "completes_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.Processing.Card": {
        "dataType": "refObject",
        "properties": {
            "customer_notification": {"ref":"stripe.Stripe.PaymentIntent.Processing.Card.CustomerNotification"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.Processing": {
        "dataType": "refObject",
        "properties": {
            "card": {"ref":"stripe.Stripe.PaymentIntent.Processing.Card"},
            "type": {"dataType":"enum","enums":["card"],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.SetupFutureUsage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["off_session"]},{"dataType":"enum","enums":["on_session"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.Shipping": {
        "dataType": "refObject",
        "properties": {
            "address": {"ref":"stripe.Stripe.Address"},
            "carrier": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "name": {"dataType":"string"},
            "phone": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "tracking_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.DeletedCustomerSource": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.DeletedBankAccount"},{"ref":"stripe.Stripe.DeletedCard"}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["canceled"]},{"dataType":"enum","enums":["processing"]},{"dataType":"enum","enums":["requires_action"]},{"dataType":"enum","enums":["requires_capture"]},{"dataType":"enum","enums":["requires_confirmation"]},{"dataType":"enum","enums":["requires_payment_method"]},{"dataType":"enum","enums":["succeeded"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentIntent.TransferData": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"double"},
            "destination": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.SetupError.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["api_error"]},{"dataType":"enum","enums":["card_error"]},{"dataType":"enum","enums":["idempotency_error"]},{"dataType":"enum","enums":["invalid_request_error"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.SetupAttempt.SetupError": {
        "dataType": "refObject",
        "properties": {
            "charge": {"dataType":"string"},
            "code": {"ref":"stripe.Stripe.SetupAttempt.SetupError.Code"},
            "decline_code": {"dataType":"string"},
            "doc_url": {"dataType":"string"},
            "message": {"dataType":"string"},
            "param": {"dataType":"string"},
            "payment_intent": {"ref":"stripe.Stripe.PaymentIntent"},
            "payment_method": {"ref":"stripe.Stripe.PaymentMethod"},
            "payment_method_type": {"dataType":"string"},
            "request_log_url": {"dataType":"string"},
            "setup_intent": {"ref":"stripe.Stripe.SetupIntent"},
            "source": {"ref":"stripe.Stripe.CustomerSource"},
            "type": {"ref":"stripe.Stripe.SetupAttempt.SetupError.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Card.GeneratedFrom": {
        "dataType": "refObject",
        "properties": {
            "charge": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "payment_method_details": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.Card.GeneratedFrom.PaymentMethodDetails"},{"dataType":"enum","enums":[null]}],"required":true},
            "setup_attempt": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.SetupAttempt"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Card.Networks": {
        "dataType": "refObject",
        "properties": {
            "available": {"dataType":"array","array":{"dataType":"string"},"required":true},
            "preferred": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Card.ThreeDSecureUsage": {
        "dataType": "refObject",
        "properties": {
            "supported": {"dataType":"boolean","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Card.Wallet.AmexExpressCheckout": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Card.Wallet.ApplePay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Card.Wallet.GooglePay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Card.Wallet.Link": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Card.Wallet.Masterpass": {
        "dataType": "refObject",
        "properties": {
            "billing_address": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Address"},{"dataType":"enum","enums":[null]}],"required":true},
            "email": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "shipping_address": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Address"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Card.Wallet.SamsungPay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Card.Wallet.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["amex_express_checkout"]},{"dataType":"enum","enums":["apple_pay"]},{"dataType":"enum","enums":["google_pay"]},{"dataType":"enum","enums":["link"]},{"dataType":"enum","enums":["masterpass"]},{"dataType":"enum","enums":["samsung_pay"]},{"dataType":"enum","enums":["visa_checkout"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Card.Wallet.VisaCheckout": {
        "dataType": "refObject",
        "properties": {
            "billing_address": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Address"},{"dataType":"enum","enums":[null]}],"required":true},
            "email": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "shipping_address": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Address"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Card.Wallet": {
        "dataType": "refObject",
        "properties": {
            "amex_express_checkout": {"ref":"stripe.Stripe.PaymentMethod.Card.Wallet.AmexExpressCheckout"},
            "apple_pay": {"ref":"stripe.Stripe.PaymentMethod.Card.Wallet.ApplePay"},
            "dynamic_last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "google_pay": {"ref":"stripe.Stripe.PaymentMethod.Card.Wallet.GooglePay"},
            "link": {"ref":"stripe.Stripe.PaymentMethod.Card.Wallet.Link"},
            "masterpass": {"ref":"stripe.Stripe.PaymentMethod.Card.Wallet.Masterpass"},
            "samsung_pay": {"ref":"stripe.Stripe.PaymentMethod.Card.Wallet.SamsungPay"},
            "type": {"ref":"stripe.Stripe.PaymentMethod.Card.Wallet.Type","required":true},
            "visa_checkout": {"ref":"stripe.Stripe.PaymentMethod.Card.Wallet.VisaCheckout"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Card": {
        "dataType": "refObject",
        "properties": {
            "brand": {"dataType":"string","required":true},
            "checks": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.Card.Checks"},{"dataType":"enum","enums":[null]}],"required":true},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "display_brand": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "exp_month": {"dataType":"double","required":true},
            "exp_year": {"dataType":"double","required":true},
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "funding": {"dataType":"string","required":true},
            "generated_from": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.Card.GeneratedFrom"},{"dataType":"enum","enums":[null]}],"required":true},
            "iin": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "issuer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "last4": {"dataType":"string","required":true},
            "networks": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.Card.Networks"},{"dataType":"enum","enums":[null]}],"required":true},
            "three_d_secure_usage": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.Card.ThreeDSecureUsage"},{"dataType":"enum","enums":[null]}],"required":true},
            "wallet": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.Card.Wallet"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.CardPresent.Networks": {
        "dataType": "refObject",
        "properties": {
            "available": {"dataType":"array","array":{"dataType":"string"},"required":true},
            "preferred": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.CardPresent.Offline": {
        "dataType": "refObject",
        "properties": {
            "stored_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["deferred"]},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.CardPresent.ReadMethod": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["contact_emv"]},{"dataType":"enum","enums":["contactless_emv"]},{"dataType":"enum","enums":["contactless_magstripe_mode"]},{"dataType":"enum","enums":["magnetic_stripe_fallback"]},{"dataType":"enum","enums":["magnetic_stripe_track2"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.CardPresent.Wallet.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["apple_pay"]},{"dataType":"enum","enums":["google_pay"]},{"dataType":"enum","enums":["samsung_pay"]},{"dataType":"enum","enums":["unknown"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.CardPresent.Wallet": {
        "dataType": "refObject",
        "properties": {
            "type": {"ref":"stripe.Stripe.PaymentMethod.CardPresent.Wallet.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.CardPresent": {
        "dataType": "refObject",
        "properties": {
            "brand": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "brand_product": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "cardholder_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "exp_month": {"dataType":"double","required":true},
            "exp_year": {"dataType":"double","required":true},
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "funding": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "iin": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "issuer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "networks": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.CardPresent.Networks"},{"dataType":"enum","enums":[null]}],"required":true},
            "offline": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.CardPresent.Offline"},{"dataType":"enum","enums":[null]}],"required":true},
            "preferred_locales": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
            "read_method": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.CardPresent.ReadMethod"},{"dataType":"enum","enums":[null]}],"required":true},
            "wallet": {"ref":"stripe.Stripe.PaymentMethod.CardPresent.Wallet"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Cashapp": {
        "dataType": "refObject",
        "properties": {
            "buyer_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "cashtag": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.CustomerBalance": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Eps.Bank": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["arzte_und_apotheker_bank"]},{"dataType":"enum","enums":["austrian_anadi_bank_ag"]},{"dataType":"enum","enums":["bank_austria"]},{"dataType":"enum","enums":["bankhaus_carl_spangler"]},{"dataType":"enum","enums":["bankhaus_schelhammer_und_schattera_ag"]},{"dataType":"enum","enums":["bawag_psk_ag"]},{"dataType":"enum","enums":["bks_bank_ag"]},{"dataType":"enum","enums":["brull_kallmus_bank_ag"]},{"dataType":"enum","enums":["btv_vier_lander_bank"]},{"dataType":"enum","enums":["capital_bank_grawe_gruppe_ag"]},{"dataType":"enum","enums":["deutsche_bank_ag"]},{"dataType":"enum","enums":["dolomitenbank"]},{"dataType":"enum","enums":["easybank_ag"]},{"dataType":"enum","enums":["erste_bank_und_sparkassen"]},{"dataType":"enum","enums":["hypo_alpeadriabank_international_ag"]},{"dataType":"enum","enums":["hypo_bank_burgenland_aktiengesellschaft"]},{"dataType":"enum","enums":["hypo_noe_lb_fur_niederosterreich_u_wien"]},{"dataType":"enum","enums":["hypo_oberosterreich_salzburg_steiermark"]},{"dataType":"enum","enums":["hypo_tirol_bank_ag"]},{"dataType":"enum","enums":["hypo_vorarlberg_bank_ag"]},{"dataType":"enum","enums":["marchfelder_bank"]},{"dataType":"enum","enums":["oberbank_ag"]},{"dataType":"enum","enums":["raiffeisen_bankengruppe_osterreich"]},{"dataType":"enum","enums":["schoellerbank_ag"]},{"dataType":"enum","enums":["sparda_bank_wien"]},{"dataType":"enum","enums":["volksbank_gruppe"]},{"dataType":"enum","enums":["volkskreditbank_ag"]},{"dataType":"enum","enums":["vr_bank_braunau"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Eps": {
        "dataType": "refObject",
        "properties": {
            "bank": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.Eps.Bank"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Fpx.AccountHolderType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["company"]},{"dataType":"enum","enums":["individual"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Fpx.Bank": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["affin_bank"]},{"dataType":"enum","enums":["agrobank"]},{"dataType":"enum","enums":["alliance_bank"]},{"dataType":"enum","enums":["ambank"]},{"dataType":"enum","enums":["bank_islam"]},{"dataType":"enum","enums":["bank_muamalat"]},{"dataType":"enum","enums":["bank_of_china"]},{"dataType":"enum","enums":["bank_rakyat"]},{"dataType":"enum","enums":["bsn"]},{"dataType":"enum","enums":["cimb"]},{"dataType":"enum","enums":["deutsche_bank"]},{"dataType":"enum","enums":["hong_leong_bank"]},{"dataType":"enum","enums":["hsbc"]},{"dataType":"enum","enums":["kfh"]},{"dataType":"enum","enums":["maybank2e"]},{"dataType":"enum","enums":["maybank2u"]},{"dataType":"enum","enums":["ocbc"]},{"dataType":"enum","enums":["pb_enterprise"]},{"dataType":"enum","enums":["public_bank"]},{"dataType":"enum","enums":["rhb"]},{"dataType":"enum","enums":["standard_chartered"]},{"dataType":"enum","enums":["uob"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Fpx": {
        "dataType": "refObject",
        "properties": {
            "account_holder_type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.Fpx.AccountHolderType"},{"dataType":"enum","enums":[null]}],"required":true},
            "bank": {"ref":"stripe.Stripe.PaymentMethod.Fpx.Bank","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Giropay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Grabpay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Ideal.Bank": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["abn_amro"]},{"dataType":"enum","enums":["asn_bank"]},{"dataType":"enum","enums":["bunq"]},{"dataType":"enum","enums":["handelsbanken"]},{"dataType":"enum","enums":["ing"]},{"dataType":"enum","enums":["knab"]},{"dataType":"enum","enums":["moneyou"]},{"dataType":"enum","enums":["n26"]},{"dataType":"enum","enums":["nn"]},{"dataType":"enum","enums":["rabobank"]},{"dataType":"enum","enums":["regiobank"]},{"dataType":"enum","enums":["revolut"]},{"dataType":"enum","enums":["sns_bank"]},{"dataType":"enum","enums":["triodos_bank"]},{"dataType":"enum","enums":["van_lanschot"]},{"dataType":"enum","enums":["yoursafe"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Ideal.Bic": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["ABNANL2A"]},{"dataType":"enum","enums":["ASNBNL21"]},{"dataType":"enum","enums":["BITSNL2A"]},{"dataType":"enum","enums":["BUNQNL2A"]},{"dataType":"enum","enums":["FVLBNL22"]},{"dataType":"enum","enums":["HANDNL2A"]},{"dataType":"enum","enums":["INGBNL2A"]},{"dataType":"enum","enums":["KNABNL2H"]},{"dataType":"enum","enums":["MOYONL21"]},{"dataType":"enum","enums":["NNBANL2G"]},{"dataType":"enum","enums":["NTSBDEB1"]},{"dataType":"enum","enums":["RABONL2U"]},{"dataType":"enum","enums":["RBRBNL21"]},{"dataType":"enum","enums":["REVOIE23"]},{"dataType":"enum","enums":["REVOLT21"]},{"dataType":"enum","enums":["SNSBNL2A"]},{"dataType":"enum","enums":["TRIONL2U"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Ideal": {
        "dataType": "refObject",
        "properties": {
            "bank": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.Ideal.Bank"},{"dataType":"enum","enums":[null]}],"required":true},
            "bic": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.Ideal.Bic"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.InteracPresent.Networks": {
        "dataType": "refObject",
        "properties": {
            "available": {"dataType":"array","array":{"dataType":"string"},"required":true},
            "preferred": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.InteracPresent.ReadMethod": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["contact_emv"]},{"dataType":"enum","enums":["contactless_emv"]},{"dataType":"enum","enums":["contactless_magstripe_mode"]},{"dataType":"enum","enums":["magnetic_stripe_fallback"]},{"dataType":"enum","enums":["magnetic_stripe_track2"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.InteracPresent": {
        "dataType": "refObject",
        "properties": {
            "brand": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "cardholder_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "exp_month": {"dataType":"double","required":true},
            "exp_year": {"dataType":"double","required":true},
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "funding": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "iin": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "issuer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "networks": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.InteracPresent.Networks"},{"dataType":"enum","enums":[null]}],"required":true},
            "preferred_locales": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
            "read_method": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.InteracPresent.ReadMethod"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Klarna.Dob": {
        "dataType": "refObject",
        "properties": {
            "day": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "month": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "year": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Klarna": {
        "dataType": "refObject",
        "properties": {
            "dob": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.Klarna.Dob"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Konbini": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Link": {
        "dataType": "refObject",
        "properties": {
            "email": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "persistent_token": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Mobilepay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Multibanco": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Oxxo": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.P24.Bank": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["alior_bank"]},{"dataType":"enum","enums":["bank_millennium"]},{"dataType":"enum","enums":["bank_nowy_bfg_sa"]},{"dataType":"enum","enums":["bank_pekao_sa"]},{"dataType":"enum","enums":["banki_spbdzielcze"]},{"dataType":"enum","enums":["blik"]},{"dataType":"enum","enums":["bnp_paribas"]},{"dataType":"enum","enums":["boz"]},{"dataType":"enum","enums":["citi_handlowy"]},{"dataType":"enum","enums":["credit_agricole"]},{"dataType":"enum","enums":["envelobank"]},{"dataType":"enum","enums":["etransfer_pocztowy24"]},{"dataType":"enum","enums":["getin_bank"]},{"dataType":"enum","enums":["ideabank"]},{"dataType":"enum","enums":["ing"]},{"dataType":"enum","enums":["inteligo"]},{"dataType":"enum","enums":["mbank_mtransfer"]},{"dataType":"enum","enums":["nest_przelew"]},{"dataType":"enum","enums":["noble_pay"]},{"dataType":"enum","enums":["pbac_z_ipko"]},{"dataType":"enum","enums":["plus_bank"]},{"dataType":"enum","enums":["santander_przelew24"]},{"dataType":"enum","enums":["tmobile_usbugi_bankowe"]},{"dataType":"enum","enums":["toyota_bank"]},{"dataType":"enum","enums":["velobank"]},{"dataType":"enum","enums":["volkswagen_bank"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.P24": {
        "dataType": "refObject",
        "properties": {
            "bank": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.P24.Bank"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Paynow": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Paypal": {
        "dataType": "refObject",
        "properties": {
            "payer_email": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "payer_id": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Pix": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Promptpay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.RadarOptions": {
        "dataType": "refObject",
        "properties": {
            "session": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.RevolutPay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.SepaDebit.GeneratedFrom": {
        "dataType": "refObject",
        "properties": {
            "charge": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Charge"},{"dataType":"enum","enums":[null]}],"required":true},
            "setup_attempt": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.SetupAttempt"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.SepaDebit": {
        "dataType": "refObject",
        "properties": {
            "bank_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "branch_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "generated_from": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.SepaDebit.GeneratedFrom"},{"dataType":"enum","enums":[null]}],"required":true},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Sofort": {
        "dataType": "refObject",
        "properties": {
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Swish": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Twint": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["acss_debit"]},{"dataType":"enum","enums":["affirm"]},{"dataType":"enum","enums":["afterpay_clearpay"]},{"dataType":"enum","enums":["alipay"]},{"dataType":"enum","enums":["amazon_pay"]},{"dataType":"enum","enums":["au_becs_debit"]},{"dataType":"enum","enums":["bacs_debit"]},{"dataType":"enum","enums":["bancontact"]},{"dataType":"enum","enums":["blik"]},{"dataType":"enum","enums":["boleto"]},{"dataType":"enum","enums":["card"]},{"dataType":"enum","enums":["card_present"]},{"dataType":"enum","enums":["cashapp"]},{"dataType":"enum","enums":["customer_balance"]},{"dataType":"enum","enums":["eps"]},{"dataType":"enum","enums":["fpx"]},{"dataType":"enum","enums":["giropay"]},{"dataType":"enum","enums":["grabpay"]},{"dataType":"enum","enums":["ideal"]},{"dataType":"enum","enums":["interac_present"]},{"dataType":"enum","enums":["klarna"]},{"dataType":"enum","enums":["konbini"]},{"dataType":"enum","enums":["link"]},{"dataType":"enum","enums":["mobilepay"]},{"dataType":"enum","enums":["multibanco"]},{"dataType":"enum","enums":["oxxo"]},{"dataType":"enum","enums":["p24"]},{"dataType":"enum","enums":["paynow"]},{"dataType":"enum","enums":["paypal"]},{"dataType":"enum","enums":["pix"]},{"dataType":"enum","enums":["promptpay"]},{"dataType":"enum","enums":["revolut_pay"]},{"dataType":"enum","enums":["sepa_debit"]},{"dataType":"enum","enums":["sofort"]},{"dataType":"enum","enums":["swish"]},{"dataType":"enum","enums":["twint"]},{"dataType":"enum","enums":["us_bank_account"]},{"dataType":"enum","enums":["wechat_pay"]},{"dataType":"enum","enums":["zip"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.UsBankAccount.AccountHolderType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["company"]},{"dataType":"enum","enums":["individual"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.UsBankAccount.AccountType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["checking"]},{"dataType":"enum","enums":["savings"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.UsBankAccount.Networks.Supported": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["ach"]},{"dataType":"enum","enums":["us_domestic_wire"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.UsBankAccount.Networks": {
        "dataType": "refObject",
        "properties": {
            "preferred": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "supported": {"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.PaymentMethod.UsBankAccount.Networks.Supported"},"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.UsBankAccount.StatusDetails.Blocked.NetworkCode": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["R02"]},{"dataType":"enum","enums":["R03"]},{"dataType":"enum","enums":["R04"]},{"dataType":"enum","enums":["R05"]},{"dataType":"enum","enums":["R07"]},{"dataType":"enum","enums":["R08"]},{"dataType":"enum","enums":["R10"]},{"dataType":"enum","enums":["R11"]},{"dataType":"enum","enums":["R16"]},{"dataType":"enum","enums":["R20"]},{"dataType":"enum","enums":["R29"]},{"dataType":"enum","enums":["R31"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.UsBankAccount.StatusDetails.Blocked.Reason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["bank_account_closed"]},{"dataType":"enum","enums":["bank_account_frozen"]},{"dataType":"enum","enums":["bank_account_invalid_details"]},{"dataType":"enum","enums":["bank_account_restricted"]},{"dataType":"enum","enums":["bank_account_unusable"]},{"dataType":"enum","enums":["debit_not_authorized"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.UsBankAccount.StatusDetails.Blocked": {
        "dataType": "refObject",
        "properties": {
            "network_code": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.UsBankAccount.StatusDetails.Blocked.NetworkCode"},{"dataType":"enum","enums":[null]}],"required":true},
            "reason": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.UsBankAccount.StatusDetails.Blocked.Reason"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.UsBankAccount.StatusDetails": {
        "dataType": "refObject",
        "properties": {
            "blocked": {"ref":"stripe.Stripe.PaymentMethod.UsBankAccount.StatusDetails.Blocked"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.UsBankAccount": {
        "dataType": "refObject",
        "properties": {
            "account_holder_type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.UsBankAccount.AccountHolderType"},{"dataType":"enum","enums":[null]}],"required":true},
            "account_type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.UsBankAccount.AccountType"},{"dataType":"enum","enums":[null]}],"required":true},
            "bank_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "financial_connections_account": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "fingerprint": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "last4": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "networks": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.UsBankAccount.Networks"},{"dataType":"enum","enums":[null]}],"required":true},
            "routing_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "status_details": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.PaymentMethod.UsBankAccount.StatusDetails"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.WechatPay": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.PaymentMethod.Zip": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Customer.InvoiceSettings.RenderingOptions": {
        "dataType": "refObject",
        "properties": {
            "amount_tax_display": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "template": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Customer.InvoiceSettings": {
        "dataType": "refObject",
        "properties": {
            "custom_fields": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Customer.InvoiceSettings.CustomField"}},{"dataType":"enum","enums":[null]}],"required":true},
            "default_payment_method": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PaymentMethod"},{"dataType":"enum","enums":[null]}],"required":true},
            "footer": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "rendering_options": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Customer.InvoiceSettings.RenderingOptions"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Customer.Shipping": {
        "dataType": "refObject",
        "properties": {
            "address": {"ref":"stripe.Stripe.Address"},
            "carrier": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "name": {"dataType":"string"},
            "phone": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "tracking_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ApiList_stripe.Stripe.CustomerSource_": {
        "dataType": "refObject",
        "properties": {
            "object": {"dataType":"enum","enums":["list"],"required":true},
            "data": {"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.CustomerSource"},"required":true},
            "has_more": {"dataType":"boolean","required":true},
            "url": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ApiList_stripe.Stripe.Subscription_": {
        "dataType": "refObject",
        "properties": {
            "object": {"dataType":"enum","enums":["list"],"required":true},
            "data": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Subscription"},"required":true},
            "has_more": {"dataType":"boolean","required":true},
            "url": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Customer.Tax.AutomaticTax": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["failed"]},{"dataType":"enum","enums":["not_collecting"]},{"dataType":"enum","enums":["supported"]},{"dataType":"enum","enums":["unrecognized_location"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Customer.Tax.Location.Source": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["billing_address"]},{"dataType":"enum","enums":["ip_address"]},{"dataType":"enum","enums":["payment_method"]},{"dataType":"enum","enums":["shipping_destination"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Customer.Tax.Location": {
        "dataType": "refObject",
        "properties": {
            "country": {"dataType":"string","required":true},
            "source": {"ref":"stripe.Stripe.Customer.Tax.Location.Source","required":true},
            "state": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Customer.Tax": {
        "dataType": "refObject",
        "properties": {
            "automatic_tax": {"ref":"stripe.Stripe.Customer.Tax.AutomaticTax","required":true},
            "ip_address": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "location": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Customer.Tax.Location"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Customer.TaxExempt": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["exempt"]},{"dataType":"enum","enums":["none"]},{"dataType":"enum","enums":["reverse"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ApiList_stripe.Stripe.TaxId_": {
        "dataType": "refObject",
        "properties": {
            "object": {"dataType":"enum","enums":["list"],"required":true},
            "data": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.TaxId"},"required":true},
            "has_more": {"dataType":"boolean","required":true},
            "url": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.BankAccount.FutureRequirements.Error.Code": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["invalid_address_city_state_postal_code"]},{"dataType":"enum","enums":["invalid_address_highway_contract_box"]},{"dataType":"enum","enums":["invalid_address_private_mailbox"]},{"dataType":"enum","enums":["invalid_business_profile_name"]},{"dataType":"enum","enums":["invalid_business_profile_name_denylisted"]},{"dataType":"enum","enums":["invalid_company_name_denylisted"]},{"dataType":"enum","enums":["invalid_dob_age_over_maximum"]},{"dataType":"enum","enums":["invalid_dob_age_under_18"]},{"dataType":"enum","enums":["invalid_dob_age_under_minimum"]},{"dataType":"enum","enums":["invalid_product_description_length"]},{"dataType":"enum","enums":["invalid_product_description_url_match"]},{"dataType":"enum","enums":["invalid_representative_country"]},{"dataType":"enum","enums":["invalid_statement_descriptor_business_mismatch"]},{"dataType":"enum","enums":["invalid_statement_descriptor_denylisted"]},{"dataType":"enum","enums":["invalid_statement_descriptor_length"]},{"dataType":"enum","enums":["invalid_statement_descriptor_prefix_denylisted"]},{"dataType":"enum","enums":["invalid_statement_descriptor_prefix_mismatch"]},{"dataType":"enum","enums":["invalid_street_address"]},{"dataType":"enum","enums":["invalid_tax_id"]},{"dataType":"enum","enums":["invalid_tax_id_format"]},{"dataType":"enum","enums":["invalid_tos_acceptance"]},{"dataType":"enum","enums":["invalid_url_denylisted"]},{"dataType":"enum","enums":["invalid_url_format"]},{"dataType":"enum","enums":["invalid_url_length"]},{"dataType":"enum","enums":["invalid_url_web_presence_detected"]},{"dataType":"enum","enums":["invalid_url_website_business_information_mismatch"]},{"dataType":"enum","enums":["invalid_url_website_empty"]},{"dataType":"enum","enums":["invalid_url_website_inaccessible"]},{"dataType":"enum","enums":["invalid_url_website_inaccessible_geoblocked"]},{"dataType":"enum","enums":["invalid_url_website_inaccessible_password_protected"]},{"dataType":"enum","enums":["invalid_url_website_incomplete"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_cancellation_policy"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_customer_service_details"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_legal_restrictions"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_refund_policy"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_return_policy"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_terms_and_conditions"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_under_construction"]},{"dataType":"enum","enums":["invalid_url_website_other"]},{"dataType":"enum","enums":["invalid_value_other"]},{"dataType":"enum","enums":["verification_directors_mismatch"]},{"dataType":"enum","enums":["verification_document_address_mismatch"]},{"dataType":"enum","enums":["verification_document_address_missing"]},{"dataType":"enum","enums":["verification_document_corrupt"]},{"dataType":"enum","enums":["verification_document_country_not_supported"]},{"dataType":"enum","enums":["verification_document_directors_mismatch"]},{"dataType":"enum","enums":["verification_document_dob_mismatch"]},{"dataType":"enum","enums":["verification_document_duplicate_type"]},{"dataType":"enum","enums":["verification_document_expired"]},{"dataType":"enum","enums":["verification_document_failed_copy"]},{"dataType":"enum","enums":["verification_document_failed_greyscale"]},{"dataType":"enum","enums":["verification_document_failed_other"]},{"dataType":"enum","enums":["verification_document_failed_test_mode"]},{"dataType":"enum","enums":["verification_document_fraudulent"]},{"dataType":"enum","enums":["verification_document_id_number_mismatch"]},{"dataType":"enum","enums":["verification_document_id_number_missing"]},{"dataType":"enum","enums":["verification_document_incomplete"]},{"dataType":"enum","enums":["verification_document_invalid"]},{"dataType":"enum","enums":["verification_document_issue_or_expiry_date_missing"]},{"dataType":"enum","enums":["verification_document_manipulated"]},{"dataType":"enum","enums":["verification_document_missing_back"]},{"dataType":"enum","enums":["verification_document_missing_front"]},{"dataType":"enum","enums":["verification_document_name_mismatch"]},{"dataType":"enum","enums":["verification_document_name_missing"]},{"dataType":"enum","enums":["verification_document_nationality_mismatch"]},{"dataType":"enum","enums":["verification_document_not_readable"]},{"dataType":"enum","enums":["verification_document_not_signed"]},{"dataType":"enum","enums":["verification_document_not_uploaded"]},{"dataType":"enum","enums":["verification_document_photo_mismatch"]},{"dataType":"enum","enums":["verification_document_too_large"]},{"dataType":"enum","enums":["verification_document_type_not_supported"]},{"dataType":"enum","enums":["verification_extraneous_directors"]},{"dataType":"enum","enums":["verification_failed_address_match"]},{"dataType":"enum","enums":["verification_failed_business_iec_number"]},{"dataType":"enum","enums":["verification_failed_document_match"]},{"dataType":"enum","enums":["verification_failed_id_number_match"]},{"dataType":"enum","enums":["verification_failed_keyed_identity"]},{"dataType":"enum","enums":["verification_failed_keyed_match"]},{"dataType":"enum","enums":["verification_failed_name_match"]},{"dataType":"enum","enums":["verification_failed_other"]},{"dataType":"enum","enums":["verification_failed_representative_authority"]},{"dataType":"enum","enums":["verification_failed_residential_address"]},{"dataType":"enum","enums":["verification_failed_tax_id_match"]},{"dataType":"enum","enums":["verification_failed_tax_id_not_issued"]},{"dataType":"enum","enums":["verification_missing_directors"]},{"dataType":"enum","enums":["verification_missing_executives"]},{"dataType":"enum","enums":["verification_missing_owners"]},{"dataType":"enum","enums":["verification_requires_additional_memorandum_of_associations"]},{"dataType":"enum","enums":["verification_requires_additional_proof_of_registration"]},{"dataType":"enum","enums":["verification_supportability"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.BankAccount.FutureRequirements.Error": {
        "dataType": "refObject",
        "properties": {
            "code": {"ref":"stripe.Stripe.BankAccount.FutureRequirements.Error.Code","required":true},
            "reason": {"dataType":"string","required":true},
            "requirement": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.BankAccount.FutureRequirements": {
        "dataType": "refObject",
        "properties": {
            "currently_due": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
            "errors": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.BankAccount.FutureRequirements.Error"}},{"dataType":"enum","enums":[null]}],"required":true},
            "past_due": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
            "pending_verification": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.BankAccount.Requirements.Error.Code": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["invalid_address_city_state_postal_code"]},{"dataType":"enum","enums":["invalid_address_highway_contract_box"]},{"dataType":"enum","enums":["invalid_address_private_mailbox"]},{"dataType":"enum","enums":["invalid_business_profile_name"]},{"dataType":"enum","enums":["invalid_business_profile_name_denylisted"]},{"dataType":"enum","enums":["invalid_company_name_denylisted"]},{"dataType":"enum","enums":["invalid_dob_age_over_maximum"]},{"dataType":"enum","enums":["invalid_dob_age_under_18"]},{"dataType":"enum","enums":["invalid_dob_age_under_minimum"]},{"dataType":"enum","enums":["invalid_product_description_length"]},{"dataType":"enum","enums":["invalid_product_description_url_match"]},{"dataType":"enum","enums":["invalid_representative_country"]},{"dataType":"enum","enums":["invalid_statement_descriptor_business_mismatch"]},{"dataType":"enum","enums":["invalid_statement_descriptor_denylisted"]},{"dataType":"enum","enums":["invalid_statement_descriptor_length"]},{"dataType":"enum","enums":["invalid_statement_descriptor_prefix_denylisted"]},{"dataType":"enum","enums":["invalid_statement_descriptor_prefix_mismatch"]},{"dataType":"enum","enums":["invalid_street_address"]},{"dataType":"enum","enums":["invalid_tax_id"]},{"dataType":"enum","enums":["invalid_tax_id_format"]},{"dataType":"enum","enums":["invalid_tos_acceptance"]},{"dataType":"enum","enums":["invalid_url_denylisted"]},{"dataType":"enum","enums":["invalid_url_format"]},{"dataType":"enum","enums":["invalid_url_length"]},{"dataType":"enum","enums":["invalid_url_web_presence_detected"]},{"dataType":"enum","enums":["invalid_url_website_business_information_mismatch"]},{"dataType":"enum","enums":["invalid_url_website_empty"]},{"dataType":"enum","enums":["invalid_url_website_inaccessible"]},{"dataType":"enum","enums":["invalid_url_website_inaccessible_geoblocked"]},{"dataType":"enum","enums":["invalid_url_website_inaccessible_password_protected"]},{"dataType":"enum","enums":["invalid_url_website_incomplete"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_cancellation_policy"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_customer_service_details"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_legal_restrictions"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_refund_policy"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_return_policy"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_terms_and_conditions"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_under_construction"]},{"dataType":"enum","enums":["invalid_url_website_other"]},{"dataType":"enum","enums":["invalid_value_other"]},{"dataType":"enum","enums":["verification_directors_mismatch"]},{"dataType":"enum","enums":["verification_document_address_mismatch"]},{"dataType":"enum","enums":["verification_document_address_missing"]},{"dataType":"enum","enums":["verification_document_corrupt"]},{"dataType":"enum","enums":["verification_document_country_not_supported"]},{"dataType":"enum","enums":["verification_document_directors_mismatch"]},{"dataType":"enum","enums":["verification_document_dob_mismatch"]},{"dataType":"enum","enums":["verification_document_duplicate_type"]},{"dataType":"enum","enums":["verification_document_expired"]},{"dataType":"enum","enums":["verification_document_failed_copy"]},{"dataType":"enum","enums":["verification_document_failed_greyscale"]},{"dataType":"enum","enums":["verification_document_failed_other"]},{"dataType":"enum","enums":["verification_document_failed_test_mode"]},{"dataType":"enum","enums":["verification_document_fraudulent"]},{"dataType":"enum","enums":["verification_document_id_number_mismatch"]},{"dataType":"enum","enums":["verification_document_id_number_missing"]},{"dataType":"enum","enums":["verification_document_incomplete"]},{"dataType":"enum","enums":["verification_document_invalid"]},{"dataType":"enum","enums":["verification_document_issue_or_expiry_date_missing"]},{"dataType":"enum","enums":["verification_document_manipulated"]},{"dataType":"enum","enums":["verification_document_missing_back"]},{"dataType":"enum","enums":["verification_document_missing_front"]},{"dataType":"enum","enums":["verification_document_name_mismatch"]},{"dataType":"enum","enums":["verification_document_name_missing"]},{"dataType":"enum","enums":["verification_document_nationality_mismatch"]},{"dataType":"enum","enums":["verification_document_not_readable"]},{"dataType":"enum","enums":["verification_document_not_signed"]},{"dataType":"enum","enums":["verification_document_not_uploaded"]},{"dataType":"enum","enums":["verification_document_photo_mismatch"]},{"dataType":"enum","enums":["verification_document_too_large"]},{"dataType":"enum","enums":["verification_document_type_not_supported"]},{"dataType":"enum","enums":["verification_extraneous_directors"]},{"dataType":"enum","enums":["verification_failed_address_match"]},{"dataType":"enum","enums":["verification_failed_business_iec_number"]},{"dataType":"enum","enums":["verification_failed_document_match"]},{"dataType":"enum","enums":["verification_failed_id_number_match"]},{"dataType":"enum","enums":["verification_failed_keyed_identity"]},{"dataType":"enum","enums":["verification_failed_keyed_match"]},{"dataType":"enum","enums":["verification_failed_name_match"]},{"dataType":"enum","enums":["verification_failed_other"]},{"dataType":"enum","enums":["verification_failed_representative_authority"]},{"dataType":"enum","enums":["verification_failed_residential_address"]},{"dataType":"enum","enums":["verification_failed_tax_id_match"]},{"dataType":"enum","enums":["verification_failed_tax_id_not_issued"]},{"dataType":"enum","enums":["verification_missing_directors"]},{"dataType":"enum","enums":["verification_missing_executives"]},{"dataType":"enum","enums":["verification_missing_owners"]},{"dataType":"enum","enums":["verification_requires_additional_memorandum_of_associations"]},{"dataType":"enum","enums":["verification_requires_additional_proof_of_registration"]},{"dataType":"enum","enums":["verification_supportability"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.BankAccount.Requirements.Error": {
        "dataType": "refObject",
        "properties": {
            "code": {"ref":"stripe.Stripe.BankAccount.Requirements.Error.Code","required":true},
            "reason": {"dataType":"string","required":true},
            "requirement": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.BankAccount.Requirements": {
        "dataType": "refObject",
        "properties": {
            "currently_due": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
            "errors": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.BankAccount.Requirements.Error"}},{"dataType":"enum","enums":[null]}],"required":true},
            "past_due": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
            "pending_verification": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ApiList_stripe.Stripe.ExternalAccount_": {
        "dataType": "refObject",
        "properties": {
            "object": {"dataType":"enum","enums":["list"],"required":true},
            "data": {"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.ExternalAccount"},"required":true},
            "has_more": {"dataType":"boolean","required":true},
            "url": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.FutureRequirements.Alternative": {
        "dataType": "refObject",
        "properties": {
            "alternative_fields_due": {"dataType":"array","array":{"dataType":"string"},"required":true},
            "original_fields_due": {"dataType":"array","array":{"dataType":"string"},"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.FutureRequirements.Error.Code": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["invalid_address_city_state_postal_code"]},{"dataType":"enum","enums":["invalid_address_highway_contract_box"]},{"dataType":"enum","enums":["invalid_address_private_mailbox"]},{"dataType":"enum","enums":["invalid_business_profile_name"]},{"dataType":"enum","enums":["invalid_business_profile_name_denylisted"]},{"dataType":"enum","enums":["invalid_company_name_denylisted"]},{"dataType":"enum","enums":["invalid_dob_age_over_maximum"]},{"dataType":"enum","enums":["invalid_dob_age_under_18"]},{"dataType":"enum","enums":["invalid_dob_age_under_minimum"]},{"dataType":"enum","enums":["invalid_product_description_length"]},{"dataType":"enum","enums":["invalid_product_description_url_match"]},{"dataType":"enum","enums":["invalid_representative_country"]},{"dataType":"enum","enums":["invalid_statement_descriptor_business_mismatch"]},{"dataType":"enum","enums":["invalid_statement_descriptor_denylisted"]},{"dataType":"enum","enums":["invalid_statement_descriptor_length"]},{"dataType":"enum","enums":["invalid_statement_descriptor_prefix_denylisted"]},{"dataType":"enum","enums":["invalid_statement_descriptor_prefix_mismatch"]},{"dataType":"enum","enums":["invalid_street_address"]},{"dataType":"enum","enums":["invalid_tax_id"]},{"dataType":"enum","enums":["invalid_tax_id_format"]},{"dataType":"enum","enums":["invalid_tos_acceptance"]},{"dataType":"enum","enums":["invalid_url_denylisted"]},{"dataType":"enum","enums":["invalid_url_format"]},{"dataType":"enum","enums":["invalid_url_length"]},{"dataType":"enum","enums":["invalid_url_web_presence_detected"]},{"dataType":"enum","enums":["invalid_url_website_business_information_mismatch"]},{"dataType":"enum","enums":["invalid_url_website_empty"]},{"dataType":"enum","enums":["invalid_url_website_inaccessible"]},{"dataType":"enum","enums":["invalid_url_website_inaccessible_geoblocked"]},{"dataType":"enum","enums":["invalid_url_website_inaccessible_password_protected"]},{"dataType":"enum","enums":["invalid_url_website_incomplete"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_cancellation_policy"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_customer_service_details"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_legal_restrictions"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_refund_policy"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_return_policy"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_terms_and_conditions"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_under_construction"]},{"dataType":"enum","enums":["invalid_url_website_other"]},{"dataType":"enum","enums":["invalid_value_other"]},{"dataType":"enum","enums":["verification_directors_mismatch"]},{"dataType":"enum","enums":["verification_document_address_mismatch"]},{"dataType":"enum","enums":["verification_document_address_missing"]},{"dataType":"enum","enums":["verification_document_corrupt"]},{"dataType":"enum","enums":["verification_document_country_not_supported"]},{"dataType":"enum","enums":["verification_document_directors_mismatch"]},{"dataType":"enum","enums":["verification_document_dob_mismatch"]},{"dataType":"enum","enums":["verification_document_duplicate_type"]},{"dataType":"enum","enums":["verification_document_expired"]},{"dataType":"enum","enums":["verification_document_failed_copy"]},{"dataType":"enum","enums":["verification_document_failed_greyscale"]},{"dataType":"enum","enums":["verification_document_failed_other"]},{"dataType":"enum","enums":["verification_document_failed_test_mode"]},{"dataType":"enum","enums":["verification_document_fraudulent"]},{"dataType":"enum","enums":["verification_document_id_number_mismatch"]},{"dataType":"enum","enums":["verification_document_id_number_missing"]},{"dataType":"enum","enums":["verification_document_incomplete"]},{"dataType":"enum","enums":["verification_document_invalid"]},{"dataType":"enum","enums":["verification_document_issue_or_expiry_date_missing"]},{"dataType":"enum","enums":["verification_document_manipulated"]},{"dataType":"enum","enums":["verification_document_missing_back"]},{"dataType":"enum","enums":["verification_document_missing_front"]},{"dataType":"enum","enums":["verification_document_name_mismatch"]},{"dataType":"enum","enums":["verification_document_name_missing"]},{"dataType":"enum","enums":["verification_document_nationality_mismatch"]},{"dataType":"enum","enums":["verification_document_not_readable"]},{"dataType":"enum","enums":["verification_document_not_signed"]},{"dataType":"enum","enums":["verification_document_not_uploaded"]},{"dataType":"enum","enums":["verification_document_photo_mismatch"]},{"dataType":"enum","enums":["verification_document_too_large"]},{"dataType":"enum","enums":["verification_document_type_not_supported"]},{"dataType":"enum","enums":["verification_extraneous_directors"]},{"dataType":"enum","enums":["verification_failed_address_match"]},{"dataType":"enum","enums":["verification_failed_business_iec_number"]},{"dataType":"enum","enums":["verification_failed_document_match"]},{"dataType":"enum","enums":["verification_failed_id_number_match"]},{"dataType":"enum","enums":["verification_failed_keyed_identity"]},{"dataType":"enum","enums":["verification_failed_keyed_match"]},{"dataType":"enum","enums":["verification_failed_name_match"]},{"dataType":"enum","enums":["verification_failed_other"]},{"dataType":"enum","enums":["verification_failed_representative_authority"]},{"dataType":"enum","enums":["verification_failed_residential_address"]},{"dataType":"enum","enums":["verification_failed_tax_id_match"]},{"dataType":"enum","enums":["verification_failed_tax_id_not_issued"]},{"dataType":"enum","enums":["verification_missing_directors"]},{"dataType":"enum","enums":["verification_missing_executives"]},{"dataType":"enum","enums":["verification_missing_owners"]},{"dataType":"enum","enums":["verification_requires_additional_memorandum_of_associations"]},{"dataType":"enum","enums":["verification_requires_additional_proof_of_registration"]},{"dataType":"enum","enums":["verification_supportability"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.FutureRequirements.Error": {
        "dataType": "refObject",
        "properties": {
            "code": {"ref":"stripe.Stripe.Account.FutureRequirements.Error.Code","required":true},
            "reason": {"dataType":"string","required":true},
            "requirement": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.FutureRequirements": {
        "dataType": "refObject",
        "properties": {
            "alternatives": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Account.FutureRequirements.Alternative"}},{"dataType":"enum","enums":[null]}],"required":true},
            "current_deadline": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "currently_due": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
            "disabled_reason": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "errors": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Account.FutureRequirements.Error"}},{"dataType":"enum","enums":[null]}],"required":true},
            "eventually_due": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
            "past_due": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
            "pending_verification": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Person.AdditionalTosAcceptances.Account": {
        "dataType": "refObject",
        "properties": {
            "date": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "ip": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "user_agent": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Person.AdditionalTosAcceptances": {
        "dataType": "refObject",
        "properties": {
            "account": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Person.AdditionalTosAcceptances.Account"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Person.AddressKana": {
        "dataType": "refObject",
        "properties": {
            "city": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "line1": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "line2": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "postal_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "state": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "town": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Person.AddressKanji": {
        "dataType": "refObject",
        "properties": {
            "city": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "country": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "line1": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "line2": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "postal_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "state": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "town": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Person.Dob": {
        "dataType": "refObject",
        "properties": {
            "day": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "month": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "year": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Person.FutureRequirements.Alternative": {
        "dataType": "refObject",
        "properties": {
            "alternative_fields_due": {"dataType":"array","array":{"dataType":"string"},"required":true},
            "original_fields_due": {"dataType":"array","array":{"dataType":"string"},"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Person.FutureRequirements.Error.Code": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["invalid_address_city_state_postal_code"]},{"dataType":"enum","enums":["invalid_address_highway_contract_box"]},{"dataType":"enum","enums":["invalid_address_private_mailbox"]},{"dataType":"enum","enums":["invalid_business_profile_name"]},{"dataType":"enum","enums":["invalid_business_profile_name_denylisted"]},{"dataType":"enum","enums":["invalid_company_name_denylisted"]},{"dataType":"enum","enums":["invalid_dob_age_over_maximum"]},{"dataType":"enum","enums":["invalid_dob_age_under_18"]},{"dataType":"enum","enums":["invalid_dob_age_under_minimum"]},{"dataType":"enum","enums":["invalid_product_description_length"]},{"dataType":"enum","enums":["invalid_product_description_url_match"]},{"dataType":"enum","enums":["invalid_representative_country"]},{"dataType":"enum","enums":["invalid_statement_descriptor_business_mismatch"]},{"dataType":"enum","enums":["invalid_statement_descriptor_denylisted"]},{"dataType":"enum","enums":["invalid_statement_descriptor_length"]},{"dataType":"enum","enums":["invalid_statement_descriptor_prefix_denylisted"]},{"dataType":"enum","enums":["invalid_statement_descriptor_prefix_mismatch"]},{"dataType":"enum","enums":["invalid_street_address"]},{"dataType":"enum","enums":["invalid_tax_id"]},{"dataType":"enum","enums":["invalid_tax_id_format"]},{"dataType":"enum","enums":["invalid_tos_acceptance"]},{"dataType":"enum","enums":["invalid_url_denylisted"]},{"dataType":"enum","enums":["invalid_url_format"]},{"dataType":"enum","enums":["invalid_url_length"]},{"dataType":"enum","enums":["invalid_url_web_presence_detected"]},{"dataType":"enum","enums":["invalid_url_website_business_information_mismatch"]},{"dataType":"enum","enums":["invalid_url_website_empty"]},{"dataType":"enum","enums":["invalid_url_website_inaccessible"]},{"dataType":"enum","enums":["invalid_url_website_inaccessible_geoblocked"]},{"dataType":"enum","enums":["invalid_url_website_inaccessible_password_protected"]},{"dataType":"enum","enums":["invalid_url_website_incomplete"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_cancellation_policy"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_customer_service_details"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_legal_restrictions"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_refund_policy"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_return_policy"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_terms_and_conditions"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_under_construction"]},{"dataType":"enum","enums":["invalid_url_website_other"]},{"dataType":"enum","enums":["invalid_value_other"]},{"dataType":"enum","enums":["verification_directors_mismatch"]},{"dataType":"enum","enums":["verification_document_address_mismatch"]},{"dataType":"enum","enums":["verification_document_address_missing"]},{"dataType":"enum","enums":["verification_document_corrupt"]},{"dataType":"enum","enums":["verification_document_country_not_supported"]},{"dataType":"enum","enums":["verification_document_directors_mismatch"]},{"dataType":"enum","enums":["verification_document_dob_mismatch"]},{"dataType":"enum","enums":["verification_document_duplicate_type"]},{"dataType":"enum","enums":["verification_document_expired"]},{"dataType":"enum","enums":["verification_document_failed_copy"]},{"dataType":"enum","enums":["verification_document_failed_greyscale"]},{"dataType":"enum","enums":["verification_document_failed_other"]},{"dataType":"enum","enums":["verification_document_failed_test_mode"]},{"dataType":"enum","enums":["verification_document_fraudulent"]},{"dataType":"enum","enums":["verification_document_id_number_mismatch"]},{"dataType":"enum","enums":["verification_document_id_number_missing"]},{"dataType":"enum","enums":["verification_document_incomplete"]},{"dataType":"enum","enums":["verification_document_invalid"]},{"dataType":"enum","enums":["verification_document_issue_or_expiry_date_missing"]},{"dataType":"enum","enums":["verification_document_manipulated"]},{"dataType":"enum","enums":["verification_document_missing_back"]},{"dataType":"enum","enums":["verification_document_missing_front"]},{"dataType":"enum","enums":["verification_document_name_mismatch"]},{"dataType":"enum","enums":["verification_document_name_missing"]},{"dataType":"enum","enums":["verification_document_nationality_mismatch"]},{"dataType":"enum","enums":["verification_document_not_readable"]},{"dataType":"enum","enums":["verification_document_not_signed"]},{"dataType":"enum","enums":["verification_document_not_uploaded"]},{"dataType":"enum","enums":["verification_document_photo_mismatch"]},{"dataType":"enum","enums":["verification_document_too_large"]},{"dataType":"enum","enums":["verification_document_type_not_supported"]},{"dataType":"enum","enums":["verification_extraneous_directors"]},{"dataType":"enum","enums":["verification_failed_address_match"]},{"dataType":"enum","enums":["verification_failed_business_iec_number"]},{"dataType":"enum","enums":["verification_failed_document_match"]},{"dataType":"enum","enums":["verification_failed_id_number_match"]},{"dataType":"enum","enums":["verification_failed_keyed_identity"]},{"dataType":"enum","enums":["verification_failed_keyed_match"]},{"dataType":"enum","enums":["verification_failed_name_match"]},{"dataType":"enum","enums":["verification_failed_other"]},{"dataType":"enum","enums":["verification_failed_representative_authority"]},{"dataType":"enum","enums":["verification_failed_residential_address"]},{"dataType":"enum","enums":["verification_failed_tax_id_match"]},{"dataType":"enum","enums":["verification_failed_tax_id_not_issued"]},{"dataType":"enum","enums":["verification_missing_directors"]},{"dataType":"enum","enums":["verification_missing_executives"]},{"dataType":"enum","enums":["verification_missing_owners"]},{"dataType":"enum","enums":["verification_requires_additional_memorandum_of_associations"]},{"dataType":"enum","enums":["verification_requires_additional_proof_of_registration"]},{"dataType":"enum","enums":["verification_supportability"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Person.FutureRequirements.Error": {
        "dataType": "refObject",
        "properties": {
            "code": {"ref":"stripe.Stripe.Person.FutureRequirements.Error.Code","required":true},
            "reason": {"dataType":"string","required":true},
            "requirement": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Person.FutureRequirements": {
        "dataType": "refObject",
        "properties": {
            "alternatives": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Person.FutureRequirements.Alternative"}},{"dataType":"enum","enums":[null]}],"required":true},
            "currently_due": {"dataType":"array","array":{"dataType":"string"},"required":true},
            "errors": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Person.FutureRequirements.Error"},"required":true},
            "eventually_due": {"dataType":"array","array":{"dataType":"string"},"required":true},
            "past_due": {"dataType":"array","array":{"dataType":"string"},"required":true},
            "pending_verification": {"dataType":"array","array":{"dataType":"string"},"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Person.PoliticalExposure": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["existing"]},{"dataType":"enum","enums":["none"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Person.Relationship": {
        "dataType": "refObject",
        "properties": {
            "director": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}],"required":true},
            "executive": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}],"required":true},
            "legal_guardian": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}],"required":true},
            "owner": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}],"required":true},
            "percent_ownership": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "representative": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}],"required":true},
            "title": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Person.Requirements.Alternative": {
        "dataType": "refObject",
        "properties": {
            "alternative_fields_due": {"dataType":"array","array":{"dataType":"string"},"required":true},
            "original_fields_due": {"dataType":"array","array":{"dataType":"string"},"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Person.Requirements.Error.Code": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["invalid_address_city_state_postal_code"]},{"dataType":"enum","enums":["invalid_address_highway_contract_box"]},{"dataType":"enum","enums":["invalid_address_private_mailbox"]},{"dataType":"enum","enums":["invalid_business_profile_name"]},{"dataType":"enum","enums":["invalid_business_profile_name_denylisted"]},{"dataType":"enum","enums":["invalid_company_name_denylisted"]},{"dataType":"enum","enums":["invalid_dob_age_over_maximum"]},{"dataType":"enum","enums":["invalid_dob_age_under_18"]},{"dataType":"enum","enums":["invalid_dob_age_under_minimum"]},{"dataType":"enum","enums":["invalid_product_description_length"]},{"dataType":"enum","enums":["invalid_product_description_url_match"]},{"dataType":"enum","enums":["invalid_representative_country"]},{"dataType":"enum","enums":["invalid_statement_descriptor_business_mismatch"]},{"dataType":"enum","enums":["invalid_statement_descriptor_denylisted"]},{"dataType":"enum","enums":["invalid_statement_descriptor_length"]},{"dataType":"enum","enums":["invalid_statement_descriptor_prefix_denylisted"]},{"dataType":"enum","enums":["invalid_statement_descriptor_prefix_mismatch"]},{"dataType":"enum","enums":["invalid_street_address"]},{"dataType":"enum","enums":["invalid_tax_id"]},{"dataType":"enum","enums":["invalid_tax_id_format"]},{"dataType":"enum","enums":["invalid_tos_acceptance"]},{"dataType":"enum","enums":["invalid_url_denylisted"]},{"dataType":"enum","enums":["invalid_url_format"]},{"dataType":"enum","enums":["invalid_url_length"]},{"dataType":"enum","enums":["invalid_url_web_presence_detected"]},{"dataType":"enum","enums":["invalid_url_website_business_information_mismatch"]},{"dataType":"enum","enums":["invalid_url_website_empty"]},{"dataType":"enum","enums":["invalid_url_website_inaccessible"]},{"dataType":"enum","enums":["invalid_url_website_inaccessible_geoblocked"]},{"dataType":"enum","enums":["invalid_url_website_inaccessible_password_protected"]},{"dataType":"enum","enums":["invalid_url_website_incomplete"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_cancellation_policy"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_customer_service_details"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_legal_restrictions"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_refund_policy"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_return_policy"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_terms_and_conditions"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_under_construction"]},{"dataType":"enum","enums":["invalid_url_website_other"]},{"dataType":"enum","enums":["invalid_value_other"]},{"dataType":"enum","enums":["verification_directors_mismatch"]},{"dataType":"enum","enums":["verification_document_address_mismatch"]},{"dataType":"enum","enums":["verification_document_address_missing"]},{"dataType":"enum","enums":["verification_document_corrupt"]},{"dataType":"enum","enums":["verification_document_country_not_supported"]},{"dataType":"enum","enums":["verification_document_directors_mismatch"]},{"dataType":"enum","enums":["verification_document_dob_mismatch"]},{"dataType":"enum","enums":["verification_document_duplicate_type"]},{"dataType":"enum","enums":["verification_document_expired"]},{"dataType":"enum","enums":["verification_document_failed_copy"]},{"dataType":"enum","enums":["verification_document_failed_greyscale"]},{"dataType":"enum","enums":["verification_document_failed_other"]},{"dataType":"enum","enums":["verification_document_failed_test_mode"]},{"dataType":"enum","enums":["verification_document_fraudulent"]},{"dataType":"enum","enums":["verification_document_id_number_mismatch"]},{"dataType":"enum","enums":["verification_document_id_number_missing"]},{"dataType":"enum","enums":["verification_document_incomplete"]},{"dataType":"enum","enums":["verification_document_invalid"]},{"dataType":"enum","enums":["verification_document_issue_or_expiry_date_missing"]},{"dataType":"enum","enums":["verification_document_manipulated"]},{"dataType":"enum","enums":["verification_document_missing_back"]},{"dataType":"enum","enums":["verification_document_missing_front"]},{"dataType":"enum","enums":["verification_document_name_mismatch"]},{"dataType":"enum","enums":["verification_document_name_missing"]},{"dataType":"enum","enums":["verification_document_nationality_mismatch"]},{"dataType":"enum","enums":["verification_document_not_readable"]},{"dataType":"enum","enums":["verification_document_not_signed"]},{"dataType":"enum","enums":["verification_document_not_uploaded"]},{"dataType":"enum","enums":["verification_document_photo_mismatch"]},{"dataType":"enum","enums":["verification_document_too_large"]},{"dataType":"enum","enums":["verification_document_type_not_supported"]},{"dataType":"enum","enums":["verification_extraneous_directors"]},{"dataType":"enum","enums":["verification_failed_address_match"]},{"dataType":"enum","enums":["verification_failed_business_iec_number"]},{"dataType":"enum","enums":["verification_failed_document_match"]},{"dataType":"enum","enums":["verification_failed_id_number_match"]},{"dataType":"enum","enums":["verification_failed_keyed_identity"]},{"dataType":"enum","enums":["verification_failed_keyed_match"]},{"dataType":"enum","enums":["verification_failed_name_match"]},{"dataType":"enum","enums":["verification_failed_other"]},{"dataType":"enum","enums":["verification_failed_representative_authority"]},{"dataType":"enum","enums":["verification_failed_residential_address"]},{"dataType":"enum","enums":["verification_failed_tax_id_match"]},{"dataType":"enum","enums":["verification_failed_tax_id_not_issued"]},{"dataType":"enum","enums":["verification_missing_directors"]},{"dataType":"enum","enums":["verification_missing_executives"]},{"dataType":"enum","enums":["verification_missing_owners"]},{"dataType":"enum","enums":["verification_requires_additional_memorandum_of_associations"]},{"dataType":"enum","enums":["verification_requires_additional_proof_of_registration"]},{"dataType":"enum","enums":["verification_supportability"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Person.Requirements.Error": {
        "dataType": "refObject",
        "properties": {
            "code": {"ref":"stripe.Stripe.Person.Requirements.Error.Code","required":true},
            "reason": {"dataType":"string","required":true},
            "requirement": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Person.Requirements": {
        "dataType": "refObject",
        "properties": {
            "alternatives": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Person.Requirements.Alternative"}},{"dataType":"enum","enums":[null]}],"required":true},
            "currently_due": {"dataType":"array","array":{"dataType":"string"},"required":true},
            "errors": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Person.Requirements.Error"},"required":true},
            "eventually_due": {"dataType":"array","array":{"dataType":"string"},"required":true},
            "past_due": {"dataType":"array","array":{"dataType":"string"},"required":true},
            "pending_verification": {"dataType":"array","array":{"dataType":"string"},"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Person.Verification.AdditionalDocument": {
        "dataType": "refObject",
        "properties": {
            "back": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "details": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "details_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "front": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Person.Verification.Document": {
        "dataType": "refObject",
        "properties": {
            "back": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "details": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "details_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "front": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Person.Verification": {
        "dataType": "refObject",
        "properties": {
            "additional_document": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Person.Verification.AdditionalDocument"},{"dataType":"enum","enums":[null]}]},
            "details": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "details_code": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "document": {"ref":"stripe.Stripe.Person.Verification.Document"},
            "status": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Person": {
        "dataType": "refObject",
        "properties": {
            "id": {"dataType":"string","required":true},
            "object": {"dataType":"enum","enums":["person"],"required":true},
            "account": {"dataType":"string","required":true},
            "additional_tos_acceptances": {"ref":"stripe.Stripe.Person.AdditionalTosAcceptances"},
            "address": {"ref":"stripe.Stripe.Address"},
            "address_kana": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Person.AddressKana"},{"dataType":"enum","enums":[null]}]},
            "address_kanji": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Person.AddressKanji"},{"dataType":"enum","enums":[null]}]},
            "created": {"dataType":"double","required":true},
            "deleted": {"dataType":"void"},
            "dob": {"ref":"stripe.Stripe.Person.Dob"},
            "email": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "first_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "first_name_kana": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "first_name_kanji": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "full_name_aliases": {"dataType":"array","array":{"dataType":"string"}},
            "future_requirements": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Person.FutureRequirements"},{"dataType":"enum","enums":[null]}]},
            "gender": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "id_number_provided": {"dataType":"boolean"},
            "id_number_secondary_provided": {"dataType":"boolean"},
            "last_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "last_name_kana": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "last_name_kanji": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "maiden_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "metadata": {"ref":"stripe.Stripe.Metadata"},
            "nationality": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "phone": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "political_exposure": {"ref":"stripe.Stripe.Person.PoliticalExposure"},
            "registered_address": {"ref":"stripe.Stripe.Address"},
            "relationship": {"ref":"stripe.Stripe.Person.Relationship"},
            "requirements": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Person.Requirements"},{"dataType":"enum","enums":[null]}]},
            "ssn_last_4_provided": {"dataType":"boolean"},
            "verification": {"ref":"stripe.Stripe.Person.Verification"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Requirements.Alternative": {
        "dataType": "refObject",
        "properties": {
            "alternative_fields_due": {"dataType":"array","array":{"dataType":"string"},"required":true},
            "original_fields_due": {"dataType":"array","array":{"dataType":"string"},"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Requirements.Error.Code": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["invalid_address_city_state_postal_code"]},{"dataType":"enum","enums":["invalid_address_highway_contract_box"]},{"dataType":"enum","enums":["invalid_address_private_mailbox"]},{"dataType":"enum","enums":["invalid_business_profile_name"]},{"dataType":"enum","enums":["invalid_business_profile_name_denylisted"]},{"dataType":"enum","enums":["invalid_company_name_denylisted"]},{"dataType":"enum","enums":["invalid_dob_age_over_maximum"]},{"dataType":"enum","enums":["invalid_dob_age_under_18"]},{"dataType":"enum","enums":["invalid_dob_age_under_minimum"]},{"dataType":"enum","enums":["invalid_product_description_length"]},{"dataType":"enum","enums":["invalid_product_description_url_match"]},{"dataType":"enum","enums":["invalid_representative_country"]},{"dataType":"enum","enums":["invalid_statement_descriptor_business_mismatch"]},{"dataType":"enum","enums":["invalid_statement_descriptor_denylisted"]},{"dataType":"enum","enums":["invalid_statement_descriptor_length"]},{"dataType":"enum","enums":["invalid_statement_descriptor_prefix_denylisted"]},{"dataType":"enum","enums":["invalid_statement_descriptor_prefix_mismatch"]},{"dataType":"enum","enums":["invalid_street_address"]},{"dataType":"enum","enums":["invalid_tax_id"]},{"dataType":"enum","enums":["invalid_tax_id_format"]},{"dataType":"enum","enums":["invalid_tos_acceptance"]},{"dataType":"enum","enums":["invalid_url_denylisted"]},{"dataType":"enum","enums":["invalid_url_format"]},{"dataType":"enum","enums":["invalid_url_length"]},{"dataType":"enum","enums":["invalid_url_web_presence_detected"]},{"dataType":"enum","enums":["invalid_url_website_business_information_mismatch"]},{"dataType":"enum","enums":["invalid_url_website_empty"]},{"dataType":"enum","enums":["invalid_url_website_inaccessible"]},{"dataType":"enum","enums":["invalid_url_website_inaccessible_geoblocked"]},{"dataType":"enum","enums":["invalid_url_website_inaccessible_password_protected"]},{"dataType":"enum","enums":["invalid_url_website_incomplete"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_cancellation_policy"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_customer_service_details"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_legal_restrictions"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_refund_policy"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_return_policy"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_terms_and_conditions"]},{"dataType":"enum","enums":["invalid_url_website_incomplete_under_construction"]},{"dataType":"enum","enums":["invalid_url_website_other"]},{"dataType":"enum","enums":["invalid_value_other"]},{"dataType":"enum","enums":["verification_directors_mismatch"]},{"dataType":"enum","enums":["verification_document_address_mismatch"]},{"dataType":"enum","enums":["verification_document_address_missing"]},{"dataType":"enum","enums":["verification_document_corrupt"]},{"dataType":"enum","enums":["verification_document_country_not_supported"]},{"dataType":"enum","enums":["verification_document_directors_mismatch"]},{"dataType":"enum","enums":["verification_document_dob_mismatch"]},{"dataType":"enum","enums":["verification_document_duplicate_type"]},{"dataType":"enum","enums":["verification_document_expired"]},{"dataType":"enum","enums":["verification_document_failed_copy"]},{"dataType":"enum","enums":["verification_document_failed_greyscale"]},{"dataType":"enum","enums":["verification_document_failed_other"]},{"dataType":"enum","enums":["verification_document_failed_test_mode"]},{"dataType":"enum","enums":["verification_document_fraudulent"]},{"dataType":"enum","enums":["verification_document_id_number_mismatch"]},{"dataType":"enum","enums":["verification_document_id_number_missing"]},{"dataType":"enum","enums":["verification_document_incomplete"]},{"dataType":"enum","enums":["verification_document_invalid"]},{"dataType":"enum","enums":["verification_document_issue_or_expiry_date_missing"]},{"dataType":"enum","enums":["verification_document_manipulated"]},{"dataType":"enum","enums":["verification_document_missing_back"]},{"dataType":"enum","enums":["verification_document_missing_front"]},{"dataType":"enum","enums":["verification_document_name_mismatch"]},{"dataType":"enum","enums":["verification_document_name_missing"]},{"dataType":"enum","enums":["verification_document_nationality_mismatch"]},{"dataType":"enum","enums":["verification_document_not_readable"]},{"dataType":"enum","enums":["verification_document_not_signed"]},{"dataType":"enum","enums":["verification_document_not_uploaded"]},{"dataType":"enum","enums":["verification_document_photo_mismatch"]},{"dataType":"enum","enums":["verification_document_too_large"]},{"dataType":"enum","enums":["verification_document_type_not_supported"]},{"dataType":"enum","enums":["verification_extraneous_directors"]},{"dataType":"enum","enums":["verification_failed_address_match"]},{"dataType":"enum","enums":["verification_failed_business_iec_number"]},{"dataType":"enum","enums":["verification_failed_document_match"]},{"dataType":"enum","enums":["verification_failed_id_number_match"]},{"dataType":"enum","enums":["verification_failed_keyed_identity"]},{"dataType":"enum","enums":["verification_failed_keyed_match"]},{"dataType":"enum","enums":["verification_failed_name_match"]},{"dataType":"enum","enums":["verification_failed_other"]},{"dataType":"enum","enums":["verification_failed_representative_authority"]},{"dataType":"enum","enums":["verification_failed_residential_address"]},{"dataType":"enum","enums":["verification_failed_tax_id_match"]},{"dataType":"enum","enums":["verification_failed_tax_id_not_issued"]},{"dataType":"enum","enums":["verification_missing_directors"]},{"dataType":"enum","enums":["verification_missing_executives"]},{"dataType":"enum","enums":["verification_missing_owners"]},{"dataType":"enum","enums":["verification_requires_additional_memorandum_of_associations"]},{"dataType":"enum","enums":["verification_requires_additional_proof_of_registration"]},{"dataType":"enum","enums":["verification_supportability"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Requirements.Error": {
        "dataType": "refObject",
        "properties": {
            "code": {"ref":"stripe.Stripe.Account.Requirements.Error.Code","required":true},
            "reason": {"dataType":"string","required":true},
            "requirement": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Requirements": {
        "dataType": "refObject",
        "properties": {
            "alternatives": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Account.Requirements.Alternative"}},{"dataType":"enum","enums":[null]}],"required":true},
            "current_deadline": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "currently_due": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
            "disabled_reason": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "errors": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Account.Requirements.Error"}},{"dataType":"enum","enums":[null]}],"required":true},
            "eventually_due": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
            "past_due": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
            "pending_verification": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"string"}},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Settings.BacsDebitPayments": {
        "dataType": "refObject",
        "properties": {
            "display_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "service_user_number": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Settings.Branding": {
        "dataType": "refObject",
        "properties": {
            "icon": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "logo": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.File"},{"dataType":"enum","enums":[null]}],"required":true},
            "primary_color": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "secondary_color": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Settings.CardIssuing.TosAcceptance": {
        "dataType": "refObject",
        "properties": {
            "date": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "ip": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "user_agent": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Settings.CardIssuing": {
        "dataType": "refObject",
        "properties": {
            "tos_acceptance": {"ref":"stripe.Stripe.Account.Settings.CardIssuing.TosAcceptance"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Settings.CardPayments.DeclineOn": {
        "dataType": "refObject",
        "properties": {
            "avs_failure": {"dataType":"boolean","required":true},
            "cvc_failure": {"dataType":"boolean","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Settings.CardPayments": {
        "dataType": "refObject",
        "properties": {
            "decline_on": {"ref":"stripe.Stripe.Account.Settings.CardPayments.DeclineOn"},
            "statement_descriptor_prefix": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "statement_descriptor_prefix_kana": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "statement_descriptor_prefix_kanji": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Settings.Dashboard": {
        "dataType": "refObject",
        "properties": {
            "display_name": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "timezone": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Settings.Invoices": {
        "dataType": "refObject",
        "properties": {
            "default_account_tax_ids": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.TaxId"}]}},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Settings.Payments": {
        "dataType": "refObject",
        "properties": {
            "statement_descriptor": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "statement_descriptor_kana": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "statement_descriptor_kanji": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "statement_descriptor_prefix_kana": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "statement_descriptor_prefix_kanji": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Settings.Payouts.Schedule": {
        "dataType": "refObject",
        "properties": {
            "delay_days": {"dataType":"double","required":true},
            "interval": {"dataType":"string","required":true},
            "monthly_anchor": {"dataType":"double"},
            "weekly_anchor": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Settings.Payouts": {
        "dataType": "refObject",
        "properties": {
            "debit_negative_balances": {"dataType":"boolean","required":true},
            "schedule": {"ref":"stripe.Stripe.Account.Settings.Payouts.Schedule","required":true},
            "statement_descriptor": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Settings.SepaDebitPayments": {
        "dataType": "refObject",
        "properties": {
            "creditor_id": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Settings.Treasury.TosAcceptance": {
        "dataType": "refObject",
        "properties": {
            "date": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "ip": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "user_agent": {"dataType":"string"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Settings.Treasury": {
        "dataType": "refObject",
        "properties": {
            "tos_acceptance": {"ref":"stripe.Stripe.Account.Settings.Treasury.TosAcceptance"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Settings": {
        "dataType": "refObject",
        "properties": {
            "bacs_debit_payments": {"ref":"stripe.Stripe.Account.Settings.BacsDebitPayments"},
            "branding": {"ref":"stripe.Stripe.Account.Settings.Branding","required":true},
            "card_issuing": {"ref":"stripe.Stripe.Account.Settings.CardIssuing"},
            "card_payments": {"ref":"stripe.Stripe.Account.Settings.CardPayments","required":true},
            "dashboard": {"ref":"stripe.Stripe.Account.Settings.Dashboard","required":true},
            "invoices": {"ref":"stripe.Stripe.Account.Settings.Invoices"},
            "payments": {"ref":"stripe.Stripe.Account.Settings.Payments","required":true},
            "payouts": {"ref":"stripe.Stripe.Account.Settings.Payouts"},
            "sepa_debit_payments": {"ref":"stripe.Stripe.Account.Settings.SepaDebitPayments"},
            "treasury": {"ref":"stripe.Stripe.Account.Settings.Treasury"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.TosAcceptance": {
        "dataType": "refObject",
        "properties": {
            "date": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}]},
            "ip": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
            "service_agreement": {"dataType":"string"},
            "user_agent": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}]},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Account.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["custom"]},{"dataType":"enum","enums":["express"]},{"dataType":"enum","enums":["none"]},{"dataType":"enum","enums":["standard"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.AutomaticTax.Liability.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["account"]},{"dataType":"enum","enums":["self"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.AutomaticTax.Liability": {
        "dataType": "refObject",
        "properties": {
            "account": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"}]},
            "type": {"ref":"stripe.Stripe.Subscription.AutomaticTax.Liability.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.AutomaticTax": {
        "dataType": "refObject",
        "properties": {
            "enabled": {"dataType":"boolean","required":true},
            "liability": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Subscription.AutomaticTax.Liability"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.BillingCycleAnchorConfig": {
        "dataType": "refObject",
        "properties": {
            "day_of_month": {"dataType":"double","required":true},
            "hour": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "minute": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "month": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "second": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.BillingThresholds": {
        "dataType": "refObject",
        "properties": {
            "amount_gte": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "reset_billing_cycle_anchor": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.CancellationDetails.Feedback": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["customer_service"]},{"dataType":"enum","enums":["low_quality"]},{"dataType":"enum","enums":["missing_features"]},{"dataType":"enum","enums":["other"]},{"dataType":"enum","enums":["switched_service"]},{"dataType":"enum","enums":["too_complex"]},{"dataType":"enum","enums":["too_expensive"]},{"dataType":"enum","enums":["unused"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.CancellationDetails.Reason": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["cancellation_requested"]},{"dataType":"enum","enums":["payment_disputed"]},{"dataType":"enum","enums":["payment_failed"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.CancellationDetails": {
        "dataType": "refObject",
        "properties": {
            "comment": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "feedback": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Subscription.CancellationDetails.Feedback"},{"dataType":"enum","enums":[null]}],"required":true},
            "reason": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Subscription.CancellationDetails.Reason"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.CollectionMethod": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["charge_automatically"]},{"dataType":"enum","enums":["send_invoice"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.InvoiceSettings.Issuer.Type": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["account"]},{"dataType":"enum","enums":["self"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.InvoiceSettings.Issuer": {
        "dataType": "refObject",
        "properties": {
            "account": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"}]},
            "type": {"ref":"stripe.Stripe.Subscription.InvoiceSettings.Issuer.Type","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.InvoiceSettings": {
        "dataType": "refObject",
        "properties": {
            "account_tax_ids": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.TaxId"},{"ref":"stripe.Stripe.DeletedTaxId"}]}},{"dataType":"enum","enums":[null]}],"required":true},
            "issuer": {"ref":"stripe.Stripe.Subscription.InvoiceSettings.Issuer","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.ApiList_stripe.Stripe.SubscriptionItem_": {
        "dataType": "refObject",
        "properties": {
            "object": {"dataType":"enum","enums":["list"],"required":true},
            "data": {"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.SubscriptionItem"},"required":true},
            "has_more": {"dataType":"boolean","required":true},
            "url": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PauseCollection.Behavior": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["keep_as_draft"]},{"dataType":"enum","enums":["mark_uncollectible"]},{"dataType":"enum","enums":["void"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PauseCollection": {
        "dataType": "refObject",
        "properties": {
            "behavior": {"ref":"stripe.Stripe.Subscription.PauseCollection.Behavior","required":true},
            "resumes_at": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.AcssDebit.MandateOptions.TransactionType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["business"]},{"dataType":"enum","enums":["personal"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.AcssDebit.MandateOptions": {
        "dataType": "refObject",
        "properties": {
            "transaction_type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.AcssDebit.MandateOptions.TransactionType"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.AcssDebit.VerificationMethod": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["automatic"]},{"dataType":"enum","enums":["instant"]},{"dataType":"enum","enums":["microdeposits"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.AcssDebit": {
        "dataType": "refObject",
        "properties": {
            "mandate_options": {"ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.AcssDebit.MandateOptions"},
            "verification_method": {"ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.AcssDebit.VerificationMethod"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.Bancontact.PreferredLanguage": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["de"]},{"dataType":"enum","enums":["en"]},{"dataType":"enum","enums":["fr"]},{"dataType":"enum","enums":["nl"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.Bancontact": {
        "dataType": "refObject",
        "properties": {
            "preferred_language": {"ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.Bancontact.PreferredLanguage","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.Card.MandateOptions.AmountType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["fixed"]},{"dataType":"enum","enums":["maximum"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.Card.MandateOptions": {
        "dataType": "refObject",
        "properties": {
            "amount": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "amount_type": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.Card.MandateOptions.AmountType"},{"dataType":"enum","enums":[null]}],"required":true},
            "description": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.Card.Network": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["amex"]},{"dataType":"enum","enums":["cartes_bancaires"]},{"dataType":"enum","enums":["diners"]},{"dataType":"enum","enums":["discover"]},{"dataType":"enum","enums":["eftpos_au"]},{"dataType":"enum","enums":["girocard"]},{"dataType":"enum","enums":["interac"]},{"dataType":"enum","enums":["jcb"]},{"dataType":"enum","enums":["mastercard"]},{"dataType":"enum","enums":["unionpay"]},{"dataType":"enum","enums":["unknown"]},{"dataType":"enum","enums":["visa"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.Card.RequestThreeDSecure": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["any"]},{"dataType":"enum","enums":["automatic"]},{"dataType":"enum","enums":["challenge"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.Card": {
        "dataType": "refObject",
        "properties": {
            "mandate_options": {"ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.Card.MandateOptions"},
            "network": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.Card.Network"},{"dataType":"enum","enums":[null]}],"required":true},
            "request_three_d_secure": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.Card.RequestThreeDSecure"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.CustomerBalance.BankTransfer.EuBankTransfer.Country": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["BE"]},{"dataType":"enum","enums":["DE"]},{"dataType":"enum","enums":["ES"]},{"dataType":"enum","enums":["FR"]},{"dataType":"enum","enums":["IE"]},{"dataType":"enum","enums":["NL"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.CustomerBalance.BankTransfer.EuBankTransfer": {
        "dataType": "refObject",
        "properties": {
            "country": {"ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.CustomerBalance.BankTransfer.EuBankTransfer.Country","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.CustomerBalance.BankTransfer": {
        "dataType": "refObject",
        "properties": {
            "eu_bank_transfer": {"ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.CustomerBalance.BankTransfer.EuBankTransfer"},
            "type": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.CustomerBalance": {
        "dataType": "refObject",
        "properties": {
            "bank_transfer": {"ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.CustomerBalance.BankTransfer"},
            "funding_type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["bank_transfer"]},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.Konbini": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.SepaDebit": {
        "dataType": "refObject",
        "properties": {
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.UsBankAccount.FinancialConnections.Filters.AccountSubcategory": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["checking"]},{"dataType":"enum","enums":["savings"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.UsBankAccount.FinancialConnections.Filters": {
        "dataType": "refObject",
        "properties": {
            "account_subcategories": {"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.UsBankAccount.FinancialConnections.Filters.AccountSubcategory"}},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.UsBankAccount.FinancialConnections.Permission": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["balances"]},{"dataType":"enum","enums":["ownership"]},{"dataType":"enum","enums":["payment_method"]},{"dataType":"enum","enums":["transactions"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.UsBankAccount.FinancialConnections.Prefetch": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["balances"]},{"dataType":"enum","enums":["ownership"]},{"dataType":"enum","enums":["transactions"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.UsBankAccount.FinancialConnections": {
        "dataType": "refObject",
        "properties": {
            "filters": {"ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.UsBankAccount.FinancialConnections.Filters"},
            "permissions": {"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.UsBankAccount.FinancialConnections.Permission"}},
            "prefetch": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.UsBankAccount.FinancialConnections.Prefetch"}},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.UsBankAccount.VerificationMethod": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["automatic"]},{"dataType":"enum","enums":["instant"]},{"dataType":"enum","enums":["microdeposits"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.UsBankAccount": {
        "dataType": "refObject",
        "properties": {
            "financial_connections": {"ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.UsBankAccount.FinancialConnections"},
            "verification_method": {"ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.UsBankAccount.VerificationMethod"},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions": {
        "dataType": "refObject",
        "properties": {
            "acss_debit": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.AcssDebit"},{"dataType":"enum","enums":[null]}],"required":true},
            "bancontact": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.Bancontact"},{"dataType":"enum","enums":[null]}],"required":true},
            "card": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.Card"},{"dataType":"enum","enums":[null]}],"required":true},
            "customer_balance": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.CustomerBalance"},{"dataType":"enum","enums":[null]}],"required":true},
            "konbini": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.Konbini"},{"dataType":"enum","enums":[null]}],"required":true},
            "sepa_debit": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.SepaDebit"},{"dataType":"enum","enums":[null]}],"required":true},
            "us_bank_account": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions.UsBankAccount"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.PaymentMethodType": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["ach_credit_transfer"]},{"dataType":"enum","enums":["ach_debit"]},{"dataType":"enum","enums":["acss_debit"]},{"dataType":"enum","enums":["amazon_pay"]},{"dataType":"enum","enums":["au_becs_debit"]},{"dataType":"enum","enums":["bacs_debit"]},{"dataType":"enum","enums":["bancontact"]},{"dataType":"enum","enums":["boleto"]},{"dataType":"enum","enums":["card"]},{"dataType":"enum","enums":["cashapp"]},{"dataType":"enum","enums":["customer_balance"]},{"dataType":"enum","enums":["eps"]},{"dataType":"enum","enums":["fpx"]},{"dataType":"enum","enums":["giropay"]},{"dataType":"enum","enums":["grabpay"]},{"dataType":"enum","enums":["ideal"]},{"dataType":"enum","enums":["konbini"]},{"dataType":"enum","enums":["link"]},{"dataType":"enum","enums":["multibanco"]},{"dataType":"enum","enums":["p24"]},{"dataType":"enum","enums":["paynow"]},{"dataType":"enum","enums":["paypal"]},{"dataType":"enum","enums":["promptpay"]},{"dataType":"enum","enums":["revolut_pay"]},{"dataType":"enum","enums":["sepa_credit_transfer"]},{"dataType":"enum","enums":["sepa_debit"]},{"dataType":"enum","enums":["sofort"]},{"dataType":"enum","enums":["swish"]},{"dataType":"enum","enums":["us_bank_account"]},{"dataType":"enum","enums":["wechat_pay"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings.SaveDefaultPaymentMethod": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["off"]},{"dataType":"enum","enums":["on_subscription"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PaymentSettings": {
        "dataType": "refObject",
        "properties": {
            "payment_method_options": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodOptions"},{"dataType":"enum","enums":[null]}],"required":true},
            "payment_method_types": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refAlias","ref":"stripe.Stripe.Subscription.PaymentSettings.PaymentMethodType"}},{"dataType":"enum","enums":[null]}],"required":true},
            "save_default_payment_method": {"dataType":"union","subSchemas":[{"ref":"stripe.Stripe.Subscription.PaymentSettings.SaveDefaultPaymentMethod"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PendingInvoiceItemInterval.Interval": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["day"]},{"dataType":"enum","enums":["month"]},{"dataType":"enum","enums":["week"]},{"dataType":"enum","enums":["year"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PendingInvoiceItemInterval": {
        "dataType": "refObject",
        "properties": {
            "interval": {"ref":"stripe.Stripe.Subscription.PendingInvoiceItemInterval.Interval","required":true},
            "interval_count": {"dataType":"double","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.PendingUpdate": {
        "dataType": "refObject",
        "properties": {
            "billing_cycle_anchor": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "expires_at": {"dataType":"double","required":true},
            "subscription_items": {"dataType":"union","subSchemas":[{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.SubscriptionItem"}},{"dataType":"enum","enums":[null]}],"required":true},
            "trial_end": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "trial_from_plan": {"dataType":"union","subSchemas":[{"dataType":"boolean"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.Status": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["active"]},{"dataType":"enum","enums":["canceled"]},{"dataType":"enum","enums":["incomplete"]},{"dataType":"enum","enums":["incomplete_expired"]},{"dataType":"enum","enums":["past_due"]},{"dataType":"enum","enums":["paused"]},{"dataType":"enum","enums":["trialing"]},{"dataType":"enum","enums":["unpaid"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.TransferData": {
        "dataType": "refObject",
        "properties": {
            "amount_percent": {"dataType":"union","subSchemas":[{"dataType":"double"},{"dataType":"enum","enums":[null]}],"required":true},
            "destination": {"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.TrialSettings.EndBehavior.MissingPaymentMethod": {
        "dataType": "refAlias",
        "type": {"dataType":"union","subSchemas":[{"dataType":"enum","enums":["cancel"]},{"dataType":"enum","enums":["create_invoice"]},{"dataType":"enum","enums":["pause"]}],"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.TrialSettings.EndBehavior": {
        "dataType": "refObject",
        "properties": {
            "missing_payment_method": {"ref":"stripe.Stripe.Subscription.TrialSettings.EndBehavior.MissingPaymentMethod","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.Subscription.TrialSettings": {
        "dataType": "refObject",
        "properties": {
            "end_behavior": {"ref":"stripe.Stripe.Subscription.TrialSettings.EndBehavior","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Record_string.stripe.Stripe.Discount_": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{},"additionalProperties":{"ref":"stripe.Stripe.Discount"},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Pick_stripe.Stripe.Invoice.Exclude_keyofstripe.Stripe.Invoice.id__": {
        "dataType": "refAlias",
        "type": {"dataType":"nestedObjectLiteral","nestedProperties":{"number":{"dataType":"string","required":true},"object":{"dataType":"enum","enums":["invoice"],"required":true},"status":{"ref":"stripe.Stripe.Invoice.Status","required":true},"application":{"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Application"},{"ref":"stripe.Stripe.DeletedApplication"}],"required":true},"subscription":{"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Subscription"}],"required":true},"customer":{"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Customer"},{"ref":"stripe.Stripe.DeletedCustomer"}],"required":true},"deleted":{"dataType":"void"},"issuer":{"ref":"stripe.Stripe.Invoice.Issuer","required":true},"charge":{"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Charge"}],"required":true},"paid":{"dataType":"boolean","required":true},"account_country":{"dataType":"string","required":true},"account_name":{"dataType":"string","required":true},"account_tax_ids":{"dataType":"array","array":{"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.TaxId"},{"ref":"stripe.Stripe.DeletedTaxId"}]},"required":true},"amount_due":{"dataType":"double","required":true},"amount_paid":{"dataType":"double","required":true},"amount_remaining":{"dataType":"double","required":true},"amount_shipping":{"dataType":"double","required":true},"application_fee_amount":{"dataType":"double","required":true},"attempt_count":{"dataType":"double","required":true},"attempted":{"dataType":"boolean","required":true},"auto_advance":{"dataType":"boolean"},"automatic_tax":{"ref":"stripe.Stripe.Invoice.AutomaticTax","required":true},"automatically_finalizes_at":{"dataType":"double","required":true},"billing_reason":{"ref":"stripe.Stripe.Invoice.BillingReason","required":true},"collection_method":{"ref":"stripe.Stripe.Invoice.CollectionMethod","required":true},"created":{"dataType":"double","required":true},"currency":{"dataType":"string","required":true},"custom_fields":{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Invoice.CustomField"},"required":true},"customer_address":{"ref":"stripe.Stripe.Address","required":true},"customer_email":{"dataType":"string","required":true},"customer_name":{"dataType":"string","required":true},"customer_phone":{"dataType":"string","required":true},"customer_shipping":{"ref":"stripe.Stripe.Invoice.CustomerShipping","required":true},"customer_tax_exempt":{"ref":"stripe.Stripe.Invoice.CustomerTaxExempt","required":true},"customer_tax_ids":{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Invoice.CustomerTaxId"}},"default_payment_method":{"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PaymentMethod"}],"required":true},"default_source":{"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.CustomerSource"}],"required":true},"default_tax_rates":{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.TaxRate"},"required":true},"description":{"dataType":"string","required":true},"discount":{"ref":"stripe.Stripe.Discount","required":true},"discounts":{"dataType":"array","array":{"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Discount"},{"ref":"stripe.Stripe.DeletedDiscount"}]},"required":true},"due_date":{"dataType":"double","required":true},"effective_at":{"dataType":"double","required":true},"ending_balance":{"dataType":"double","required":true},"footer":{"dataType":"string","required":true},"from_invoice":{"ref":"stripe.Stripe.Invoice.FromInvoice","required":true},"hosted_invoice_url":{"dataType":"string"},"invoice_pdf":{"dataType":"string"},"last_finalization_error":{"ref":"stripe.Stripe.Invoice.LastFinalizationError","required":true},"latest_revision":{"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Invoice"}],"required":true},"lines":{"ref":"stripe.Stripe.ApiList_stripe.Stripe.InvoiceLineItem_","required":true},"livemode":{"dataType":"boolean","required":true},"metadata":{"ref":"stripe.Stripe.Metadata","required":true},"next_payment_attempt":{"dataType":"double","required":true},"on_behalf_of":{"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Account"}],"required":true},"paid_out_of_band":{"dataType":"boolean","required":true},"payment_intent":{"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.PaymentIntent"}],"required":true},"payment_settings":{"ref":"stripe.Stripe.Invoice.PaymentSettings","required":true},"period_end":{"dataType":"double","required":true},"period_start":{"dataType":"double","required":true},"post_payment_credit_notes_amount":{"dataType":"double","required":true},"pre_payment_credit_notes_amount":{"dataType":"double","required":true},"quote":{"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.Quote"}],"required":true},"receipt_number":{"dataType":"string","required":true},"rendering":{"ref":"stripe.Stripe.Invoice.Rendering","required":true},"shipping_cost":{"ref":"stripe.Stripe.Invoice.ShippingCost","required":true},"shipping_details":{"ref":"stripe.Stripe.Invoice.ShippingDetails","required":true},"starting_balance":{"dataType":"double","required":true},"statement_descriptor":{"dataType":"string","required":true},"status_transitions":{"ref":"stripe.Stripe.Invoice.StatusTransitions","required":true},"subscription_details":{"ref":"stripe.Stripe.Invoice.SubscriptionDetails","required":true},"subscription_proration_date":{"dataType":"double"},"subtotal":{"dataType":"double","required":true},"subtotal_excluding_tax":{"dataType":"double","required":true},"tax":{"dataType":"double","required":true},"test_clock":{"dataType":"union","subSchemas":[{"dataType":"string"},{"ref":"stripe.Stripe.TestHelpers.TestClock"}],"required":true},"threshold_reason":{"ref":"stripe.Stripe.Invoice.ThresholdReason"},"total":{"dataType":"double","required":true},"total_discount_amounts":{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Invoice.TotalDiscountAmount"},"required":true},"total_excluding_tax":{"dataType":"double","required":true},"total_tax_amounts":{"dataType":"array","array":{"dataType":"refObject","ref":"stripe.Stripe.Invoice.TotalTaxAmount"},"required":true},"transfer_data":{"ref":"stripe.Stripe.Invoice.TransferData","required":true},"webhooks_delivered_at":{"dataType":"double","required":true}},"validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "Omit_stripe.Stripe.Invoice.id_": {
        "dataType": "refAlias",
        "type": {"ref":"Pick_stripe.Stripe.Invoice.Exclude_keyofstripe.Stripe.Invoice.id__","validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "stripe.Stripe.UpcomingInvoice": {
        "dataType": "refAlias",
        "type": {"ref":"Omit_stripe.Stripe.Invoice.id_","validators":{}},
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ConvertToWavResponse": {
        "dataType": "refObject",
        "properties": {
            "data": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
            "error": {"dataType":"union","subSchemas":[{"dataType":"string"},{"dataType":"enum","enums":[null]}],"required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "ConvertToWavRequestBody": {
        "dataType": "refObject",
        "properties": {
            "audioData": {"dataType":"string","required":true},
        },
        "additionalProperties": false,
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
};
const templateService = new ExpressTemplateService(models, {"noImplicitAdditionalProperties":"throw-on-extras","bodyCoercion":true});

// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa




export function RegisterRoutes(app: Router) {

    // ###########################################################################################################
    //  NOTE: If you do not see routes for all of your controllers in this file, then you might not have informed tsoa of where to look
    //      Please look into the "controllerPathGlobs" config option described in the readme: https://github.com/lukeautry/tsoa
    // ###########################################################################################################


    
        app.post('/v1/user-feedback',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(UserFeedbackController)),
            ...(fetchMiddlewares<RequestHandler>(UserFeedbackController.prototype.postUserFeedback)),

            async function UserFeedbackController_postUserFeedback(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    body: {"in":"body","name":"body","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"tag":{"dataType":"string","required":true},"feedback":{"dataType":"string","required":true}}},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new UserFeedbackController();

              await templateService.apiHandler({
                methodName: 'postUserFeedback',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/evaluator',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController)),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController.prototype.createEvaluator)),

            async function EvaluatorController_createEvaluator(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"ref":"CreateEvaluatorParams"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new EvaluatorController();

              await templateService.apiHandler({
                methodName: 'createEvaluator',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/evaluator/:evaluatorId',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController)),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController.prototype.getEvaluator)),

            async function EvaluatorController_getEvaluator(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    evaluatorId: {"in":"path","name":"evaluatorId","required":true,"dataType":"string"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new EvaluatorController();

              await templateService.apiHandler({
                methodName: 'getEvaluator',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/evaluator/query',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController)),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController.prototype.queryEvaluators)),

            async function EvaluatorController_queryEvaluators(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{}},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new EvaluatorController();

              await templateService.apiHandler({
                methodName: 'queryEvaluators',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.put('/v1/evaluator/:evaluatorId',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController)),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController.prototype.updateEvaluator)),

            async function EvaluatorController_updateEvaluator(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    evaluatorId: {"in":"path","name":"evaluatorId","required":true,"dataType":"string"},
                    requestBody: {"in":"body","name":"requestBody","required":true,"ref":"UpdateEvaluatorParams"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new EvaluatorController();

              await templateService.apiHandler({
                methodName: 'updateEvaluator',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.delete('/v1/evaluator/:evaluatorId',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController)),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController.prototype.deleteEvaluator)),

            async function EvaluatorController_deleteEvaluator(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    evaluatorId: {"in":"path","name":"evaluatorId","required":true,"dataType":"string"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new EvaluatorController();

              await templateService.apiHandler({
                methodName: 'deleteEvaluator',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/evaluator/:evaluatorId/experiments',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController)),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController.prototype.getExperimentsForEvaluator)),

            async function EvaluatorController_getExperimentsForEvaluator(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    evaluatorId: {"in":"path","name":"evaluatorId","required":true,"dataType":"string"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new EvaluatorController();

              await templateService.apiHandler({
                methodName: 'getExperimentsForEvaluator',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/evaluator/:evaluatorId/onlineEvaluators',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController)),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController.prototype.getOnlineEvaluators)),

            async function EvaluatorController_getOnlineEvaluators(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    evaluatorId: {"in":"path","name":"evaluatorId","required":true,"dataType":"string"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new EvaluatorController();

              await templateService.apiHandler({
                methodName: 'getOnlineEvaluators',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/evaluator/:evaluatorId/onlineEvaluators',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController)),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController.prototype.createOnlineEvaluator)),

            async function EvaluatorController_createOnlineEvaluator(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    evaluatorId: {"in":"path","name":"evaluatorId","required":true,"dataType":"string"},
                    requestBody: {"in":"body","name":"requestBody","required":true,"ref":"CreateOnlineEvaluatorParams"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new EvaluatorController();

              await templateService.apiHandler({
                methodName: 'createOnlineEvaluator',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.delete('/v1/evaluator/:evaluatorId/onlineEvaluators/:onlineEvaluatorId',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController)),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController.prototype.deleteOnlineEvaluator)),

            async function EvaluatorController_deleteOnlineEvaluator(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    evaluatorId: {"in":"path","name":"evaluatorId","required":true,"dataType":"string"},
                    onlineEvaluatorId: {"in":"path","name":"onlineEvaluatorId","required":true,"dataType":"string"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new EvaluatorController();

              await templateService.apiHandler({
                methodName: 'deleteOnlineEvaluator',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/evaluator/python/test',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController)),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController.prototype.testPythonEvaluator)),

            async function EvaluatorController_testPythonEvaluator(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"testInput":{"ref":"TestInput","required":true},"code":{"dataType":"string","required":true}}},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new EvaluatorController();

              await templateService.apiHandler({
                methodName: 'testPythonEvaluator',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/evaluator/llm/test',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController)),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController.prototype.testLLMEvaluator)),

            async function EvaluatorController_testLLMEvaluator(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"evaluatorName":{"dataType":"string","required":true},"testInput":{"ref":"TestInput","required":true},"evaluatorConfig":{"ref":"EvaluatorConfig","required":true}}},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new EvaluatorController();

              await templateService.apiHandler({
                methodName: 'testLLMEvaluator',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/evaluator/lastmile/test',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController)),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController.prototype.testLastMileEvaluator)),

            async function EvaluatorController_testLastMileEvaluator(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"testInput":{"ref":"TestInput","required":true},"config":{"ref":"LastMileConfigForm","required":true}}},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new EvaluatorController();

              await templateService.apiHandler({
                methodName: 'testLastMileEvaluator',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/evaluator/:evaluatorId/stats',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController)),
            ...(fetchMiddlewares<RequestHandler>(EvaluatorController.prototype.getEvaluatorStats)),

            async function EvaluatorController_getEvaluatorStats(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    evaluatorId: {"in":"path","name":"evaluatorId","required":true,"dataType":"string"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new EvaluatorController();

              await templateService.apiHandler({
                methodName: 'getEvaluatorStats',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v2/experiment/create/empty',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller)),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller.prototype.createEmptyExperiment)),

            async function ExperimentV2Controller_createEmptyExperiment(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new ExperimentV2Controller();

              await templateService.apiHandler({
                methodName: 'createEmptyExperiment',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v2/experiment/create/from-request/:requestId',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller)),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller.prototype.createExperimentFromRequest)),

            async function ExperimentV2Controller_createExperimentFromRequest(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestId: {"in":"path","name":"requestId","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new ExperimentV2Controller();

              await templateService.apiHandler({
                methodName: 'createExperimentFromRequest',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v2/experiment/new',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller)),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller.prototype.createNewExperiment)),

            async function ExperimentV2Controller_createNewExperiment(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"originalPromptVersion":{"dataType":"string","required":true},"name":{"dataType":"string","required":true}}},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new ExperimentV2Controller();

              await templateService.apiHandler({
                methodName: 'createNewExperiment',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v2/experiment',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller)),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller.prototype.getExperiments)),

            async function ExperimentV2Controller_getExperiments(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new ExperimentV2Controller();

              await templateService.apiHandler({
                methodName: 'getExperiments',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.delete('/v2/experiment/:experimentId',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller)),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller.prototype.deleteExperiment)),

            async function ExperimentV2Controller_deleteExperiment(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    experimentId: {"in":"path","name":"experimentId","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new ExperimentV2Controller();

              await templateService.apiHandler({
                methodName: 'deleteExperiment',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v2/experiment/:experimentId',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller)),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller.prototype.getExperimentById)),

            async function ExperimentV2Controller_getExperimentById(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    experimentId: {"in":"path","name":"experimentId","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new ExperimentV2Controller();

              await templateService.apiHandler({
                methodName: 'getExperimentById',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v2/experiment/:experimentId/prompt-version',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller)),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller.prototype.createNewPromptVersionForExperiment)),

            async function ExperimentV2Controller_createNewPromptVersionForExperiment(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    experimentId: {"in":"path","name":"experimentId","required":true,"dataType":"string"},
                    requestBody: {"in":"body","name":"requestBody","required":true,"ref":"CreateNewPromptVersionForExperimentParams"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new ExperimentV2Controller();

              await templateService.apiHandler({
                methodName: 'createNewPromptVersionForExperiment',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.delete('/v2/experiment/:experimentId/prompt-version/:promptVersionId',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller)),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller.prototype.deletePromptVersion)),

            async function ExperimentV2Controller_deletePromptVersion(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    experimentId: {"in":"path","name":"experimentId","required":true,"dataType":"string"},
                    promptVersionId: {"in":"path","name":"promptVersionId","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new ExperimentV2Controller();

              await templateService.apiHandler({
                methodName: 'deletePromptVersion',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v2/experiment/:experimentId/prompt-versions',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller)),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller.prototype.getPromptVersionsForExperiment)),

            async function ExperimentV2Controller_getPromptVersionsForExperiment(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    experimentId: {"in":"path","name":"experimentId","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new ExperimentV2Controller();

              await templateService.apiHandler({
                methodName: 'getPromptVersionsForExperiment',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v2/experiment/:experimentId/input-keys',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller)),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller.prototype.getInputKeysForExperiment)),

            async function ExperimentV2Controller_getInputKeysForExperiment(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    experimentId: {"in":"path","name":"experimentId","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new ExperimentV2Controller();

              await templateService.apiHandler({
                methodName: 'getInputKeysForExperiment',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v2/experiment/:experimentId/add-manual-row',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller)),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller.prototype.addManualRowToExperiment)),

            async function ExperimentV2Controller_addManualRowToExperiment(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    experimentId: {"in":"path","name":"experimentId","required":true,"dataType":"string"},
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"inputs":{"ref":"Record_string.string_","required":true}}},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new ExperimentV2Controller();

              await templateService.apiHandler({
                methodName: 'addManualRowToExperiment',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v2/experiment/:experimentId/add-manual-rows-batch',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller)),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller.prototype.addManualRowsToExperimentBatch)),

            async function ExperimentV2Controller_addManualRowsToExperimentBatch(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    experimentId: {"in":"path","name":"experimentId","required":true,"dataType":"string"},
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"inputs":{"dataType":"array","array":{"dataType":"refAlias","ref":"Record_string.string_"},"required":true}}},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new ExperimentV2Controller();

              await templateService.apiHandler({
                methodName: 'addManualRowsToExperimentBatch',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.delete('/v2/experiment/:experimentId/rows',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller)),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller.prototype.deleteExperimentTableRows)),

            async function ExperimentV2Controller_deleteExperimentTableRows(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    experimentId: {"in":"path","name":"experimentId","required":true,"dataType":"string"},
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"inputRecordIds":{"dataType":"array","array":{"dataType":"string"},"required":true}}},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new ExperimentV2Controller();

              await templateService.apiHandler({
                methodName: 'deleteExperimentTableRows',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v2/experiment/:experimentId/row/insert/batch',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller)),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller.prototype.createExperimentTableRowBatch)),

            async function ExperimentV2Controller_createExperimentTableRowBatch(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    experimentId: {"in":"path","name":"experimentId","required":true,"dataType":"string"},
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"rows":{"dataType":"array","array":{"dataType":"nestedObjectLiteral","nestedProperties":{"autoInputs":{"dataType":"array","array":{"dataType":"any"},"required":true},"inputs":{"ref":"Record_string.string_","required":true},"inputRecordId":{"dataType":"string","required":true}}},"required":true}}},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new ExperimentV2Controller();

              await templateService.apiHandler({
                methodName: 'createExperimentTableRowBatch',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v2/experiment/:experimentId/row/insert/dataset/:datasetId',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller)),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller.prototype.createExperimentTableRowFromDataset)),

            async function ExperimentV2Controller_createExperimentTableRowFromDataset(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    experimentId: {"in":"path","name":"experimentId","required":true,"dataType":"string"},
                    datasetId: {"in":"path","name":"datasetId","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new ExperimentV2Controller();

              await templateService.apiHandler({
                methodName: 'createExperimentTableRowFromDataset',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v2/experiment/:experimentId/row/update',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller)),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller.prototype.updateExperimentTableRow)),

            async function ExperimentV2Controller_updateExperimentTableRow(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    experimentId: {"in":"path","name":"experimentId","required":true,"dataType":"string"},
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"inputs":{"ref":"Record_string.string_","required":true},"inputRecordId":{"dataType":"string","required":true}}},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new ExperimentV2Controller();

              await templateService.apiHandler({
                methodName: 'updateExperimentTableRow',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v2/experiment/:experimentId/run-hypothesis',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller)),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller.prototype.runHypothesis)),

            async function ExperimentV2Controller_runHypothesis(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    experimentId: {"in":"path","name":"experimentId","required":true,"dataType":"string"},
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"inputRecordId":{"dataType":"string","required":true},"promptVersionId":{"dataType":"string","required":true}}},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new ExperimentV2Controller();

              await templateService.apiHandler({
                methodName: 'runHypothesis',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v2/experiment/:experimentId/evaluators',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller)),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller.prototype.getExperimentEvaluators)),

            async function ExperimentV2Controller_getExperimentEvaluators(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    experimentId: {"in":"path","name":"experimentId","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new ExperimentV2Controller();

              await templateService.apiHandler({
                methodName: 'getExperimentEvaluators',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v2/experiment/:experimentId/evaluators',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller)),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller.prototype.createExperimentEvaluator)),

            async function ExperimentV2Controller_createExperimentEvaluator(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    experimentId: {"in":"path","name":"experimentId","required":true,"dataType":"string"},
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"evaluatorId":{"dataType":"string","required":true}}},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new ExperimentV2Controller();

              await templateService.apiHandler({
                methodName: 'createExperimentEvaluator',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.delete('/v2/experiment/:experimentId/evaluators/:evaluatorId',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller)),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller.prototype.deleteExperimentEvaluator)),

            async function ExperimentV2Controller_deleteExperimentEvaluator(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    experimentId: {"in":"path","name":"experimentId","required":true,"dataType":"string"},
                    evaluatorId: {"in":"path","name":"evaluatorId","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new ExperimentV2Controller();

              await templateService.apiHandler({
                methodName: 'deleteExperimentEvaluator',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v2/experiment/:experimentId/evaluators/run',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller)),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller.prototype.runExperimentEvaluators)),

            async function ExperimentV2Controller_runExperimentEvaluators(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    experimentId: {"in":"path","name":"experimentId","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new ExperimentV2Controller();

              await templateService.apiHandler({
                methodName: 'runExperimentEvaluators',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v2/experiment/:experimentId/should-run-evaluators',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller)),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller.prototype.shouldRunEvaluators)),

            async function ExperimentV2Controller_shouldRunEvaluators(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    experimentId: {"in":"path","name":"experimentId","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new ExperimentV2Controller();

              await templateService.apiHandler({
                methodName: 'shouldRunEvaluators',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v2/experiment/:experimentId/:promptVersionId/scores',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller)),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller.prototype.getExperimentPromptVersionScores)),

            async function ExperimentV2Controller_getExperimentPromptVersionScores(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    experimentId: {"in":"path","name":"experimentId","required":true,"dataType":"string"},
                    promptVersionId: {"in":"path","name":"promptVersionId","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new ExperimentV2Controller();

              await templateService.apiHandler({
                methodName: 'getExperimentPromptVersionScores',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v2/experiment/:experimentId/:requestId/:scoreKey',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller)),
            ...(fetchMiddlewares<RequestHandler>(ExperimentV2Controller.prototype.getExperimentScore)),

            async function ExperimentV2Controller_getExperimentScore(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    experimentId: {"in":"path","name":"experimentId","required":true,"dataType":"string"},
                    requestId: {"in":"path","name":"requestId","required":true,"dataType":"string"},
                    scoreKey: {"in":"path","name":"scoreKey","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new ExperimentV2Controller();

              await templateService.apiHandler({
                methodName: 'getExperimentScore',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/request/query',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(RequestController)),
            ...(fetchMiddlewares<RequestHandler>(RequestController.prototype.getRequests)),

            async function RequestController_getRequests(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"ref":"RequestQueryParams"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new RequestController();

              await templateService.apiHandler({
                methodName: 'getRequests',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/request/query-clickhouse',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(RequestController)),
            ...(fetchMiddlewares<RequestHandler>(RequestController.prototype.getRequestsClickhouse)),

            async function RequestController_getRequestsClickhouse(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"ref":"RequestQueryParams"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new RequestController();

              await templateService.apiHandler({
                methodName: 'getRequestsClickhouse',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/request/:requestId',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(RequestController)),
            ...(fetchMiddlewares<RequestHandler>(RequestController.prototype.getRequestById)),

            async function RequestController_getRequestById(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    requestId: {"in":"path","name":"requestId","required":true,"dataType":"string"},
                    includeBody: {"default":false,"in":"query","name":"includeBody","dataType":"boolean"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new RequestController();

              await templateService.apiHandler({
                methodName: 'getRequestById',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/request/query-ids',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(RequestController)),
            ...(fetchMiddlewares<RequestHandler>(RequestController.prototype.getRequestsByIds)),

            async function RequestController_getRequestsByIds(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"requestIds":{"dataType":"array","array":{"dataType":"string"},"required":true}}},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new RequestController();

              await templateService.apiHandler({
                methodName: 'getRequestsByIds',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/request/:requestId/feedback',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(RequestController)),
            ...(fetchMiddlewares<RequestHandler>(RequestController.prototype.feedbackRequest)),

            async function RequestController_feedbackRequest(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"rating":{"dataType":"boolean","required":true}}},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    requestId: {"in":"path","name":"requestId","required":true,"dataType":"string"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new RequestController();

              await templateService.apiHandler({
                methodName: 'feedbackRequest',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.put('/v1/request/:requestId/property',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(RequestController)),
            ...(fetchMiddlewares<RequestHandler>(RequestController.prototype.putProperty)),

            async function RequestController_putProperty(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"value":{"dataType":"string","required":true},"key":{"dataType":"string","required":true}}},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    requestId: {"in":"path","name":"requestId","required":true,"dataType":"string"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new RequestController();

              await templateService.apiHandler({
                methodName: 'putProperty',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/request/:requestId/assets/:assetId',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(RequestController)),
            ...(fetchMiddlewares<RequestHandler>(RequestController.prototype.getRequestAssetById)),

            async function RequestController_getRequestAssetById(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    requestId: {"in":"path","name":"requestId","required":true,"dataType":"string"},
                    assetId: {"in":"path","name":"assetId","required":true,"dataType":"string"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new RequestController();

              await templateService.apiHandler({
                methodName: 'getRequestAssetById',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/request/:requestId/score',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(RequestController)),
            ...(fetchMiddlewares<RequestHandler>(RequestController.prototype.addScores)),

            async function RequestController_addScores(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"ref":"ScoreRequest"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    requestId: {"in":"path","name":"requestId","required":true,"dataType":"string"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new RequestController();

              await templateService.apiHandler({
                methodName: 'addScores',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/prompt/query',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(PromptController)),
            ...(fetchMiddlewares<RequestHandler>(PromptController.prototype.getPrompts)),

            async function PromptController_getPrompts(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"ref":"PromptsQueryParams"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new PromptController();

              await templateService.apiHandler({
                methodName: 'getPrompts',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/prompt/:promptId/query',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(PromptController)),
            ...(fetchMiddlewares<RequestHandler>(PromptController.prototype.getPrompt)),

            async function PromptController_getPrompt(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"ref":"PromptQueryParams"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    promptId: {"in":"path","name":"promptId","required":true,"dataType":"string"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new PromptController();

              await templateService.apiHandler({
                methodName: 'getPrompt',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.delete('/v1/prompt/:promptId',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(PromptController)),
            ...(fetchMiddlewares<RequestHandler>(PromptController.prototype.deletePrompt)),

            async function PromptController_deletePrompt(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    promptId: {"in":"path","name":"promptId","required":true,"dataType":"string"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new PromptController();

              await templateService.apiHandler({
                methodName: 'deletePrompt',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/prompt/create',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(PromptController)),
            ...(fetchMiddlewares<RequestHandler>(PromptController.prototype.createPrompt)),

            async function PromptController_createPrompt(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"metadata":{"ref":"Record_string.any_","required":true},"prompt":{"dataType":"any","required":true},"userDefinedId":{"dataType":"string","required":true}}},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new PromptController();

              await templateService.apiHandler({
                methodName: 'createPrompt',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.patch('/v1/prompt/:promptId/user-defined-id',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(PromptController)),
            ...(fetchMiddlewares<RequestHandler>(PromptController.prototype.updatePromptUserDefinedId)),

            async function PromptController_updatePromptUserDefinedId(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    promptId: {"in":"path","name":"promptId","required":true,"dataType":"string"},
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"userDefinedId":{"dataType":"string","required":true}}},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new PromptController();

              await templateService.apiHandler({
                methodName: 'updatePromptUserDefinedId',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/prompt/version/:promptVersionId/edit-label',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(PromptController)),
            ...(fetchMiddlewares<RequestHandler>(PromptController.prototype.editPromptVersionLabel)),

            async function PromptController_editPromptVersionLabel(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"ref":"PromptEditSubversionLabelParams"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    promptVersionId: {"in":"path","name":"promptVersionId","required":true,"dataType":"string"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new PromptController();

              await templateService.apiHandler({
                methodName: 'editPromptVersionLabel',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/prompt/version/:promptVersionId/edit-template',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(PromptController)),
            ...(fetchMiddlewares<RequestHandler>(PromptController.prototype.editPromptVersionTemplate)),

            async function PromptController_editPromptVersionTemplate(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"ref":"PromptEditSubversionTemplateParams"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    promptVersionId: {"in":"path","name":"promptVersionId","required":true,"dataType":"string"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new PromptController();

              await templateService.apiHandler({
                methodName: 'editPromptVersionTemplate',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/prompt/version/:promptVersionId/subversion-from-ui',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(PromptController)),
            ...(fetchMiddlewares<RequestHandler>(PromptController.prototype.createSubversionFromUi)),

            async function PromptController_createSubversionFromUi(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"ref":"PromptCreateSubversionParams"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    promptVersionId: {"in":"path","name":"promptVersionId","required":true,"dataType":"string"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new PromptController();

              await templateService.apiHandler({
                methodName: 'createSubversionFromUi',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/prompt/version/:promptVersionId/subversion',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(PromptController)),
            ...(fetchMiddlewares<RequestHandler>(PromptController.prototype.createSubversion)),

            async function PromptController_createSubversion(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"ref":"PromptCreateSubversionParams"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    promptVersionId: {"in":"path","name":"promptVersionId","required":true,"dataType":"string"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new PromptController();

              await templateService.apiHandler({
                methodName: 'createSubversion',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/prompt/version/:promptVersionId/promote',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(PromptController)),
            ...(fetchMiddlewares<RequestHandler>(PromptController.prototype.promotePromptVersionToProduction)),

            async function PromptController_promotePromptVersionToProduction(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    promptVersionId: {"in":"path","name":"promptVersionId","required":true,"dataType":"string"},
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"previousProductionVersionId":{"dataType":"string","required":true}}},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new PromptController();

              await templateService.apiHandler({
                methodName: 'promotePromptVersionToProduction',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/prompt/version/:promptVersionId/inputs/query',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(PromptController)),
            ...(fetchMiddlewares<RequestHandler>(PromptController.prototype.getInputs)),

            async function PromptController_getInputs(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"random":{"dataType":"boolean"},"limit":{"dataType":"double","required":true}}},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    promptVersionId: {"in":"path","name":"promptVersionId","required":true,"dataType":"string"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new PromptController();

              await templateService.apiHandler({
                methodName: 'getInputs',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/prompt/:promptId/experiments',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(PromptController)),
            ...(fetchMiddlewares<RequestHandler>(PromptController.prototype.getPromptExperiments)),

            async function PromptController_getPromptExperiments(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    promptId: {"in":"path","name":"promptId","required":true,"dataType":"string"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new PromptController();

              await templateService.apiHandler({
                methodName: 'getPromptExperiments',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/prompt/:promptId/versions/query',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(PromptController)),
            ...(fetchMiddlewares<RequestHandler>(PromptController.prototype.getPromptVersions)),

            async function PromptController_getPromptVersions(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"ref":"PromptVersionsQueryParams"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    promptId: {"in":"path","name":"promptId","required":true,"dataType":"string"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new PromptController();

              await templateService.apiHandler({
                methodName: 'getPromptVersions',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/prompt/version/:promptVersionId',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(PromptController)),
            ...(fetchMiddlewares<RequestHandler>(PromptController.prototype.getPromptVersion)),

            async function PromptController_getPromptVersion(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    promptVersionId: {"in":"path","name":"promptVersionId","required":true,"dataType":"string"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new PromptController();

              await templateService.apiHandler({
                methodName: 'getPromptVersion',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.delete('/v1/prompt/version/:promptVersionId',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(PromptController)),
            ...(fetchMiddlewares<RequestHandler>(PromptController.prototype.deletePromptVersion)),

            async function PromptController_deletePromptVersion(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    promptVersionId: {"in":"path","name":"promptVersionId","required":true,"dataType":"string"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new PromptController();

              await templateService.apiHandler({
                methodName: 'deletePromptVersion',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/prompt/:user_defined_id/compile',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(PromptController)),
            ...(fetchMiddlewares<RequestHandler>(PromptController.prototype.getPromptVersionsCompiled)),

            async function PromptController_getPromptVersionsCompiled(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"ref":"PromptVersiosQueryParamsCompiled"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    user_defined_id: {"in":"path","name":"user_defined_id","required":true,"dataType":"string"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new PromptController();

              await templateService.apiHandler({
                methodName: 'getPromptVersionsCompiled',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/prompt/:user_defined_id/template',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(PromptController)),
            ...(fetchMiddlewares<RequestHandler>(PromptController.prototype.getPromptVersionTemplates)),

            async function PromptController_getPromptVersionTemplates(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"ref":"PromptVersiosQueryParamsCompiled"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    user_defined_id: {"in":"path","name":"user_defined_id","required":true,"dataType":"string"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new PromptController();

              await templateService.apiHandler({
                methodName: 'getPromptVersionTemplates',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/settings/query',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(SettingController)),
            ...(fetchMiddlewares<RequestHandler>(SettingController.prototype.getSettings)),

            async function SettingController_getSettings(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new SettingController();

              await templateService.apiHandler({
                methodName: 'getSettings',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/stripe/subscription/cost-for-prompts',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(StripeController)),
            ...(fetchMiddlewares<RequestHandler>(StripeController.prototype.getCostForPrompts)),

            async function StripeController_getCostForPrompts(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new StripeController();

              await templateService.apiHandler({
                methodName: 'getCostForPrompts',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/stripe/subscription/cost-for-evals',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(StripeController)),
            ...(fetchMiddlewares<RequestHandler>(StripeController.prototype.getCostForEvals)),

            async function StripeController_getCostForEvals(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new StripeController();

              await templateService.apiHandler({
                methodName: 'getCostForEvals',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/stripe/subscription/cost-for-experiments',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(StripeController)),
            ...(fetchMiddlewares<RequestHandler>(StripeController.prototype.getCostForExperiments)),

            async function StripeController_getCostForExperiments(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new StripeController();

              await templateService.apiHandler({
                methodName: 'getCostForExperiments',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/stripe/subscription/free/usage',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(StripeController)),
            ...(fetchMiddlewares<RequestHandler>(StripeController.prototype.getFreeUsage)),

            async function StripeController_getFreeUsage(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new StripeController();

              await templateService.apiHandler({
                methodName: 'getFreeUsage',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/stripe/subscription/new-customer/upgrade-to-pro',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(StripeController)),
            ...(fetchMiddlewares<RequestHandler>(StripeController.prototype.upgradeToPro)),

            async function StripeController_upgradeToPro(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    body: {"in":"body","name":"body","required":true,"ref":"UpgradeToProRequest"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new StripeController();

              await templateService.apiHandler({
                methodName: 'upgradeToPro',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/stripe/subscription/existing-customer/upgrade-to-pro',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(StripeController)),
            ...(fetchMiddlewares<RequestHandler>(StripeController.prototype.upgradeExistingCustomer)),

            async function StripeController_upgradeExistingCustomer(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    body: {"in":"body","name":"body","required":true,"ref":"UpgradeToProRequest"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new StripeController();

              await templateService.apiHandler({
                methodName: 'upgradeExistingCustomer',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/stripe/subscription/new-customer/upgrade-to-team-bundle',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(StripeController)),
            ...(fetchMiddlewares<RequestHandler>(StripeController.prototype.upgradeToTeamBundle)),

            async function StripeController_upgradeToTeamBundle(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    body: {"in":"body","name":"body","ref":"UpgradeToTeamBundleRequest"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new StripeController();

              await templateService.apiHandler({
                methodName: 'upgradeToTeamBundle',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/stripe/subscription/existing-customer/upgrade-to-team-bundle',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(StripeController)),
            ...(fetchMiddlewares<RequestHandler>(StripeController.prototype.upgradeExistingCustomerToTeamBundle)),

            async function StripeController_upgradeExistingCustomerToTeamBundle(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    body: {"in":"body","name":"body","ref":"UpgradeToTeamBundleRequest"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new StripeController();

              await templateService.apiHandler({
                methodName: 'upgradeExistingCustomerToTeamBundle',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/stripe/subscription/manage-subscription',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(StripeController)),
            ...(fetchMiddlewares<RequestHandler>(StripeController.prototype.manageSubscription)),

            async function StripeController_manageSubscription(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new StripeController();

              await templateService.apiHandler({
                methodName: 'manageSubscription',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/stripe/subscription/undo-cancel-subscription',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(StripeController)),
            ...(fetchMiddlewares<RequestHandler>(StripeController.prototype.undoCancelSubscription)),

            async function StripeController_undoCancelSubscription(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new StripeController();

              await templateService.apiHandler({
                methodName: 'undoCancelSubscription',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/stripe/subscription/add-ons/:productType',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(StripeController)),
            ...(fetchMiddlewares<RequestHandler>(StripeController.prototype.addOns)),

            async function StripeController_addOns(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    productType: {"in":"path","name":"productType","required":true,"dataType":"union","subSchemas":[{"dataType":"enum","enums":["alerts"]},{"dataType":"enum","enums":["prompts"]},{"dataType":"enum","enums":["experiments"]},{"dataType":"enum","enums":["evals"]}]},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new StripeController();

              await templateService.apiHandler({
                methodName: 'addOns',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.delete('/v1/stripe/subscription/add-ons/:productType',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(StripeController)),
            ...(fetchMiddlewares<RequestHandler>(StripeController.prototype.deleteAddOns)),

            async function StripeController_deleteAddOns(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    productType: {"in":"path","name":"productType","required":true,"dataType":"union","subSchemas":[{"dataType":"enum","enums":["alerts"]},{"dataType":"enum","enums":["prompts"]},{"dataType":"enum","enums":["experiments"]},{"dataType":"enum","enums":["evals"]}]},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new StripeController();

              await templateService.apiHandler({
                methodName: 'deleteAddOns',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/stripe/subscription/preview-invoice',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(StripeController)),
            ...(fetchMiddlewares<RequestHandler>(StripeController.prototype.previewInvoice)),

            async function StripeController_previewInvoice(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new StripeController();

              await templateService.apiHandler({
                methodName: 'previewInvoice',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/stripe/subscription/cancel-subscription',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(StripeController)),
            ...(fetchMiddlewares<RequestHandler>(StripeController.prototype.cancelSubscription)),

            async function StripeController_cancelSubscription(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new StripeController();

              await templateService.apiHandler({
                methodName: 'cancelSubscription',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/stripe/subscription/migrate-to-pro',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(StripeController)),
            ...(fetchMiddlewares<RequestHandler>(StripeController.prototype.migrateToPro)),

            async function StripeController_migrateToPro(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new StripeController();

              await templateService.apiHandler({
                methodName: 'migrateToPro',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/stripe/subscription',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(StripeController)),
            ...(fetchMiddlewares<RequestHandler>(StripeController.prototype.getSubscription)),

            async function StripeController_getSubscription(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new StripeController();

              await templateService.apiHandler({
                methodName: 'getSubscription',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/stripe/webhook',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(StripeController)),
            ...(fetchMiddlewares<RequestHandler>(StripeController.prototype.handleStripeWebhook)),

            async function StripeController_handleStripeWebhook(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    body: {"in":"body","name":"body","required":true,"dataType":"any"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new StripeController();

              await templateService.apiHandler({
                methodName: 'handleStripeWebhook',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/organization',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController)),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController.prototype.getOrganizations)),

            async function OrganizationController_getOrganizations(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    req: {"in":"request","name":"req","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new OrganizationController();

              await templateService.apiHandler({
                methodName: 'getOrganizations',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/organization/:organizationId',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController)),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController.prototype.getOrganization)),

            async function OrganizationController_getOrganization(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    organizationId: {"in":"path","name":"organizationId","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new OrganizationController();

              await templateService.apiHandler({
                methodName: 'getOrganization',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/organization/reseller/:resellerId',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController)),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController.prototype.getReseller)),

            async function OrganizationController_getReseller(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    resellerId: {"in":"path","name":"resellerId","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new OrganizationController();

              await templateService.apiHandler({
                methodName: 'getReseller',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/organization/user/accept_terms',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController)),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController.prototype.acceptTerms)),

            async function OrganizationController_acceptTerms(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new OrganizationController();

              await templateService.apiHandler({
                methodName: 'acceptTerms',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/organization/create',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController)),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController.prototype.createNewOrganization)),

            async function OrganizationController_createNewOrganization(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"ref":"NewOrganizationParams"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new OrganizationController();

              await templateService.apiHandler({
                methodName: 'createNewOrganization',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/organization/:organizationId/update',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController)),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController.prototype.updateOrganization)),

            async function OrganizationController_updateOrganization(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"ref":"UpdateOrganizationParams"},
                    organizationId: {"in":"path","name":"organizationId","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new OrganizationController();

              await templateService.apiHandler({
                methodName: 'updateOrganization',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/organization/onboard',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController)),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController.prototype.onboardOrganization)),

            async function OrganizationController_onboardOrganization(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{}},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new OrganizationController();

              await templateService.apiHandler({
                methodName: 'onboardOrganization',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/organization/:organizationId/add_member',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController)),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController.prototype.addMemberToOrganization)),

            async function OrganizationController_addMemberToOrganization(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"email":{"dataType":"string","required":true}}},
                    organizationId: {"in":"path","name":"organizationId","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new OrganizationController();

              await templateService.apiHandler({
                methodName: 'addMemberToOrganization',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/organization/:organizationId/create_filter',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController)),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController.prototype.createOrganizationFilter)),

            async function OrganizationController_createOrganizationFilter(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"filterType":{"dataType":"union","subSchemas":[{"dataType":"enum","enums":["dashboard"]},{"dataType":"enum","enums":["requests"]}],"required":true},"filters":{"dataType":"array","array":{"dataType":"refAlias","ref":"OrganizationFilter"},"required":true}}},
                    organizationId: {"in":"path","name":"organizationId","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new OrganizationController();

              await templateService.apiHandler({
                methodName: 'createOrganizationFilter',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/organization/:organizationId/update_filter',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController)),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController.prototype.updateOrganizationFilter)),

            async function OrganizationController_updateOrganizationFilter(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"filterType":{"dataType":"union","subSchemas":[{"dataType":"enum","enums":["dashboard"]},{"dataType":"enum","enums":["requests"]}],"required":true},"filters":{"dataType":"array","array":{"dataType":"refAlias","ref":"OrganizationFilter"},"required":true}}},
                    organizationId: {"in":"path","name":"organizationId","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new OrganizationController();

              await templateService.apiHandler({
                methodName: 'updateOrganizationFilter',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.delete('/v1/organization/delete',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController)),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController.prototype.deleteOrganization)),

            async function OrganizationController_deleteOrganization(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new OrganizationController();

              await templateService.apiHandler({
                methodName: 'deleteOrganization',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/organization/:organizationId/layout',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController)),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController.prototype.getOrganizationLayout)),

            async function OrganizationController_getOrganizationLayout(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    organizationId: {"in":"path","name":"organizationId","required":true,"dataType":"string"},
                    filterType: {"in":"query","name":"filterType","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new OrganizationController();

              await templateService.apiHandler({
                methodName: 'getOrganizationLayout',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/organization/:organizationId/members',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController)),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController.prototype.getOrganizationMembers)),

            async function OrganizationController_getOrganizationMembers(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    organizationId: {"in":"path","name":"organizationId","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new OrganizationController();

              await templateService.apiHandler({
                methodName: 'getOrganizationMembers',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/organization/:organizationId/update_member',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController)),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController.prototype.updateOrganizationMember)),

            async function OrganizationController_updateOrganizationMember(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"memberId":{"dataType":"string","required":true},"role":{"dataType":"string","required":true}}},
                    organizationId: {"in":"path","name":"organizationId","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new OrganizationController();

              await templateService.apiHandler({
                methodName: 'updateOrganizationMember',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/organization/:organizationId/owner',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController)),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController.prototype.getOrganizationOwner)),

            async function OrganizationController_getOrganizationOwner(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    organizationId: {"in":"path","name":"organizationId","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new OrganizationController();

              await templateService.apiHandler({
                methodName: 'getOrganizationOwner',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.delete('/v1/organization/:organizationId/remove_member',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController)),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController.prototype.removeMemberFromOrganization)),

            async function OrganizationController_removeMemberFromOrganization(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    organizationId: {"in":"path","name":"organizationId","required":true,"dataType":"string"},
                    memberId: {"in":"query","name":"memberId","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new OrganizationController();

              await templateService.apiHandler({
                methodName: 'removeMemberFromOrganization',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/organization/setup-demo',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController)),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController.prototype.setupDemo)),

            async function OrganizationController_setupDemo(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new OrganizationController();

              await templateService.apiHandler({
                methodName: 'setupDemo',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/organization/update_onboarding',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController)),
            ...(fetchMiddlewares<RequestHandler>(OrganizationController.prototype.updateOnboardingStatus)),

            async function OrganizationController_updateOnboardingStatus(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"has_onboarded":{"dataType":"boolean","required":true},"name":{"dataType":"string","required":true},"onboarding_status":{"ref":"OnboardingStatus","required":true}}},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new OrganizationController();

              await templateService.apiHandler({
                methodName: 'updateOnboardingStatus',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/log/request',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(LogController)),
            ...(fetchMiddlewares<RequestHandler>(LogController.prototype.logRequests)),

            async function LogController_logRequests(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    logMessage: {"in":"body","name":"logMessage","required":true,"ref":"KafkaMessageContents"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new LogController();

              await templateService.apiHandler({
                methodName: 'logRequests',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/gov-organization/limits/member/:memberId',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(GovOrganizationController)),
            ...(fetchMiddlewares<RequestHandler>(GovOrganizationController.prototype.setMemberLimits)),

            async function GovOrganizationController_setMemberLimits(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    memberId: {"in":"path","name":"memberId","required":true,"dataType":"string"},
                    body: {"in":"body","name":"body","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"days":{"dataType":"double","required":true},"limitUSD":{"dataType":"double","required":true}}},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new GovOrganizationController();

              await templateService.apiHandler({
                methodName: 'setMemberLimits',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/gov-organization/my-limits',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(GovOrganizationController)),
            ...(fetchMiddlewares<RequestHandler>(GovOrganizationController.prototype.getMyLimits)),

            async function GovOrganizationController_getMyLimits(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new GovOrganizationController();

              await templateService.apiHandler({
                methodName: 'getMyLimits',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/gov-organization/limits/member/:memberId',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(GovOrganizationController)),
            ...(fetchMiddlewares<RequestHandler>(GovOrganizationController.prototype.getMemberLimits)),

            async function GovOrganizationController_getMemberLimits(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    memberId: {"in":"path","name":"memberId","required":true,"dataType":"string"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new GovOrganizationController();

              await templateService.apiHandler({
                methodName: 'getMemberLimits',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/gov-organization/is-governance-org',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(GovOrganizationController)),
            ...(fetchMiddlewares<RequestHandler>(GovOrganizationController.prototype.isGovernanceOrg)),

            async function GovOrganizationController_isGovernanceOrg(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new GovOrganizationController();

              await templateService.apiHandler({
                methodName: 'isGovernanceOrg',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/key/generateHash',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(GenerateHashController)),
            ...(fetchMiddlewares<RequestHandler>(GenerateHashController.prototype.generateHash)),

            async function GenerateHashController_generateHash(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"ref":"GenerateHashQueryParams"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new GenerateHashController();

              await templateService.apiHandler({
                methodName: 'generateHash',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/dataset/:datasetId/fine-tune',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(DatasetController)),
            ...(fetchMiddlewares<RequestHandler>(DatasetController.prototype.datasetFineTune)),

            async function DatasetController_datasetFineTune(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    datasetId: {"in":"path","name":"datasetId","required":true,"dataType":"string"},
                    body: {"in":"body","name":"body","required":true,"ref":"FineTuneBodyParams"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new DatasetController();

              await templateService.apiHandler({
                methodName: 'datasetFineTune',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/fine-tune',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(FineTuneMainController)),
            ...(fetchMiddlewares<RequestHandler>(FineTuneMainController.prototype.fineTune)),

            async function FineTuneMainController_fineTune(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    body: {"in":"body","name":"body","required":true,"ref":"FineTuneBody"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new FineTuneMainController();

              await templateService.apiHandler({
                methodName: 'fineTune',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/fine-tune/:jobId/stats',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(FineTuneMainController)),
            ...(fetchMiddlewares<RequestHandler>(FineTuneMainController.prototype.fineTuneJobStats)),

            async function FineTuneMainController_fineTuneJobStats(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    jobId: {"in":"path","name":"jobId","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new FineTuneMainController();

              await templateService.apiHandler({
                methodName: 'fineTuneJobStats',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/filter',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(FilterController)),
            ...(fetchMiddlewares<RequestHandler>(FilterController.prototype.getFilters)),

            async function FilterController_getFilters(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new FilterController();

              await templateService.apiHandler({
                methodName: 'getFilters',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/filter/:id',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(FilterController)),
            ...(fetchMiddlewares<RequestHandler>(FilterController.prototype.getFilter)),

            async function FilterController_getFilter(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    id: {"in":"path","name":"id","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new FilterController();

              await templateService.apiHandler({
                methodName: 'getFilter',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/filter',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(FilterController)),
            ...(fetchMiddlewares<RequestHandler>(FilterController.prototype.createFilter)),

            async function FilterController_createFilter(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"ref":"StoreFilterType"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new FilterController();

              await templateService.apiHandler({
                methodName: 'createFilter',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.delete('/v1/filter/:id',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(FilterController)),
            ...(fetchMiddlewares<RequestHandler>(FilterController.prototype.deleteFilter)),

            async function FilterController_deleteFilter(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    id: {"in":"path","name":"id","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new FilterController();

              await templateService.apiHandler({
                methodName: 'deleteFilter',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.patch('/v1/filter/:id',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(FilterController)),
            ...(fetchMiddlewares<RequestHandler>(FilterController.prototype.updateFilter)),

            async function FilterController_updateFilter(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    requestBody: {"in":"body","name":"requestBody","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"filters":{"dataType":"any","required":true}}},
                    id: {"in":"path","name":"id","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new FilterController();

              await templateService.apiHandler({
                methodName: 'updateFilter',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/demo/completion',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(DemoController)),
            ...(fetchMiddlewares<RequestHandler>(DemoController.prototype.demoCompletion)),

            async function DemoController_demoCompletion(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    body: {"in":"body","name":"body","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"cache_enabled":{"dataType":"boolean"},"max_tokens":{"dataType":"double"},"tool_choice":{"ref":"ChatCompletionToolChoiceOption"},"tools":{"dataType":"array","array":{"dataType":"refObject","ref":"ChatCompletionTool"}},"sessionPath":{"dataType":"string"},"sessionName":{"dataType":"string"},"sessionId":{"dataType":"string"},"userEmail":{"dataType":"string"},"promptId":{"dataType":"string","required":true},"messages":{"dataType":"array","array":{"dataType":"refAlias","ref":"ChatCompletionMessageParam"},"required":true}}},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new DemoController();

              await templateService.apiHandler({
                methodName: 'demoCompletion',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/alert/query',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(AlertController)),
            ...(fetchMiddlewares<RequestHandler>(AlertController.prototype.getAlerts)),

            async function AlertController_getAlerts(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new AlertController();

              await templateService.apiHandler({
                methodName: 'getAlerts',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/alert/create',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(AlertController)),
            ...(fetchMiddlewares<RequestHandler>(AlertController.prototype.createAlert)),

            async function AlertController_createAlert(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    alert: {"in":"body","name":"alert","required":true,"ref":"AlertRequest"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new AlertController();

              await templateService.apiHandler({
                methodName: 'createAlert',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.delete('/v1/alert/:alertId',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(AlertController)),
            ...(fetchMiddlewares<RequestHandler>(AlertController.prototype.deleteAlert)),

            async function AlertController_deleteAlert(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    alertId: {"in":"path","name":"alertId","required":true,"dataType":"string"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new AlertController();

              await templateService.apiHandler({
                methodName: 'deleteAlert',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/alert-banner',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(AlertBannerController)),
            ...(fetchMiddlewares<RequestHandler>(AlertBannerController.prototype.getAlertBanners)),

            async function AlertBannerController_getAlertBanners(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new AlertBannerController();

              await templateService.apiHandler({
                methodName: 'getAlertBanners',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/admin/feature-flags',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(AdminController)),
            ...(fetchMiddlewares<RequestHandler>(AdminController.prototype.updateFeatureFlags)),

            async function AdminController_updateFeatureFlags(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    body: {"in":"body","name":"body","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"orgId":{"dataType":"string","required":true},"flag":{"dataType":"string","required":true}}},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new AdminController();

              await templateService.apiHandler({
                methodName: 'updateFeatureFlags',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.delete('/v1/admin/feature-flags',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(AdminController)),
            ...(fetchMiddlewares<RequestHandler>(AdminController.prototype.deleteFeatureFlag)),

            async function AdminController_deleteFeatureFlag(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    body: {"in":"body","name":"body","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"orgId":{"dataType":"string","required":true},"flag":{"dataType":"string","required":true}}},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new AdminController();

              await templateService.apiHandler({
                methodName: 'deleteFeatureFlag',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/admin/feature-flags/query',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(AdminController)),
            ...(fetchMiddlewares<RequestHandler>(AdminController.prototype.getFeatureFlags)),

            async function AdminController_getFeatureFlags(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new AdminController();

              await templateService.apiHandler({
                methodName: 'getFeatureFlags',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/admin/orgs/top-usage',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(AdminController)),
            ...(fetchMiddlewares<RequestHandler>(AdminController.prototype.getTopOrgsByUsage)),

            async function AdminController_getTopOrgsByUsage(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    body: {"in":"body","name":"body","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"minRequests":{"dataType":"double","required":true},"limit":{"dataType":"double","required":true}}},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new AdminController();

              await templateService.apiHandler({
                methodName: 'getTopOrgsByUsage',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/admin/orgs/top',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(AdminController)),
            ...(fetchMiddlewares<RequestHandler>(AdminController.prototype.getTopOrgs)),

            async function AdminController_getTopOrgs(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    body: {"in":"body","name":"body","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"emailContains":{"dataType":"array","array":{"dataType":"string"}},"orgsNameContains":{"dataType":"array","array":{"dataType":"string"}},"orgsId":{"dataType":"array","array":{"dataType":"string"}},"tier":{"dataType":"union","subSchemas":[{"dataType":"enum","enums":["all"]},{"dataType":"enum","enums":["pro"]},{"dataType":"enum","enums":["free"]},{"dataType":"enum","enums":["growth"]},{"dataType":"enum","enums":["enterprise"]}],"required":true},"endDate":{"dataType":"string","required":true},"startDate":{"dataType":"string","required":true}}},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new AdminController();

              await templateService.apiHandler({
                methodName: 'getTopOrgs',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/admin/admins/query',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(AdminController)),
            ...(fetchMiddlewares<RequestHandler>(AdminController.prototype.getAdmins)),

            async function AdminController_getAdmins(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new AdminController();

              await templateService.apiHandler({
                methodName: 'getAdmins',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/admin/whodis',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(AdminController)),
            ...(fetchMiddlewares<RequestHandler>(AdminController.prototype.whodis)),

            async function AdminController_whodis(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    body: {"in":"body","name":"body","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"email":{"dataType":"string"},"userId":{"dataType":"string"},"organizationId":{"dataType":"string"}}},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new AdminController();

              await templateService.apiHandler({
                methodName: 'whodis',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/admin/settings/:name',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(AdminController)),
            ...(fetchMiddlewares<RequestHandler>(AdminController.prototype.getSetting)),

            async function AdminController_getSetting(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    name: {"in":"path","name":"name","required":true,"ref":"SettingName"},
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new AdminController();

              await templateService.apiHandler({
                methodName: 'getSetting',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/admin/azure/run-test',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(AdminController)),
            ...(fetchMiddlewares<RequestHandler>(AdminController.prototype.azureTest)),

            async function AdminController_azureTest(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    body: {"in":"body","name":"body","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"requestBody":{"dataType":"any","required":true}}},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new AdminController();

              await templateService.apiHandler({
                methodName: 'azureTest',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/admin/settings',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(AdminController)),
            ...(fetchMiddlewares<RequestHandler>(AdminController.prototype.updateSetting)),

            async function AdminController_updateSetting(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    body: {"in":"body","name":"body","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"settings":{"ref":"Setting","required":true},"name":{"ref":"SettingName","required":true}}},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new AdminController();

              await templateService.apiHandler({
                methodName: 'updateSetting',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/admin/orgs/query',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(AdminController)),
            ...(fetchMiddlewares<RequestHandler>(AdminController.prototype.findAllOrgs)),

            async function AdminController_findAllOrgs(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    body: {"in":"body","name":"body","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"orgName":{"dataType":"string","required":true}}},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new AdminController();

              await templateService.apiHandler({
                methodName: 'findAllOrgs',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/admin/orgs/over-time/query',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(AdminController)),
            ...(fetchMiddlewares<RequestHandler>(AdminController.prototype.newOrgsOverTime)),

            async function AdminController_newOrgsOverTime(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    body: {"in":"body","name":"body","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"groupBy":{"dataType":"union","subSchemas":[{"dataType":"enum","enums":["hour"]},{"dataType":"enum","enums":["day"]},{"dataType":"enum","enums":["week"]},{"dataType":"enum","enums":["month"]}],"required":true},"timeFilter":{"dataType":"union","subSchemas":[{"dataType":"enum","enums":["1 days"]},{"dataType":"enum","enums":["7 days"]},{"dataType":"enum","enums":["1 month"]},{"dataType":"enum","enums":["3 months"]},{"dataType":"enum","enums":["6 months"]},{"dataType":"enum","enums":["12 months"]},{"dataType":"enum","enums":["24 months"]}],"required":true}}},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new AdminController();

              await templateService.apiHandler({
                methodName: 'newOrgsOverTime',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/admin/admins/org/query',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(AdminController)),
            ...(fetchMiddlewares<RequestHandler>(AdminController.prototype.addAdminsToOrg)),

            async function AdminController_addAdminsToOrg(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    body: {"in":"body","name":"body","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"adminIds":{"dataType":"array","array":{"dataType":"string"},"required":true},"orgId":{"dataType":"string","required":true}}},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new AdminController();

              await templateService.apiHandler({
                methodName: 'addAdminsToOrg',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/admin/alert_banners',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(AdminController)),
            ...(fetchMiddlewares<RequestHandler>(AdminController.prototype.createAlertBanner)),

            async function AdminController_createAlertBanner(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    body: {"in":"body","name":"body","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"message":{"dataType":"string","required":true},"title":{"dataType":"string","required":true}}},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new AdminController();

              await templateService.apiHandler({
                methodName: 'createAlertBanner',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.patch('/v1/admin/alert_banners',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(AdminController)),
            ...(fetchMiddlewares<RequestHandler>(AdminController.prototype.updateAlertBanner)),

            async function AdminController_updateAlertBanner(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    body: {"in":"body","name":"body","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"active":{"dataType":"boolean","required":true},"id":{"dataType":"double","required":true}}},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new AdminController();

              await templateService.apiHandler({
                methodName: 'updateAlertBanner',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/admin/top-orgs-over-time',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(AdminController)),
            ...(fetchMiddlewares<RequestHandler>(AdminController.prototype.getTopOrgsOverTime)),

            async function AdminController_getTopOrgsOverTime(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    body: {"in":"body","name":"body","required":true,"dataType":"nestedObjectLiteral","nestedProperties":{"groupBy":{"dataType":"string"},"limit":{"dataType":"double","required":true},"timeRange":{"dataType":"string","required":true}}},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new AdminController();

              await templateService.apiHandler({
                methodName: 'getTopOrgsOverTime',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.get('/v1/admin/subscription-data',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(AdminController)),
            ...(fetchMiddlewares<RequestHandler>(AdminController.prototype.getSubscriptionData)),

            async function AdminController_getSubscriptionData(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    request: {"in":"request","name":"request","required":true,"dataType":"object"},
                    forceRefresh: {"in":"query","name":"forceRefresh","dataType":"boolean"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new AdminController();

              await templateService.apiHandler({
                methodName: 'getSubscriptionData',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        app.post('/v1/audio/convert-to-wav',
            authenticateMiddleware([{"api_key":[]}]),
            ...(fetchMiddlewares<RequestHandler>(AudioController)),
            ...(fetchMiddlewares<RequestHandler>(AudioController.prototype.convertToWav)),

            async function AudioController_convertToWav(request: ExRequest, response: ExResponse, next: any) {
            const args: Record<string, TsoaRoute.ParameterSchema> = {
                    body: {"in":"body","name":"body","required":true,"ref":"ConvertToWavRequestBody"},
            };

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            let validatedArgs: any[] = [];
            try {
                validatedArgs = templateService.getValidatedArgs({ args, request, response });

                const controller = new AudioController();

              await templateService.apiHandler({
                methodName: 'convertToWav',
                controller,
                response,
                next,
                validatedArgs,
                successStatus: undefined,
              });
            } catch (err) {
                return next(err);
            }
        });
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa


    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

    function authenticateMiddleware(security: TsoaRoute.Security[] = []) {
        return async function runAuthenticationMiddleware(request: any, response: any, next: any) {

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            // keep track of failed auth attempts so we can hand back the most
            // recent one.  This behavior was previously existing so preserving it
            // here
            const failedAttempts: any[] = [];
            const pushAndRethrow = (error: any) => {
                failedAttempts.push(error);
                throw error;
            };

            const secMethodOrPromises: Promise<any>[] = [];
            for (const secMethod of security) {
                if (Object.keys(secMethod).length > 1) {
                    const secMethodAndPromises: Promise<any>[] = [];

                    for (const name in secMethod) {
                        secMethodAndPromises.push(
                            expressAuthenticationRecasted(request, name, secMethod[name], response)
                                .catch(pushAndRethrow)
                        );
                    }

                    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

                    secMethodOrPromises.push(Promise.all(secMethodAndPromises)
                        .then(users => { return users[0]; }));
                } else {
                    for (const name in secMethod) {
                        secMethodOrPromises.push(
                            expressAuthenticationRecasted(request, name, secMethod[name], response)
                                .catch(pushAndRethrow)
                        );
                    }
                }
            }

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa

            try {
                request['user'] = await Promise.any(secMethodOrPromises);

                // Response was sent in middleware, abort
                if (response.writableEnded) {
                    return;
                }

                next();
            }
            catch(err) {
                // Show most recent error as response
                const error = failedAttempts.pop();
                error.status = error.status || 401;

                // Response was sent in middleware, abort
                if (response.writableEnded) {
                    return;
                }
                next(error);
            }

            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        }
    }

    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
}

// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
