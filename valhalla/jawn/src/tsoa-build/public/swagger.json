{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"ResultSuccess__count-number--prompt_tokens-number--completion_tokens-number--user_id-string--cost_usd-number_-Array_": {
				"properties": {
					"data": {
						"items": {
							"properties": {
								"cost_usd": {
									"type": "number",
									"format": "double"
								},
								"user_id": {
									"type": "string"
								},
								"completion_tokens": {
									"type": "number",
									"format": "double"
								},
								"prompt_tokens": {
									"type": "number",
									"format": "double"
								},
								"count": {
									"type": "number",
									"format": "double"
								}
							},
							"required": [
								"cost_usd",
								"user_id",
								"completion_tokens",
								"prompt_tokens",
								"count"
							],
							"type": "object"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultError_string_": {
				"properties": {
					"data": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					},
					"error": {
						"type": "string"
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result__count-number--prompt_tokens-number--completion_tokens-number--user_id-string--cost_usd-number_-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess__count-number--prompt_tokens-number--completion_tokens-number--user_id-string--cost_usd-number_-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"UserQueryParams": {
				"properties": {
					"userIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"timeFilter": {
						"properties": {
							"endTimeUnixSeconds": {
								"type": "number",
								"format": "double"
							},
							"startTimeUnixSeconds": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"endTimeUnixSeconds",
							"startTimeUnixSeconds"
						],
						"type": "object"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Json": {
				"anyOf": [
					{
						"type": "string"
					},
					{
						"type": "number",
						"format": "double"
					},
					{
						"type": "boolean"
					},
					{
						"properties": {},
						"additionalProperties": {
							"$ref": "#/components/schemas/Json"
						},
						"type": "object"
					},
					{
						"items": {
							"$ref": "#/components/schemas/Json"
						},
						"type": "array"
					}
				],
				"nullable": true
			},
			"Provider": {
				"type": "string",
				"enum": [
					"OPENAI",
					"ANTHROPIC",
					"TOGETHERAI",
					"GROQ",
					"GOOGLE",
					"CUSTOM"
				]
			},
			"LlmType": {
				"type": "string",
				"enum": [
					"chat",
					"completion"
				]
			},
			"FunctionCall": {
				"properties": {
					"name": {
						"type": "string"
					},
					"arguments": {
						"additionalProperties": false,
						"type": "object"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Message": {
				"properties": {
					"role": {
						"type": "string"
					},
					"content": {
						"type": "string"
					},
					"function_call": {
						"$ref": "#/components/schemas/FunctionCall"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Request": {
				"properties": {
					"llm_type": {
						"$ref": "#/components/schemas/LlmType"
					},
					"model": {
						"type": "string"
					},
					"provider": {
						"type": "string"
					},
					"prompt": {
						"type": "string",
						"nullable": true
					},
					"max_tokens": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"temperature": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"top_p": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"n": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"stream": {
						"type": "boolean",
						"nullable": true
					},
					"stop": {
						"type": "string",
						"nullable": true
					},
					"presence_penalty": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"frequency_penalty": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"logprobs": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"best_of": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"logit_bias": {
						"additionalProperties": false,
						"type": "object",
						"nullable": true
					},
					"user": {
						"type": "string",
						"nullable": true
					},
					"messages": {
						"items": {
							"$ref": "#/components/schemas/Message"
						},
						"type": "array",
						"nullable": true
					},
					"tooLarge": {
						"type": "boolean"
					},
					"heliconeMessage": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Record_number.string_": {
				"properties": {},
				"additionalProperties": {
					"type": "string"
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"ErrorInfo": {
				"properties": {
					"code": {
						"type": "string",
						"nullable": true
					},
					"message": {
						"type": "string",
						"nullable": true
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Response": {
				"properties": {
					"completions": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Record_number.string_"
							}
						],
						"nullable": true
					},
					"message": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Message"
							}
						],
						"nullable": true
					},
					"error": {
						"allOf": [
							{
								"$ref": "#/components/schemas/ErrorInfo"
							}
						],
						"nullable": true
					},
					"model": {
						"type": "string",
						"nullable": true
					},
					"tooLarge": {
						"type": "boolean"
					},
					"heliconeMessage": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"LlmSchema": {
				"properties": {
					"request": {
						"$ref": "#/components/schemas/Request"
					},
					"response": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Response"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"request"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Record_string.string_": {
				"properties": {},
				"additionalProperties": {
					"type": "string"
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"Record_string.number_": {
				"properties": {},
				"additionalProperties": {
					"type": "number",
					"format": "double"
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"HeliconeRequest": {
				"properties": {
					"response_id": {
						"type": "string",
						"example": "Happy"
					},
					"response_created_at": {
						"type": "string"
					},
					"response_body": {},
					"response_status": {
						"type": "number",
						"format": "double"
					},
					"response_model": {
						"type": "string",
						"nullable": true
					},
					"request_id": {
						"type": "string"
					},
					"request_model": {
						"type": "string",
						"nullable": true
					},
					"model_override": {
						"type": "string",
						"nullable": true
					},
					"request_created_at": {
						"type": "string"
					},
					"request_body": {},
					"request_path": {
						"type": "string"
					},
					"request_user_id": {
						"type": "string",
						"nullable": true
					},
					"request_properties": {
						"properties": {},
						"additionalProperties": {
							"$ref": "#/components/schemas/Json"
						},
						"type": "object",
						"nullable": true
					},
					"request_feedback": {
						"properties": {},
						"additionalProperties": {
							"$ref": "#/components/schemas/Json"
						},
						"type": "object",
						"nullable": true
					},
					"helicone_user": {
						"type": "string",
						"nullable": true
					},
					"prompt_name": {
						"type": "string",
						"nullable": true
					},
					"prompt_regex": {
						"type": "string",
						"nullable": true
					},
					"key_name": {
						"type": "string"
					},
					"delay_ms": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"time_to_first_token": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"total_tokens": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"prompt_tokens": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"completion_tokens": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"provider": {
						"$ref": "#/components/schemas/Provider"
					},
					"node_id": {
						"type": "string",
						"nullable": true
					},
					"prompt_id": {
						"type": "string",
						"nullable": true
					},
					"feedback_created_at": {
						"type": "string",
						"nullable": true
					},
					"feedback_id": {
						"type": "string",
						"nullable": true
					},
					"feedback_rating": {
						"type": "boolean",
						"nullable": true
					},
					"signed_body_url": {
						"type": "string",
						"nullable": true
					},
					"llmSchema": {
						"allOf": [
							{
								"$ref": "#/components/schemas/LlmSchema"
							}
						],
						"nullable": true
					},
					"country_code": {
						"type": "string",
						"nullable": true
					},
					"asset_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true
					},
					"asset_urls": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Record_string.string_"
							}
						],
						"nullable": true
					},
					"scores": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Record_string.number_"
							}
						],
						"nullable": true
					},
					"costUSD": {
						"type": "number",
						"format": "double",
						"nullable": true
					}
				},
				"required": [
					"response_id",
					"response_created_at",
					"response_status",
					"response_model",
					"request_id",
					"request_model",
					"model_override",
					"request_created_at",
					"request_body",
					"request_path",
					"request_user_id",
					"request_properties",
					"request_feedback",
					"helicone_user",
					"prompt_name",
					"prompt_regex",
					"key_name",
					"delay_ms",
					"time_to_first_token",
					"total_tokens",
					"prompt_tokens",
					"completion_tokens",
					"provider",
					"node_id",
					"prompt_id",
					"llmSchema",
					"country_code",
					"asset_ids",
					"asset_urls",
					"scores"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_HeliconeRequest-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/HeliconeRequest"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_HeliconeRequest-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_HeliconeRequest-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"Partial_NumberOperators_": {
				"properties": {
					"not-equals": {
						"type": "number",
						"format": "double"
					},
					"equals": {
						"type": "number",
						"format": "double"
					},
					"gte": {
						"type": "number",
						"format": "double"
					},
					"lte": {
						"type": "number",
						"format": "double"
					},
					"lt": {
						"type": "number",
						"format": "double"
					},
					"gt": {
						"type": "number",
						"format": "double"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_TimestampOperators_": {
				"properties": {
					"gte": {
						"type": "string"
					},
					"lte": {
						"type": "string"
					},
					"lt": {
						"type": "string"
					},
					"gt": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_BooleanOperators_": {
				"properties": {
					"equals": {
						"type": "boolean"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_TextOperators_": {
				"properties": {
					"not-equals": {
						"type": "string"
					},
					"equals": {
						"type": "string"
					},
					"like": {
						"type": "string"
					},
					"ilike": {
						"type": "string"
					},
					"contains": {
						"type": "string"
					},
					"not-contains": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_FeedbackTableToOperators_": {
				"properties": {
					"id": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"created_at": {
						"$ref": "#/components/schemas/Partial_TimestampOperators_"
					},
					"rating": {
						"$ref": "#/components/schemas/Partial_BooleanOperators_"
					},
					"response_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_RequestTableToOperators_": {
				"properties": {
					"prompt": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"created_at": {
						"$ref": "#/components/schemas/Partial_TimestampOperators_"
					},
					"user_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"auth_hash": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"org_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"node_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"model": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"modelOverride": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"path": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"prompt_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_ResponseTableToOperators_": {
				"properties": {
					"body_tokens": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"body_model": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"body_completion": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"status": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"model": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_VectorOperators_": {
				"properties": {
					"contains": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_RequestResponseSearchToOperators_": {
				"properties": {
					"request_body_vector": {
						"$ref": "#/components/schemas/Partial_VectorOperators_"
					},
					"response_body_vector": {
						"$ref": "#/components/schemas/Partial_VectorOperators_"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Pick_FilterLeaf.feedback-or-request-or-response-or-properties-or-values-or-request_response_search_": {
				"properties": {
					"feedback": {
						"$ref": "#/components/schemas/Partial_FeedbackTableToOperators_"
					},
					"request": {
						"$ref": "#/components/schemas/Partial_RequestTableToOperators_"
					},
					"response": {
						"$ref": "#/components/schemas/Partial_ResponseTableToOperators_"
					},
					"properties": {
						"properties": {},
						"additionalProperties": {
							"$ref": "#/components/schemas/Partial_TextOperators_"
						},
						"type": "object"
					},
					"values": {
						"properties": {},
						"additionalProperties": {
							"$ref": "#/components/schemas/Partial_TextOperators_"
						},
						"type": "object"
					},
					"request_response_search": {
						"$ref": "#/components/schemas/Partial_RequestResponseSearchToOperators_"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"FilterLeafSubset_feedback-or-request-or-response-or-properties-or-values-or-request_response_search_": {
				"$ref": "#/components/schemas/Pick_FilterLeaf.feedback-or-request-or-response-or-properties-or-values-or-request_response_search_"
			},
			"RequestFilterNode": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/FilterLeafSubset_feedback-or-request-or-response-or-properties-or-values-or-request_response_search_"
					},
					{
						"$ref": "#/components/schemas/RequestFilterBranch"
					},
					{
						"type": "string",
						"enum": [
							"all"
						]
					}
				]
			},
			"RequestFilterBranch": {
				"properties": {
					"right": {
						"$ref": "#/components/schemas/RequestFilterNode"
					},
					"operator": {
						"type": "string",
						"enum": [
							"or",
							"and"
						]
					},
					"left": {
						"$ref": "#/components/schemas/RequestFilterNode"
					}
				},
				"required": [
					"right",
					"operator",
					"left"
				],
				"type": "object"
			},
			"SortDirection": {
				"type": "string",
				"enum": [
					"asc",
					"desc"
				]
			},
			"SortLeafRequest": {
				"properties": {
					"random": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"created_at": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"cache_created_at": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"latency": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"last_active": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"total_tokens": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"completion_tokens": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"prompt_tokens": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"user_id": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"body_model": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"is_cached": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"request_prompt": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"response_text": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"properties": {
						"properties": {},
						"additionalProperties": {
							"$ref": "#/components/schemas/SortDirection"
						},
						"type": "object"
					},
					"values": {
						"properties": {},
						"additionalProperties": {
							"$ref": "#/components/schemas/SortDirection"
						},
						"type": "object"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"RequestQueryParams": {
				"properties": {
					"filter": {
						"$ref": "#/components/schemas/RequestFilterNode"
					},
					"offset": {
						"type": "number",
						"format": "double"
					},
					"limit": {
						"type": "number",
						"format": "double"
					},
					"sort": {
						"$ref": "#/components/schemas/SortLeafRequest"
					},
					"isCached": {
						"type": "boolean"
					},
					"includeInputs": {
						"type": "boolean"
					},
					"isPartOfExperiment": {
						"type": "boolean"
					},
					"isScored": {
						"type": "boolean"
					}
				},
				"required": [
					"filter"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_null_": {
				"properties": {
					"data": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_null.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_null_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"HeliconeRequestAsset": {
				"properties": {
					"assetUrl": {
						"type": "string"
					}
				},
				"required": [
					"assetUrl"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_HeliconeRequestAsset_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/HeliconeRequestAsset"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_HeliconeRequestAsset.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_HeliconeRequestAsset_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"Record_string.number-or-boolean_": {
				"properties": {},
				"additionalProperties": {
					"anyOf": [
						{
							"type": "number",
							"format": "double"
						},
						{
							"type": "boolean"
						}
					]
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"Scores": {
				"$ref": "#/components/schemas/Record_string.number-or-boolean_"
			},
			"ScoreRequest": {
				"properties": {
					"scores": {
						"$ref": "#/components/schemas/Scores"
					}
				},
				"required": [
					"scores"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PromptsResult": {
				"properties": {
					"id": {
						"type": "string"
					},
					"user_defined_id": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"pretty_name": {
						"type": "string"
					},
					"created_at": {
						"type": "string"
					},
					"major_version": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"user_defined_id",
					"description",
					"pretty_name",
					"created_at",
					"major_version"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_PromptsResult-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/PromptsResult"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_PromptsResult-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_PromptsResult-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"Partial_PromptToOperators_": {
				"properties": {
					"id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"user_defined_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Pick_FilterLeaf.prompt_v2_": {
				"properties": {
					"prompt_v2": {
						"$ref": "#/components/schemas/Partial_PromptToOperators_"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"FilterLeafSubset_prompt_v2_": {
				"$ref": "#/components/schemas/Pick_FilterLeaf.prompt_v2_"
			},
			"PromptsFilterNode": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/FilterLeafSubset_prompt_v2_"
					},
					{
						"$ref": "#/components/schemas/PromptsFilterBranch"
					},
					{
						"type": "string",
						"enum": [
							"all"
						]
					}
				]
			},
			"PromptsFilterBranch": {
				"properties": {
					"right": {
						"$ref": "#/components/schemas/PromptsFilterNode"
					},
					"operator": {
						"type": "string",
						"enum": [
							"or",
							"and"
						]
					},
					"left": {
						"$ref": "#/components/schemas/PromptsFilterNode"
					}
				},
				"required": [
					"right",
					"operator",
					"left"
				],
				"type": "object"
			},
			"PromptsQueryParams": {
				"properties": {
					"filter": {
						"$ref": "#/components/schemas/PromptsFilterNode"
					}
				},
				"required": [
					"filter"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PromptResult": {
				"properties": {
					"id": {
						"type": "string"
					},
					"user_defined_id": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"pretty_name": {
						"type": "string"
					},
					"major_version": {
						"type": "number",
						"format": "double"
					},
					"latest_version_id": {
						"type": "string"
					},
					"latest_model_used": {
						"type": "string"
					},
					"created_at": {
						"type": "string"
					},
					"last_used": {
						"type": "string"
					},
					"versions": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"user_defined_id",
					"description",
					"pretty_name",
					"major_version",
					"latest_version_id",
					"latest_model_used",
					"created_at",
					"last_used",
					"versions"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_PromptResult_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/PromptResult"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_PromptResult.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_PromptResult_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"PromptQueryParams": {
				"properties": {
					"timeFilter": {
						"properties": {
							"end": {
								"type": "string"
							},
							"start": {
								"type": "string"
							}
						},
						"required": [
							"end",
							"start"
						],
						"type": "object"
					}
				},
				"required": [
					"timeFilter"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PromptVersionResult": {
				"properties": {
					"id": {
						"type": "string"
					},
					"minor_version": {
						"type": "number",
						"format": "double"
					},
					"major_version": {
						"type": "number",
						"format": "double"
					},
					"helicone_template": {
						"type": "string"
					},
					"prompt_v2": {
						"type": "string"
					},
					"model": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"minor_version",
					"major_version",
					"helicone_template",
					"prompt_v2",
					"model"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_PromptVersionResult_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/PromptVersionResult"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_PromptVersionResult.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_PromptVersionResult_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"PromptCreateSubversionParams": {
				"properties": {
					"newHeliconeTemplate": {}
				},
				"required": [
					"newHeliconeTemplate"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PromptInputRecord": {
				"properties": {
					"id": {
						"type": "string"
					},
					"inputs": {
						"$ref": "#/components/schemas/Record_string.string_"
					},
					"source_request": {
						"type": "string"
					},
					"prompt_version": {
						"type": "string"
					},
					"created_at": {
						"type": "string"
					},
					"response_body": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"inputs",
					"source_request",
					"prompt_version",
					"created_at",
					"response_body"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_PromptInputRecord-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/PromptInputRecord"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_PromptInputRecord-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_PromptInputRecord-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess_PromptVersionResult-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/PromptVersionResult"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_PromptVersionResult-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_PromptVersionResult-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess__datasetId-string__": {
				"properties": {
					"data": {
						"properties": {
							"datasetId": {
								"type": "string"
							}
						},
						"required": [
							"datasetId"
						],
						"type": "object"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result__datasetId-string_.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess__datasetId-string__"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"DatasetMetadata": {
				"properties": {
					"promptId": {
						"type": "string"
					},
					"inputRecordsIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"NewDatasetParams": {
				"properties": {
					"datasetName": {
						"type": "string"
					},
					"requestIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"meta": {
						"$ref": "#/components/schemas/DatasetMetadata"
					}
				},
				"required": [
					"datasetName",
					"requestIds"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_PromptVersionsToOperators_": {
				"properties": {
					"minor_version": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"major_version": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"prompt_v2": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Pick_FilterLeaf.request-or-prompts_versions_": {
				"properties": {
					"request": {
						"$ref": "#/components/schemas/Partial_RequestTableToOperators_"
					},
					"prompts_versions": {
						"$ref": "#/components/schemas/Partial_PromptVersionsToOperators_"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"FilterLeafSubset_request-or-prompts_versions_": {
				"$ref": "#/components/schemas/Pick_FilterLeaf.request-or-prompts_versions_"
			},
			"DatasetFilterNode": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/FilterLeafSubset_request-or-prompts_versions_"
					},
					{
						"$ref": "#/components/schemas/DatasetFilterBranch"
					},
					{
						"type": "string",
						"enum": [
							"all"
						]
					}
				]
			},
			"DatasetFilterBranch": {
				"properties": {
					"right": {
						"$ref": "#/components/schemas/DatasetFilterNode"
					},
					"operator": {
						"type": "string",
						"enum": [
							"or",
							"and"
						]
					},
					"left": {
						"$ref": "#/components/schemas/DatasetFilterNode"
					}
				},
				"required": [
					"right",
					"operator",
					"left"
				],
				"type": "object"
			},
			"RandomDatasetParams": {
				"properties": {
					"datasetName": {
						"type": "string"
					},
					"filter": {
						"$ref": "#/components/schemas/DatasetFilterNode"
					},
					"offset": {
						"type": "number",
						"format": "double"
					},
					"limit": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"datasetName",
					"filter"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DatasetResult": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"created_at": {
						"type": "string"
					},
					"meta": {
						"$ref": "#/components/schemas/DatasetMetadata"
					}
				},
				"required": [
					"id",
					"name",
					"created_at"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_DatasetResult-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/DatasetResult"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_DatasetResult-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_DatasetResult-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess___-Array_": {
				"properties": {
					"data": {
						"items": {
							"properties": {},
							"type": "object"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result___-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess___-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess__experimentId-string__": {
				"properties": {
					"data": {
						"properties": {
							"experimentId": {
								"type": "string"
							}
						},
						"required": [
							"experimentId"
						],
						"type": "object"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result__experimentId-string_.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess__experimentId-string__"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"NewExperimentParams": {
				"properties": {
					"datasetId": {
						"type": "string"
					},
					"promptVersion": {
						"type": "string"
					},
					"model": {
						"type": "string"
					},
					"providerKeyId": {
						"type": "string"
					},
					"meta": {}
				},
				"required": [
					"datasetId",
					"promptVersion",
					"model",
					"providerKeyId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResponseObj": {
				"properties": {
					"body": {},
					"createdAt": {
						"type": "string"
					},
					"completionTokens": {
						"type": "number",
						"format": "double"
					},
					"promptTokens": {
						"type": "number",
						"format": "double"
					},
					"delayMs": {
						"type": "number",
						"format": "double"
					},
					"model": {
						"type": "string"
					}
				},
				"required": [
					"body",
					"createdAt",
					"completionTokens",
					"promptTokens",
					"delayMs",
					"model"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RequestObj": {
				"properties": {
					"id": {
						"type": "string"
					},
					"provider": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"provider"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ScoreValue": {
				"anyOf": [
					{
						"type": "string"
					},
					{
						"type": "number",
						"format": "double"
					},
					{
						"type": "string",
						"format": "date-time"
					}
				]
			},
			"Record_string.ScoreValue_": {
				"properties": {},
				"additionalProperties": {
					"$ref": "#/components/schemas/ScoreValue"
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"ExperimentScores": {
				"properties": {
					"dataset": {
						"properties": {
							"scores": {
								"$ref": "#/components/schemas/Record_string.ScoreValue_"
							}
						},
						"required": [
							"scores"
						],
						"type": "object"
					},
					"hypothesis": {
						"properties": {
							"scores": {
								"$ref": "#/components/schemas/Record_string.ScoreValue_"
							}
						},
						"required": [
							"scores"
						],
						"type": "object"
					}
				},
				"required": [
					"dataset",
					"hypothesis"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Experiment": {
				"properties": {
					"id": {
						"type": "string"
					},
					"organization": {
						"type": "string"
					},
					"dataset": {
						"properties": {
							"rows": {
								"items": {
									"properties": {
										"scores": {
											"$ref": "#/components/schemas/Record_string.number_"
										},
										"inputRecord": {
											"properties": {
												"request": {
													"$ref": "#/components/schemas/RequestObj"
												},
												"response": {
													"$ref": "#/components/schemas/ResponseObj"
												},
												"inputs": {
													"$ref": "#/components/schemas/Record_string.string_"
												},
												"requestPath": {
													"type": "string"
												},
												"requestId": {
													"type": "string"
												}
											},
											"required": [
												"request",
												"response",
												"inputs",
												"requestPath",
												"requestId"
											],
											"type": "object"
										},
										"rowId": {
											"type": "string"
										}
									},
									"required": [
										"scores",
										"rowId"
									],
									"type": "object"
								},
								"type": "array"
							},
							"name": {
								"type": "string"
							},
							"id": {
								"type": "string"
							}
						},
						"required": [
							"rows",
							"name",
							"id"
						],
						"type": "object"
					},
					"meta": {},
					"createdAt": {
						"type": "string"
					},
					"hypotheses": {
						"items": {
							"properties": {
								"runs": {
									"items": {
										"properties": {
											"request": {
												"$ref": "#/components/schemas/RequestObj"
											},
											"scores": {
												"$ref": "#/components/schemas/Record_string.number_"
											},
											"response": {
												"$ref": "#/components/schemas/ResponseObj"
											},
											"resultRequestId": {
												"type": "string"
											},
											"datasetRowId": {
												"type": "string"
											}
										},
										"required": [
											"scores",
											"resultRequestId",
											"datasetRowId"
										],
										"type": "object"
									},
									"type": "array"
								},
								"providerKey": {
									"type": "string"
								},
								"createdAt": {
									"type": "string"
								},
								"status": {
									"type": "string"
								},
								"model": {
									"type": "string"
								},
								"parentPromptVersion": {
									"properties": {
										"template": {}
									},
									"required": [
										"template"
									],
									"type": "object"
								},
								"promptVersion": {
									"properties": {
										"template": {}
									},
									"required": [
										"template"
									],
									"type": "object"
								},
								"promptVersionId": {
									"type": "string"
								},
								"id": {
									"type": "string"
								}
							},
							"required": [
								"runs",
								"providerKey",
								"createdAt",
								"status",
								"model",
								"promptVersionId",
								"id"
							],
							"type": "object"
						},
						"type": "array"
					},
					"scores": {
						"allOf": [
							{
								"$ref": "#/components/schemas/ExperimentScores"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"id",
					"organization",
					"dataset",
					"meta",
					"createdAt",
					"hypotheses",
					"scores"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_Experiment-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/Experiment"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_Experiment-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_Experiment-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"Partial_ExperimentToOperators_": {
				"properties": {
					"id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"prompt_v2": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Pick_FilterLeaf.experiment_": {
				"properties": {
					"experiment": {
						"$ref": "#/components/schemas/Partial_ExperimentToOperators_"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"FilterLeafSubset_experiment_": {
				"$ref": "#/components/schemas/Pick_FilterLeaf.experiment_"
			},
			"ExperimentFilterNode": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/FilterLeafSubset_experiment_"
					},
					{
						"$ref": "#/components/schemas/ExperimentFilterBranch"
					},
					{
						"type": "string",
						"enum": [
							"all"
						]
					}
				]
			},
			"ExperimentFilterBranch": {
				"properties": {
					"right": {
						"$ref": "#/components/schemas/ExperimentFilterNode"
					},
					"operator": {
						"type": "string",
						"enum": [
							"or",
							"and"
						]
					},
					"left": {
						"$ref": "#/components/schemas/ExperimentFilterNode"
					}
				},
				"required": [
					"right",
					"operator",
					"left"
				],
				"type": "object"
			},
			"IncludeExperimentKeys": {
				"properties": {
					"inputs": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"promptVersion": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"responseBodies": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"score": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"TTFTvsPromptLength": {
				"properties": {
					"prompt_length": {
						"type": "number",
						"format": "double"
					},
					"ttft_normalized_p75": {
						"type": "number",
						"format": "double"
					},
					"ttft_normalized_p99": {
						"type": "number",
						"format": "double"
					},
					"ttft_normalized": {
						"type": "number",
						"format": "double"
					},
					"ttft_p75": {
						"type": "number",
						"format": "double"
					},
					"ttft_p99": {
						"type": "number",
						"format": "double"
					},
					"ttft": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"prompt_length",
					"ttft_normalized_p75",
					"ttft_normalized_p99",
					"ttft_normalized",
					"ttft_p75",
					"ttft_p99",
					"ttft"
				],
				"type": "object"
			},
			"ResultSuccess_TTFTvsPromptLength-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/TTFTvsPromptLength"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_TTFTvsPromptLength-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_TTFTvsPromptLength-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"TimeSpan": {
				"type": "string",
				"enum": [
					"1m",
					"3m",
					"1yr"
				]
			},
			"ModelName": {
				"type": "string",
				"enum": [
					"gpt-3.5",
					"gpt-4o",
					"gpt-4",
					"gpt-4-turbo",
					"claude-3-opus-20240229",
					"claude-3-sonnet-20240229",
					"claude-3-haiku-20240307",
					"claude-2",
					"open-mixtral",
					"Llama",
					"dall-e",
					"text-moderation",
					"text-embedding"
				]
			},
			"ProviderName": {
				"type": "string",
				"enum": [
					"OPENAI",
					"ANTHROPIC",
					"MISTRAL",
					"META"
				]
			},
			"DataIsBeautifulRequestBody": {
				"properties": {
					"provider": {
						"$ref": "#/components/schemas/ProviderName"
					},
					"models": {
						"items": {
							"$ref": "#/components/schemas/ModelName"
						},
						"type": "array"
					},
					"timespan": {
						"$ref": "#/components/schemas/TimeSpan"
					}
				},
				"required": [
					"timespan"
				],
				"type": "object"
			},
			"ModelBreakdown": {
				"properties": {
					"percent": {
						"type": "number",
						"format": "double"
					},
					"matched_model": {
						"type": "string"
					}
				},
				"required": [
					"percent",
					"matched_model"
				],
				"type": "object"
			},
			"ResultSuccess_ModelBreakdown-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/ModelBreakdown"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_ModelBreakdown-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_ModelBreakdown-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ModelCost": {
				"properties": {
					"percent": {
						"type": "number",
						"format": "double"
					},
					"matched_model": {
						"type": "string"
					}
				},
				"required": [
					"percent",
					"matched_model"
				],
				"type": "object"
			},
			"ResultSuccess_ModelCost-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/ModelCost"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_ModelCost-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_ModelCost-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ProviderBreakdown": {
				"properties": {
					"percent": {
						"type": "number",
						"format": "double"
					},
					"provider": {
						"type": "string"
					}
				},
				"required": [
					"percent",
					"provider"
				],
				"type": "object"
			},
			"ResultSuccess_ProviderBreakdown-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/ProviderBreakdown"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_ProviderBreakdown-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_ProviderBreakdown-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ModelBreakdownOverTime": {
				"allOf": [
					{
						"properties": {
							"date": {
								"type": "string"
							}
						},
						"required": [
							"date"
						],
						"type": "object"
					},
					{
						"$ref": "#/components/schemas/ModelBreakdown"
					}
				]
			},
			"ResultSuccess_ModelBreakdownOverTime-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/ModelBreakdownOverTime"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_ModelBreakdownOverTime-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_ModelBreakdownOverTime-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"CustomerUsage": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"cost": {
						"type": "number",
						"format": "double"
					},
					"count": {
						"type": "number",
						"format": "double"
					},
					"prompt_tokens": {
						"type": "number",
						"format": "double"
					},
					"completion_tokens": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"name",
					"cost",
					"count",
					"prompt_tokens",
					"completion_tokens"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Customer": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"api_key": {
				"type": "apiKey",
				"name": "authorization",
				"in": "header"
			}
		}
	},
	"info": {
		"title": "helicone-api",
		"version": "1.0.0",
		"license": {
			"name": "MIT"
		},
		"contact": {}
	},
	"paths": {
		"/v1/user/query": {
			"post": {
				"operationId": "GetUsers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__count-number--prompt_tokens-number--completion_tokens-number--user_id-string--cost_usd-number_-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserQueryParams"
							}
						}
					}
				}
			}
		},
		"/v1/request/query": {
			"post": {
				"operationId": "GetRequests",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_HeliconeRequest-Array.string_"
								},
								"examples": {
									"Example 1": {
										"value": {
											"filter": "all",
											"isCached": false,
											"limit": 10,
											"offset": 0,
											"sort": {
												"created_at": "desc"
											},
											"isScored": false,
											"isPartOfExperiment": false
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"Request"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"description": "Request query filters",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RequestQueryParams",
								"description": "Request query filters"
							},
							"example": {
								"filter": "all",
								"isCached": false,
								"limit": 10,
								"offset": 0,
								"sort": {
									"created_at": "desc"
								},
								"isScored": false,
								"isPartOfExperiment": false
							}
						}
					}
				}
			}
		},
		"/v1/request/{requestId}/feedback": {
			"post": {
				"operationId": "FeedbackRequest",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Request"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "requestId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"rating": {
										"type": "boolean"
									}
								},
								"required": [
									"rating"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/request/{requestId}/property": {
			"put": {
				"operationId": "PutProperty",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Request"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "requestId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"value": {
										"type": "string"
									},
									"key": {
										"type": "string"
									}
								},
								"required": [
									"value",
									"key"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/request/{requestId}/assets/{assetId}": {
			"post": {
				"operationId": "GetRequestAssetById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_HeliconeRequestAsset.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Request"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "requestId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "assetId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v1/request/{requestId}/score": {
			"post": {
				"operationId": "AddScores",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Request"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "requestId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ScoreRequest"
							}
						}
					}
				}
			}
		},
		"/v1/prompt/query": {
			"post": {
				"operationId": "GetPrompts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_PromptsResult-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PromptsQueryParams"
							}
						}
					}
				}
			}
		},
		"/v1/prompt/{promptId}/query": {
			"post": {
				"operationId": "GetPrompt",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_PromptResult.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "promptId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PromptQueryParams"
							}
						}
					}
				}
			}
		},
		"/v1/prompt/{promptId}": {
			"delete": {
				"operationId": "DeletePrompt",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "promptId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v1/prompt/version/{promptVersionId}/subversion": {
			"post": {
				"operationId": "CreateSubversion",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_PromptVersionResult.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "promptVersionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PromptCreateSubversionParams"
							}
						}
					}
				}
			}
		},
		"/v1/prompt/version/{promptVersionId}/inputs/query": {
			"post": {
				"operationId": "GetInputs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_PromptInputRecord-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "promptVersionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"random": {
										"type": "boolean"
									},
									"limit": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"limit"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/prompt/{promptId}/versions/query": {
			"post": {
				"operationId": "GetPromptVersions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_PromptVersionResult-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "promptId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {},
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/dataset": {
			"post": {
				"operationId": "AddDataset",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__datasetId-string_.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Dataset"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NewDatasetParams"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/dataset/random": {
			"post": {
				"operationId": "AddRandomDataset",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__datasetId-string_.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Dataset"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RandomDatasetParams"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/dataset/query": {
			"post": {
				"operationId": "GetDatasets",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_DatasetResult-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Dataset"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"promptId": {
										"type": "string"
									}
								},
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/dataset/{datasetId}/query": {
			"post": {
				"operationId": "GetDataset",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result___-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Dataset"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {},
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/dataset/{datasetId}/mutate": {
			"post": {
				"operationId": "MutateDataset",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result___-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Dataset"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"removeRequests": {
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"addRequests": {
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"required": [
									"removeRequests",
									"addRequests"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/experiment": {
			"post": {
				"operationId": "CreateNewExperiment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__experimentId-string_.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NewExperimentParams"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/query": {
			"post": {
				"operationId": "GetExperiments",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_Experiment-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"include": {
										"$ref": "#/components/schemas/IncludeExperimentKeys"
									},
									"filter": {
										"$ref": "#/components/schemas/ExperimentFilterNode"
									}
								},
								"required": [
									"filter"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/public/dataisbeautiful/ttft-vs-prompt-length": {
			"post": {
				"operationId": "GetTTFTvsPromptInputLength",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_TTFTvsPromptLength-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"DataIsBeautiful"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DataIsBeautifulRequestBody"
							}
						}
					}
				}
			}
		},
		"/v1/public/dataisbeautiful/model/percentage": {
			"post": {
				"operationId": "GetModelPercentage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_ModelBreakdown-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"DataIsBeautiful"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DataIsBeautifulRequestBody"
							}
						}
					}
				}
			}
		},
		"/v1/public/dataisbeautiful/model/cost": {
			"post": {
				"operationId": "GetModelCost",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_ModelCost-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"DataIsBeautiful"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DataIsBeautifulRequestBody"
							}
						}
					}
				}
			}
		},
		"/v1/public/dataisbeautiful/provider/percentage": {
			"post": {
				"operationId": "GetProviderPercentage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_ProviderBreakdown-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"DataIsBeautiful"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DataIsBeautifulRequestBody"
							}
						}
					}
				}
			}
		},
		"/v1/public/dataisbeautiful/model/percentage/overtime": {
			"post": {
				"operationId": "GetModelPercentageOverTime",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_ModelBreakdownOverTime-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"DataIsBeautiful"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DataIsBeautifulRequestBody"
							}
						}
					}
				}
			}
		},
		"/v1/customer/{customerId}/usage/query": {
			"post": {
				"operationId": "GetCustomerUsage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/CustomerUsage"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Customer"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "customerId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {},
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/customer/query": {
			"post": {
				"operationId": "GetExperiments",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Customer"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Customer"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {},
								"type": "object"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "https://api.helicone.ai/"
		},
		{
			"url": "http://localhost:8585/"
		}
	]
}