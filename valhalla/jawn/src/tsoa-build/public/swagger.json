{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"ResultSuccess_unknown_": {
				"properties": {
					"data": {},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultError_unknown_": {
				"properties": {
					"data": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					},
					"error": {}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Record_string.any_": {
				"properties": {},
				"additionalProperties": {},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"WebhookData": {
				"properties": {
					"destination": {
						"type": "string"
					},
					"config": {
						"$ref": "#/components/schemas/Record_string.any_"
					},
					"includeData": {
						"type": "boolean"
					}
				},
				"required": [
					"destination",
					"config"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess__id-string--created_at-string--destination-string--version-string--config-string--hmac_key-string_-Array_": {
				"properties": {
					"data": {
						"items": {
							"properties": {
								"hmac_key": {
									"type": "string"
								},
								"config": {
									"type": "string"
								},
								"version": {
									"type": "string"
								},
								"destination": {
									"type": "string"
								},
								"created_at": {
									"type": "string"
								},
								"id": {
									"type": "string"
								}
							},
							"required": [
								"hmac_key",
								"config",
								"version",
								"destination",
								"created_at",
								"id"
							],
							"type": "object"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultError_string_": {
				"properties": {
					"data": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					},
					"error": {
						"type": "string"
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result__id-string--created_at-string--destination-string--version-string--config-string--hmac_key-string_-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess__id-string--created_at-string--destination-string--version-string--config-string--hmac_key-string_-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess_null_": {
				"properties": {
					"data": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_null.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_null_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultError_any_": {
				"properties": {
					"data": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					},
					"error": {}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess__id-string__": {
				"properties": {
					"data": {
						"properties": {
							"id": {
								"type": "string"
							}
						},
						"required": [
							"id"
						],
						"type": "object"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result__id-string_.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess__id-string__"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"AddVaultKeyParams": {
				"properties": {
					"key": {
						"type": "string"
					},
					"provider": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"key",
					"provider"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DecryptedProviderKey": {
				"properties": {
					"provider_key_name": {
						"type": "string",
						"nullable": true
					},
					"provider_name": {
						"type": "string",
						"nullable": true
					},
					"provider_key": {
						"type": "string",
						"nullable": true
					},
					"org_id": {
						"type": "string",
						"nullable": true
					},
					"id": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"provider_key_name",
					"provider_name",
					"provider_key",
					"org_id",
					"id"
				],
				"type": "object"
			},
			"ResultSuccess_DecryptedProviderKey-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/DecryptedProviderKey"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_DecryptedProviderKey-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_DecryptedProviderKey-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess_DecryptedProviderKey_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/DecryptedProviderKey"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_DecryptedProviderKey.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_DecryptedProviderKey_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"HistogramRow": {
				"properties": {
					"range_start": {
						"type": "string"
					},
					"range_end": {
						"type": "string"
					},
					"value": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"range_start",
					"range_end",
					"value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess__request_count-HistogramRow-Array--user_cost-HistogramRow-Array__": {
				"properties": {
					"data": {
						"properties": {
							"user_cost": {
								"items": {
									"$ref": "#/components/schemas/HistogramRow"
								},
								"type": "array"
							},
							"request_count": {
								"items": {
									"$ref": "#/components/schemas/HistogramRow"
								},
								"type": "array"
							}
						},
						"required": [
							"user_cost",
							"request_count"
						],
						"type": "object"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result__request_count-HistogramRow-Array--user_cost-HistogramRow-Array_.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess__request_count-HistogramRow-Array--user_cost-HistogramRow-Array__"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"Partial_TextOperators_": {
				"properties": {
					"not-equals": {
						"type": "string"
					},
					"equals": {
						"type": "string"
					},
					"like": {
						"type": "string"
					},
					"ilike": {
						"type": "string"
					},
					"contains": {
						"type": "string"
					},
					"not-contains": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_TimestampOperators_": {
				"properties": {
					"gte": {
						"type": "string"
					},
					"lte": {
						"type": "string"
					},
					"lt": {
						"type": "string"
					},
					"gt": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_NumberOperators_": {
				"properties": {
					"not-equals": {
						"type": "number",
						"format": "double"
					},
					"equals": {
						"type": "number",
						"format": "double"
					},
					"gte": {
						"type": "number",
						"format": "double"
					},
					"lte": {
						"type": "number",
						"format": "double"
					},
					"lt": {
						"type": "number",
						"format": "double"
					},
					"gt": {
						"type": "number",
						"format": "double"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_UserMetricsToOperators_": {
				"properties": {
					"user_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"last_active": {
						"$ref": "#/components/schemas/Partial_TimestampOperators_"
					},
					"total_requests": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"active_for": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"average_requests_per_day_active": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"average_tokens_per_request": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"total_completion_tokens": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"total_prompt_tokens": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"cost": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_TimestampOperatorsTyped_": {
				"properties": {
					"gte": {
						"type": "string",
						"format": "date-time"
					},
					"lte": {
						"type": "string",
						"format": "date-time"
					},
					"lt": {
						"type": "string",
						"format": "date-time"
					},
					"gt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_BooleanOperators_": {
				"properties": {
					"equals": {
						"type": "boolean"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_VectorOperators_": {
				"properties": {
					"contains": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_RequestResponseRMTToOperators_": {
				"properties": {
					"latency": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"status": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"request_created_at": {
						"$ref": "#/components/schemas/Partial_TimestampOperatorsTyped_"
					},
					"response_created_at": {
						"$ref": "#/components/schemas/Partial_TimestampOperatorsTyped_"
					},
					"model": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"user_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"organization_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"node_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"job_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"threat": {
						"$ref": "#/components/schemas/Partial_BooleanOperators_"
					},
					"request_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"prompt_tokens": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"completion_tokens": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"total_tokens": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"target_url": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"properties": {
						"properties": {},
						"additionalProperties": {
							"$ref": "#/components/schemas/Partial_TextOperators_"
						},
						"type": "object"
					},
					"search_properties": {
						"properties": {},
						"additionalProperties": {
							"$ref": "#/components/schemas/Partial_TextOperators_"
						},
						"type": "object"
					},
					"scores": {
						"properties": {},
						"additionalProperties": {
							"$ref": "#/components/schemas/Partial_TextOperators_"
						},
						"type": "object"
					},
					"scores_column": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"request_body": {
						"$ref": "#/components/schemas/Partial_VectorOperators_"
					},
					"response_body": {
						"$ref": "#/components/schemas/Partial_VectorOperators_"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Pick_FilterLeaf.user_metrics-or-request_response_rmt_": {
				"properties": {
					"user_metrics": {
						"$ref": "#/components/schemas/Partial_UserMetricsToOperators_"
					},
					"request_response_rmt": {
						"$ref": "#/components/schemas/Partial_RequestResponseRMTToOperators_"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"FilterLeafSubset_user_metrics-or-request_response_rmt_": {
				"$ref": "#/components/schemas/Pick_FilterLeaf.user_metrics-or-request_response_rmt_"
			},
			"UserFilterNode": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/FilterLeafSubset_user_metrics-or-request_response_rmt_"
					},
					{
						"$ref": "#/components/schemas/UserFilterBranch"
					},
					{
						"type": "string",
						"enum": [
							"all"
						]
					}
				]
			},
			"UserFilterBranch": {
				"properties": {
					"right": {
						"$ref": "#/components/schemas/UserFilterNode"
					},
					"operator": {
						"type": "string",
						"enum": [
							"or",
							"and"
						]
					},
					"left": {
						"$ref": "#/components/schemas/UserFilterNode"
					}
				},
				"required": [
					"right",
					"operator",
					"left"
				],
				"type": "object"
			},
			"PSize": {
				"type": "string",
				"enum": [
					"p50",
					"p75",
					"p95",
					"p99",
					"p99.9"
				]
			},
			"UserMetricsResult": {
				"properties": {
					"id": {
						"type": "string"
					},
					"user_id": {
						"type": "string"
					},
					"active_for": {
						"type": "number",
						"format": "double"
					},
					"first_active": {
						"type": "string"
					},
					"last_active": {
						"type": "string"
					},
					"total_requests": {
						"type": "number",
						"format": "double"
					},
					"average_requests_per_day_active": {
						"type": "number",
						"format": "double"
					},
					"average_tokens_per_request": {
						"type": "number",
						"format": "double"
					},
					"total_completion_tokens": {
						"type": "number",
						"format": "double"
					},
					"total_prompt_tokens": {
						"type": "number",
						"format": "double"
					},
					"cost": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"user_id",
					"active_for",
					"first_active",
					"last_active",
					"total_requests",
					"average_requests_per_day_active",
					"average_tokens_per_request",
					"total_completion_tokens",
					"total_prompt_tokens",
					"cost"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess__users-UserMetricsResult-Array--count-number__": {
				"properties": {
					"data": {
						"properties": {
							"count": {
								"type": "number",
								"format": "double"
							},
							"users": {
								"items": {
									"$ref": "#/components/schemas/UserMetricsResult"
								},
								"type": "array"
							}
						},
						"required": [
							"count",
							"users"
						],
						"type": "object"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result__users-UserMetricsResult-Array--count-number_.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess__users-UserMetricsResult-Array--count-number__"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"SortDirection": {
				"type": "string",
				"enum": [
					"asc",
					"desc"
				]
			},
			"SortLeafUsers": {
				"properties": {
					"id": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"user_id": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"active_for": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"first_active": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"last_active": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"total_requests": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"average_requests_per_day_active": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"average_tokens_per_request": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"cost": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"rate_limited_count": {
						"$ref": "#/components/schemas/SortDirection"
					}
				},
				"type": "object"
			},
			"UserMetricsQueryParams": {
				"properties": {
					"filter": {
						"$ref": "#/components/schemas/UserFilterNode"
					},
					"offset": {
						"type": "number",
						"format": "double"
					},
					"limit": {
						"type": "number",
						"format": "double"
					},
					"timeFilter": {
						"properties": {
							"endTimeUnixSeconds": {
								"type": "number",
								"format": "double"
							},
							"startTimeUnixSeconds": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"endTimeUnixSeconds",
							"startTimeUnixSeconds"
						],
						"type": "object"
					},
					"timeZoneDifferenceMinutes": {
						"type": "number",
						"format": "double"
					},
					"sort": {
						"$ref": "#/components/schemas/SortLeafUsers"
					}
				},
				"required": [
					"filter",
					"offset",
					"limit"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess__count-number--prompt_tokens-number--completion_tokens-number--user_id-string--cost_usd-number_-Array_": {
				"properties": {
					"data": {
						"items": {
							"properties": {
								"cost_usd": {
									"type": "number",
									"format": "double"
								},
								"user_id": {
									"type": "string"
								},
								"completion_tokens": {
									"type": "number",
									"format": "double"
								},
								"prompt_tokens": {
									"type": "number",
									"format": "double"
								},
								"count": {
									"type": "number",
									"format": "double"
								}
							},
							"required": [
								"cost_usd",
								"user_id",
								"completion_tokens",
								"prompt_tokens",
								"count"
							],
							"type": "object"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result__count-number--prompt_tokens-number--completion_tokens-number--user_id-string--cost_usd-number_-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess__count-number--prompt_tokens-number--completion_tokens-number--user_id-string--cost_usd-number_-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"UserQueryParams": {
				"properties": {
					"userIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"timeFilter": {
						"properties": {
							"endTimeUnixSeconds": {
								"type": "number",
								"format": "double"
							},
							"startTimeUnixSeconds": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"endTimeUnixSeconds",
							"startTimeUnixSeconds"
						],
						"type": "object"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Record_string.string_": {
				"properties": {},
				"additionalProperties": {
					"type": "string"
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"ProviderName": {
				"type": "string",
				"enum": [
					"OPENAI",
					"ANTHROPIC",
					"AZURE",
					"LOCAL",
					"HELICONE",
					"AMDBARTEK",
					"ANYSCALE",
					"CLOUDFLARE",
					"2YFV",
					"TOGETHER",
					"LEMONFOX",
					"FIREWORKS",
					"PERPLEXITY",
					"GOOGLE",
					"OPENROUTER",
					"WISDOMINANUTSHELL",
					"GROQ",
					"COHERE",
					"MISTRAL",
					"DEEPINFRA",
					"QSTASH",
					"FIRECRAWL",
					"AWS",
					"DEEPSEEK",
					"X",
					"AVIAN",
					"NEBIUS",
					"NOVITA"
				]
			},
			"Provider": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ProviderName"
					},
					{
						"type": "string",
						"enum": [
							"CUSTOM"
						]
					}
				]
			},
			"LlmType": {
				"type": "string",
				"enum": [
					"chat",
					"completion"
				]
			},
			"FunctionCall": {
				"properties": {
					"name": {
						"type": "string"
					},
					"arguments": {
						"$ref": "#/components/schemas/Record_string.any_"
					}
				},
				"required": [
					"name",
					"arguments"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Message": {
				"properties": {
					"contentArray": {
						"items": {
							"$ref": "#/components/schemas/Message"
						},
						"type": "array"
					},
					"idx": {
						"type": "number",
						"format": "double"
					},
					"audio_data": {
						"type": "string"
					},
					"image_url": {
						"type": "string"
					},
					"timestamp": {
						"type": "string"
					},
					"tool_call_id": {
						"type": "string"
					},
					"tool_calls": {
						"items": {
							"$ref": "#/components/schemas/FunctionCall"
						},
						"type": "array"
					},
					"content": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"role": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"_type": {
						"type": "string",
						"enum": [
							"functionCall",
							"function",
							"image",
							"message",
							"autoInput",
							"contentArray",
							"audio"
						]
					}
				},
				"required": [
					"_type"
				],
				"type": "object"
			},
			"Tool": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"parameters": {
						"$ref": "#/components/schemas/Record_string.any_"
					}
				},
				"required": [
					"name",
					"description"
				],
				"type": "object",
				"additionalProperties": false
			},
			"HeliconeEventTool": {
				"properties": {
					"_type": {
						"type": "string",
						"enum": [
							"tool"
						],
						"nullable": false
					},
					"toolName": {
						"type": "string"
					},
					"input": {}
				},
				"required": [
					"_type",
					"toolName",
					"input"
				],
				"type": "object",
				"additionalProperties": {}
			},
			"HeliconeEventVectorDB": {
				"properties": {
					"_type": {
						"type": "string",
						"enum": [
							"vector_db"
						],
						"nullable": false
					},
					"operation": {
						"type": "string",
						"enum": [
							"search",
							"insert",
							"delete",
							"update"
						]
					},
					"text": {
						"type": "string"
					},
					"vector": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					},
					"topK": {
						"type": "number",
						"format": "double"
					},
					"filter": {
						"additionalProperties": false,
						"type": "object"
					},
					"databaseName": {
						"type": "string"
					}
				},
				"required": [
					"_type",
					"operation"
				],
				"type": "object",
				"additionalProperties": {}
			},
			"LLMRequestBody": {
				"properties": {
					"llm_type": {
						"$ref": "#/components/schemas/LlmType"
					},
					"provider": {
						"type": "string"
					},
					"model": {
						"type": "string"
					},
					"messages": {
						"items": {
							"$ref": "#/components/schemas/Message"
						},
						"type": "array",
						"nullable": true
					},
					"prompt": {
						"type": "string",
						"nullable": true
					},
					"max_tokens": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"temperature": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"top_p": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"seed": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"stream": {
						"type": "boolean",
						"nullable": true
					},
					"presence_penalty": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"frequency_penalty": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"stop": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"type": "string"
							}
						],
						"nullable": true
					},
					"reasoning_effort": {
						"type": "string",
						"enum": [
							"low",
							"medium",
							"high",
							null
						],
						"nullable": true
					},
					"tools": {
						"items": {
							"$ref": "#/components/schemas/Tool"
						},
						"type": "array"
					},
					"parallel_tool_calls": {
						"type": "boolean",
						"nullable": true
					},
					"tool_choice": {
						"properties": {
							"name": {
								"type": "string"
							},
							"type": {
								"type": "string",
								"enum": [
									"none",
									"auto",
									"any",
									"tool"
								]
							}
						},
						"required": [
							"type"
						],
						"type": "object"
					},
					"response_format": {
						"properties": {
							"json_schema": {},
							"type": {
								"type": "string"
							}
						},
						"required": [
							"type"
						],
						"type": "object"
					},
					"toolDetails": {
						"$ref": "#/components/schemas/HeliconeEventTool"
					},
					"vectorDBDetails": {
						"$ref": "#/components/schemas/HeliconeEventVectorDB"
					},
					"input": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						]
					},
					"n": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"size": {
						"type": "string"
					},
					"quality": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"LLMResponseBody": {
				"properties": {
					"vectorDBDetailsResponse": {
						"properties": {
							"_type": {
								"type": "string",
								"enum": [
									"vector_db"
								],
								"nullable": false
							},
							"metadata": {
								"properties": {
									"timestamp": {
										"type": "string"
									},
									"destination_parsed": {
										"type": "boolean"
									},
									"destination": {
										"type": "string"
									}
								},
								"required": [
									"timestamp"
								],
								"type": "object"
							},
							"actualSimilarity": {
								"type": "number",
								"format": "double"
							},
							"similarityThreshold": {
								"type": "number",
								"format": "double"
							},
							"message": {
								"type": "string"
							},
							"status": {
								"type": "string"
							}
						},
						"required": [
							"_type",
							"metadata",
							"message",
							"status"
						],
						"type": "object"
					},
					"toolDetailsResponse": {
						"properties": {
							"toolName": {
								"type": "string"
							},
							"_type": {
								"type": "string",
								"enum": [
									"tool"
								],
								"nullable": false
							},
							"metadata": {
								"properties": {
									"timestamp": {
										"type": "string"
									}
								},
								"required": [
									"timestamp"
								],
								"type": "object"
							},
							"tips": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"message": {
								"type": "string"
							},
							"status": {
								"type": "string"
							}
						},
						"required": [
							"toolName",
							"_type",
							"metadata",
							"tips",
							"message",
							"status"
						],
						"type": "object"
					},
					"error": {
						"properties": {
							"heliconeMessage": {}
						},
						"required": [
							"heliconeMessage"
						],
						"type": "object"
					},
					"model": {
						"type": "string",
						"nullable": true
					},
					"messages": {
						"items": {
							"$ref": "#/components/schemas/Message"
						},
						"type": "array",
						"nullable": true
					}
				},
				"type": "object"
			},
			"LlmSchema": {
				"properties": {
					"request": {
						"$ref": "#/components/schemas/LLMRequestBody"
					},
					"response": {
						"allOf": [
							{
								"$ref": "#/components/schemas/LLMResponseBody"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"request"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Record_string.number_": {
				"properties": {},
				"additionalProperties": {
					"type": "number",
					"format": "double"
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"HeliconeRequest": {
				"properties": {
					"response_id": {
						"type": "string",
						"nullable": true
					},
					"response_created_at": {
						"type": "string",
						"nullable": true
					},
					"response_body": {},
					"response_status": {
						"type": "number",
						"format": "double"
					},
					"response_model": {
						"type": "string",
						"nullable": true
					},
					"request_id": {
						"type": "string"
					},
					"request_created_at": {
						"type": "string"
					},
					"request_body": {},
					"request_path": {
						"type": "string"
					},
					"request_user_id": {
						"type": "string",
						"nullable": true
					},
					"request_properties": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Record_string.string_"
							}
						],
						"nullable": true
					},
					"request_model": {
						"type": "string",
						"nullable": true
					},
					"model_override": {
						"type": "string",
						"nullable": true
					},
					"helicone_user": {
						"type": "string",
						"nullable": true
					},
					"provider": {
						"$ref": "#/components/schemas/Provider"
					},
					"delay_ms": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"time_to_first_token": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"total_tokens": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"prompt_tokens": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"prompt_cache_write_tokens": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"prompt_cache_read_tokens": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"completion_tokens": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"prompt_id": {
						"type": "string",
						"nullable": true
					},
					"feedback_created_at": {
						"type": "string",
						"nullable": true
					},
					"feedback_id": {
						"type": "string",
						"nullable": true
					},
					"feedback_rating": {
						"type": "boolean",
						"nullable": true
					},
					"signed_body_url": {
						"type": "string",
						"nullable": true
					},
					"llmSchema": {
						"allOf": [
							{
								"$ref": "#/components/schemas/LlmSchema"
							}
						],
						"nullable": true
					},
					"country_code": {
						"type": "string",
						"nullable": true
					},
					"asset_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true
					},
					"asset_urls": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Record_string.string_"
							}
						],
						"nullable": true
					},
					"scores": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Record_string.number_"
							}
						],
						"nullable": true
					},
					"costUSD": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"properties": {
						"$ref": "#/components/schemas/Record_string.string_"
					},
					"assets": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"target_url": {
						"type": "string"
					},
					"model": {
						"type": "string"
					}
				},
				"required": [
					"response_id",
					"response_created_at",
					"response_status",
					"response_model",
					"request_id",
					"request_created_at",
					"request_body",
					"request_path",
					"request_user_id",
					"request_properties",
					"request_model",
					"model_override",
					"helicone_user",
					"provider",
					"delay_ms",
					"time_to_first_token",
					"total_tokens",
					"prompt_tokens",
					"prompt_cache_write_tokens",
					"prompt_cache_read_tokens",
					"completion_tokens",
					"prompt_id",
					"llmSchema",
					"country_code",
					"asset_ids",
					"asset_urls",
					"scores",
					"properties",
					"assets",
					"target_url",
					"model"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_HeliconeRequest-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/HeliconeRequest"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_HeliconeRequest-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_HeliconeRequest-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"Partial_CacheHitsTableToOperators_": {
				"properties": {
					"organization_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"request_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"latency": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"completion_tokens": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"prompt_tokens": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"created_at": {
						"$ref": "#/components/schemas/Partial_TimestampOperatorsTyped_"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_FeedbackTableToOperators_": {
				"properties": {
					"id": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"created_at": {
						"$ref": "#/components/schemas/Partial_TimestampOperators_"
					},
					"rating": {
						"$ref": "#/components/schemas/Partial_BooleanOperators_"
					},
					"response_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_RequestTableToOperators_": {
				"properties": {
					"prompt": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"created_at": {
						"$ref": "#/components/schemas/Partial_TimestampOperators_"
					},
					"user_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"auth_hash": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"org_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"node_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"model": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"modelOverride": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"path": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"prompt_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_RequestResponseSearchToOperators_": {
				"properties": {
					"request_body_vector": {
						"$ref": "#/components/schemas/Partial_VectorOperators_"
					},
					"response_body_vector": {
						"$ref": "#/components/schemas/Partial_VectorOperators_"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_ResponseTableToOperators_": {
				"properties": {
					"body_tokens": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"body_model": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"body_completion": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"status": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"model": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_SessionsRequestResponseRMTToOperators_": {
				"properties": {
					"session_session_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"session_session_name": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"session_total_cost": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"session_total_tokens": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"session_prompt_tokens": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"session_completion_tokens": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"session_total_requests": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"session_created_at": {
						"$ref": "#/components/schemas/Partial_TimestampOperatorsTyped_"
					},
					"session_latest_request_created_at": {
						"$ref": "#/components/schemas/Partial_TimestampOperatorsTyped_"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Pick_FilterLeaf.feedback-or-request-or-response-or-properties-or-values-or-request_response_search-or-cache_hits-or-request_response_rmt-or-sessions_request_response_rmt_": {
				"properties": {
					"cache_hits": {
						"$ref": "#/components/schemas/Partial_CacheHitsTableToOperators_"
					},
					"feedback": {
						"$ref": "#/components/schemas/Partial_FeedbackTableToOperators_"
					},
					"properties": {
						"properties": {},
						"additionalProperties": {
							"$ref": "#/components/schemas/Partial_TextOperators_"
						},
						"type": "object"
					},
					"request": {
						"$ref": "#/components/schemas/Partial_RequestTableToOperators_"
					},
					"request_response_search": {
						"$ref": "#/components/schemas/Partial_RequestResponseSearchToOperators_"
					},
					"response": {
						"$ref": "#/components/schemas/Partial_ResponseTableToOperators_"
					},
					"request_response_rmt": {
						"$ref": "#/components/schemas/Partial_RequestResponseRMTToOperators_"
					},
					"sessions_request_response_rmt": {
						"$ref": "#/components/schemas/Partial_SessionsRequestResponseRMTToOperators_"
					},
					"values": {
						"properties": {},
						"additionalProperties": {
							"$ref": "#/components/schemas/Partial_TextOperators_"
						},
						"type": "object"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"FilterLeafSubset_feedback-or-request-or-response-or-properties-or-values-or-request_response_search-or-cache_hits-or-request_response_rmt-or-sessions_request_response_rmt_": {
				"$ref": "#/components/schemas/Pick_FilterLeaf.feedback-or-request-or-response-or-properties-or-values-or-request_response_search-or-cache_hits-or-request_response_rmt-or-sessions_request_response_rmt_"
			},
			"RequestFilterNode": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/FilterLeafSubset_feedback-or-request-or-response-or-properties-or-values-or-request_response_search-or-cache_hits-or-request_response_rmt-or-sessions_request_response_rmt_"
					},
					{
						"$ref": "#/components/schemas/RequestFilterBranch"
					},
					{
						"type": "string",
						"enum": [
							"all"
						]
					}
				]
			},
			"RequestFilterBranch": {
				"properties": {
					"right": {
						"$ref": "#/components/schemas/RequestFilterNode"
					},
					"operator": {
						"type": "string",
						"enum": [
							"or",
							"and"
						]
					},
					"left": {
						"$ref": "#/components/schemas/RequestFilterNode"
					}
				},
				"required": [
					"right",
					"operator",
					"left"
				],
				"type": "object"
			},
			"SortLeafRequest": {
				"properties": {
					"random": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"created_at": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"cache_created_at": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"latency": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"last_active": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"total_tokens": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"completion_tokens": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"prompt_tokens": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"user_id": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"body_model": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"is_cached": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"request_prompt": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"response_text": {
						"$ref": "#/components/schemas/SortDirection"
					},
					"properties": {
						"properties": {},
						"additionalProperties": {
							"$ref": "#/components/schemas/SortDirection"
						},
						"type": "object"
					},
					"values": {
						"properties": {},
						"additionalProperties": {
							"$ref": "#/components/schemas/SortDirection"
						},
						"type": "object"
					},
					"cost_usd": {
						"$ref": "#/components/schemas/SortDirection"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"RequestQueryParams": {
				"properties": {
					"filter": {
						"$ref": "#/components/schemas/RequestFilterNode"
					},
					"offset": {
						"type": "number",
						"format": "double"
					},
					"limit": {
						"type": "number",
						"format": "double"
					},
					"sort": {
						"$ref": "#/components/schemas/SortLeafRequest"
					},
					"isCached": {
						"type": "boolean"
					},
					"includeInputs": {
						"type": "boolean"
					},
					"isPartOfExperiment": {
						"type": "boolean"
					},
					"isScored": {
						"type": "boolean"
					}
				},
				"required": [
					"filter"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_HeliconeRequest_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/HeliconeRequest"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_HeliconeRequest.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_HeliconeRequest_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"HeliconeRequestAsset": {
				"properties": {
					"assetUrl": {
						"type": "string"
					}
				},
				"required": [
					"assetUrl"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_HeliconeRequestAsset_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/HeliconeRequestAsset"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_HeliconeRequestAsset.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_HeliconeRequestAsset_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"Record_string.number-or-boolean-or-undefined_": {
				"properties": {},
				"additionalProperties": {
					"anyOf": [
						{
							"type": "number",
							"format": "double"
						},
						{
							"type": "boolean"
						}
					]
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"Scores": {
				"$ref": "#/components/schemas/Record_string.number-or-boolean-or-undefined_"
			},
			"ScoreRequest": {
				"properties": {
					"scores": {
						"$ref": "#/components/schemas/Scores"
					}
				},
				"required": [
					"scores"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PromptsResult": {
				"properties": {
					"id": {
						"type": "string"
					},
					"user_defined_id": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"pretty_name": {
						"type": "string"
					},
					"created_at": {
						"type": "string"
					},
					"major_version": {
						"type": "number",
						"format": "double"
					},
					"metadata": {
						"$ref": "#/components/schemas/Record_string.any_"
					}
				},
				"required": [
					"id",
					"user_defined_id",
					"description",
					"pretty_name",
					"created_at",
					"major_version"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_PromptsResult-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/PromptsResult"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_PromptsResult-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_PromptsResult-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"Partial_PromptToOperators_": {
				"properties": {
					"id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"user_defined_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Pick_FilterLeaf.prompt_v2_": {
				"properties": {
					"prompt_v2": {
						"$ref": "#/components/schemas/Partial_PromptToOperators_"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"FilterLeafSubset_prompt_v2_": {
				"$ref": "#/components/schemas/Pick_FilterLeaf.prompt_v2_"
			},
			"PromptsFilterNode": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/FilterLeafSubset_prompt_v2_"
					},
					{
						"$ref": "#/components/schemas/PromptsFilterBranch"
					},
					{
						"type": "string",
						"enum": [
							"all"
						]
					}
				]
			},
			"PromptsFilterBranch": {
				"properties": {
					"right": {
						"$ref": "#/components/schemas/PromptsFilterNode"
					},
					"operator": {
						"type": "string",
						"enum": [
							"or",
							"and"
						]
					},
					"left": {
						"$ref": "#/components/schemas/PromptsFilterNode"
					}
				},
				"required": [
					"right",
					"operator",
					"left"
				],
				"type": "object"
			},
			"PromptsQueryParams": {
				"properties": {
					"filter": {
						"$ref": "#/components/schemas/PromptsFilterNode"
					}
				},
				"required": [
					"filter"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PromptResult": {
				"properties": {
					"id": {
						"type": "string"
					},
					"user_defined_id": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"pretty_name": {
						"type": "string"
					},
					"major_version": {
						"type": "number",
						"format": "double"
					},
					"latest_version_id": {
						"type": "string"
					},
					"latest_model_used": {
						"type": "string"
					},
					"created_at": {
						"type": "string"
					},
					"last_used": {
						"type": "string"
					},
					"versions": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"metadata": {
						"$ref": "#/components/schemas/Record_string.any_"
					}
				},
				"required": [
					"id",
					"user_defined_id",
					"description",
					"pretty_name",
					"major_version",
					"latest_version_id",
					"latest_model_used",
					"created_at",
					"last_used",
					"versions"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_PromptResult_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/PromptResult"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_PromptResult.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_PromptResult_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"PromptQueryParams": {
				"properties": {
					"timeFilter": {
						"properties": {
							"end": {
								"type": "string"
							},
							"start": {
								"type": "string"
							}
						},
						"required": [
							"end",
							"start"
						],
						"type": "object"
					}
				},
				"required": [
					"timeFilter"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreatePromptResponse": {
				"properties": {
					"id": {
						"type": "string"
					},
					"prompt_version_id": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"prompt_version_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_CreatePromptResponse_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/CreatePromptResponse"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_CreatePromptResponse.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_CreatePromptResponse_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess__metadata-Record_string.any___": {
				"properties": {
					"data": {
						"properties": {
							"metadata": {
								"$ref": "#/components/schemas/Record_string.any_"
							}
						},
						"required": [
							"metadata"
						],
						"type": "object"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result__metadata-Record_string.any__.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess__metadata-Record_string.any___"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"PromptEditSubversionLabelParams": {
				"properties": {
					"label": {
						"type": "string"
					}
				},
				"required": [
					"label"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PromptEditSubversionTemplateParams": {
				"properties": {
					"heliconeTemplate": {},
					"experimentId": {
						"type": "string"
					}
				},
				"required": [
					"heliconeTemplate"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PromptVersionResult": {
				"properties": {
					"id": {
						"type": "string"
					},
					"minor_version": {
						"type": "number",
						"format": "double"
					},
					"major_version": {
						"type": "number",
						"format": "double"
					},
					"prompt_v2": {
						"type": "string"
					},
					"model": {
						"type": "string"
					},
					"helicone_template": {
						"type": "string"
					},
					"created_at": {
						"type": "string"
					},
					"metadata": {
						"$ref": "#/components/schemas/Record_string.any_"
					},
					"parent_prompt_version": {
						"type": "string",
						"nullable": true
					},
					"experiment_id": {
						"type": "string",
						"nullable": true
					},
					"updated_at": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"minor_version",
					"major_version",
					"prompt_v2",
					"model",
					"helicone_template",
					"created_at",
					"metadata"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_PromptVersionResult_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/PromptVersionResult"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_PromptVersionResult.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_PromptVersionResult_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"PromptCreateSubversionParams": {
				"properties": {
					"newHeliconeTemplate": {},
					"isMajorVersion": {
						"type": "boolean"
					},
					"metadata": {
						"$ref": "#/components/schemas/Record_string.any_"
					},
					"experimentId": {
						"type": "string"
					},
					"bumpForMajorPromptVersionId": {
						"type": "string"
					}
				},
				"required": [
					"newHeliconeTemplate"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PromptInputRecord": {
				"properties": {
					"id": {
						"type": "string"
					},
					"inputs": {
						"$ref": "#/components/schemas/Record_string.string_"
					},
					"dataset_row_id": {
						"type": "string"
					},
					"source_request": {
						"type": "string"
					},
					"prompt_version": {
						"type": "string"
					},
					"created_at": {
						"type": "string"
					},
					"response_body": {
						"type": "string"
					},
					"request_body": {
						"type": "string"
					},
					"auto_prompt_inputs": {
						"items": {},
						"type": "array"
					}
				},
				"required": [
					"id",
					"inputs",
					"source_request",
					"prompt_version",
					"created_at",
					"auto_prompt_inputs"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_PromptInputRecord-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/PromptInputRecord"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_PromptInputRecord-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_PromptInputRecord-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess__id-string--created_at-string--num_hypotheses-number--dataset-string--meta-Record_string.any__-Array_": {
				"properties": {
					"data": {
						"items": {
							"properties": {
								"meta": {
									"$ref": "#/components/schemas/Record_string.any_"
								},
								"dataset": {
									"type": "string"
								},
								"num_hypotheses": {
									"type": "number",
									"format": "double"
								},
								"created_at": {
									"type": "string"
								},
								"id": {
									"type": "string"
								}
							},
							"required": [
								"meta",
								"dataset",
								"num_hypotheses",
								"created_at",
								"id"
							],
							"type": "object"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result__id-string--created_at-string--num_hypotheses-number--dataset-string--meta-Record_string.any__-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess__id-string--created_at-string--num_hypotheses-number--dataset-string--meta-Record_string.any__-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess_PromptVersionResult-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/PromptVersionResult"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_PromptVersionResult-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_PromptVersionResult-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"Partial_PromptVersionsToOperators_": {
				"properties": {
					"minor_version": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"major_version": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"prompt_v2": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Pick_FilterLeaf.prompts_versions_": {
				"properties": {
					"prompts_versions": {
						"$ref": "#/components/schemas/Partial_PromptVersionsToOperators_"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"FilterLeafSubset_prompts_versions_": {
				"$ref": "#/components/schemas/Pick_FilterLeaf.prompts_versions_"
			},
			"PromptVersionsFilterNode": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/FilterLeafSubset_prompts_versions_"
					},
					{
						"$ref": "#/components/schemas/PromptVersionsFilterBranch"
					},
					{
						"type": "string",
						"enum": [
							"all"
						]
					}
				]
			},
			"PromptVersionsFilterBranch": {
				"properties": {
					"right": {
						"$ref": "#/components/schemas/PromptVersionsFilterNode"
					},
					"operator": {
						"type": "string",
						"enum": [
							"or",
							"and"
						]
					},
					"left": {
						"$ref": "#/components/schemas/PromptVersionsFilterNode"
					}
				},
				"required": [
					"right",
					"operator",
					"left"
				],
				"type": "object"
			},
			"PromptVersionsQueryParams": {
				"properties": {
					"filter": {
						"$ref": "#/components/schemas/PromptVersionsFilterNode"
					},
					"includeExperimentVersions": {
						"type": "boolean"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"PromptVersionResultCompiled": {
				"properties": {
					"id": {
						"type": "string"
					},
					"minor_version": {
						"type": "number",
						"format": "double"
					},
					"major_version": {
						"type": "number",
						"format": "double"
					},
					"prompt_v2": {
						"type": "string"
					},
					"model": {
						"type": "string"
					},
					"prompt_compiled": {}
				},
				"required": [
					"id",
					"minor_version",
					"major_version",
					"prompt_v2",
					"model",
					"prompt_compiled"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_PromptVersionResultCompiled_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/PromptVersionResultCompiled"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_PromptVersionResultCompiled.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_PromptVersionResultCompiled_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"PromptVersiosQueryParamsCompiled": {
				"properties": {
					"filter": {
						"$ref": "#/components/schemas/PromptVersionsFilterNode"
					},
					"includeExperimentVersions": {
						"type": "boolean"
					},
					"inputs": {
						"$ref": "#/components/schemas/Record_string.string_"
					}
				},
				"required": [
					"inputs"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PromptVersionResultFilled": {
				"properties": {
					"id": {
						"type": "string"
					},
					"minor_version": {
						"type": "number",
						"format": "double"
					},
					"major_version": {
						"type": "number",
						"format": "double"
					},
					"prompt_v2": {
						"type": "string"
					},
					"model": {
						"type": "string"
					},
					"filled_helicone_template": {}
				},
				"required": [
					"id",
					"minor_version",
					"major_version",
					"prompt_v2",
					"model",
					"filled_helicone_template"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_PromptVersionResultFilled_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/PromptVersionResultFilled"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_PromptVersionResultFilled.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_PromptVersionResultFilled_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"EvaluatorResult": {
				"properties": {
					"id": {
						"type": "string"
					},
					"created_at": {
						"type": "string"
					},
					"scoring_type": {
						"type": "string"
					},
					"llm_template": {},
					"organization_id": {
						"type": "string"
					},
					"updated_at": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"code_template": {},
					"last_mile_config": {}
				},
				"required": [
					"id",
					"created_at",
					"scoring_type",
					"llm_template",
					"organization_id",
					"updated_at",
					"name",
					"code_template",
					"last_mile_config"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_EvaluatorResult_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/EvaluatorResult"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_EvaluatorResult.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_EvaluatorResult_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"CreateEvaluatorParams": {
				"properties": {
					"scoring_type": {
						"type": "string"
					},
					"llm_template": {},
					"name": {
						"type": "string"
					},
					"code_template": {},
					"last_mile_config": {}
				},
				"required": [
					"scoring_type",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_EvaluatorResult-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/EvaluatorResult"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_EvaluatorResult-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_EvaluatorResult-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"UpdateEvaluatorParams": {
				"properties": {
					"scoring_type": {
						"type": "string"
					},
					"llm_template": {},
					"code_template": {},
					"name": {
						"type": "string"
					},
					"last_mile_config": {}
				},
				"type": "object",
				"additionalProperties": false
			},
			"EvaluatorExperiment": {
				"properties": {
					"experiment_name": {
						"type": "string"
					},
					"experiment_created_at": {
						"type": "string"
					},
					"experiment_id": {
						"type": "string"
					}
				},
				"required": [
					"experiment_name",
					"experiment_created_at",
					"experiment_id"
				],
				"type": "object"
			},
			"ResultSuccess_EvaluatorExperiment-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/EvaluatorExperiment"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_EvaluatorExperiment-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_EvaluatorExperiment-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"OnlineEvaluatorByEvaluatorId": {
				"properties": {
					"config": {},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"config",
					"id"
				],
				"type": "object"
			},
			"ResultSuccess_OnlineEvaluatorByEvaluatorId-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/OnlineEvaluatorByEvaluatorId"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_OnlineEvaluatorByEvaluatorId-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_OnlineEvaluatorByEvaluatorId-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"CreateOnlineEvaluatorParams": {
				"properties": {
					"config": {
						"$ref": "#/components/schemas/Record_string.any_"
					}
				},
				"required": [
					"config"
				],
				"type": "object"
			},
			"ResultSuccess__output-string--traces-string-Array--statusCode_63_-number__": {
				"properties": {
					"data": {
						"properties": {
							"statusCode": {
								"type": "number",
								"format": "double"
							},
							"traces": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"output": {
								"type": "string"
							}
						},
						"required": [
							"traces",
							"output"
						],
						"type": "object"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result__output-string--traces-string-Array--statusCode_63_-number_.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess__output-string--traces-string-Array--statusCode_63_-number__"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"TestInput": {
				"properties": {
					"promptTemplate": {
						"type": "string"
					},
					"inputs": {
						"properties": {
							"autoInputs": {
								"$ref": "#/components/schemas/Record_string.string_"
							},
							"inputs": {
								"$ref": "#/components/schemas/Record_string.string_"
							}
						},
						"required": [
							"inputs"
						],
						"type": "object"
					},
					"outputBody": {
						"type": "string"
					},
					"inputBody": {
						"type": "string"
					}
				},
				"required": [
					"inputs",
					"outputBody",
					"inputBody"
				],
				"type": "object"
			},
			"EvaluatorScore": {
				"properties": {
					"score": {
						"anyOf": [
							{
								"type": "number",
								"format": "double"
							},
							{
								"type": "boolean"
							}
						]
					}
				},
				"required": [
					"score"
				],
				"type": "object"
			},
			"ResultSuccess_EvaluatorScore_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/EvaluatorScore"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_EvaluatorScore.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_EvaluatorScore_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"EvaluatorScoreResult": {
				"$ref": "#/components/schemas/Result_EvaluatorScore.string_"
			},
			"EvaluatorConfig": {
				"properties": {
					"evaluator_code_template": {
						"type": "string"
					},
					"evaluator_llm_template": {
						"type": "string"
					},
					"evaluator_scoring_type": {
						"type": "string"
					}
				},
				"required": [
					"evaluator_scoring_type"
				],
				"type": "object"
			},
			"ResultSuccess__score-number--input-string--output-string--ground_truth_63_-string__": {
				"properties": {
					"data": {
						"properties": {
							"ground_truth": {
								"type": "string"
							},
							"output": {
								"type": "string"
							},
							"input": {
								"type": "string"
							},
							"score": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"output",
							"input",
							"score"
						],
						"type": "object"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result__score-number--input-string--output-string--ground_truth_63_-string_.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess__score-number--input-string--output-string--ground_truth_63_-string__"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"DataEntry": {
				"anyOf": [
					{
						"properties": {
							"_type": {
								"type": "string",
								"enum": [
									"system-prompt"
								],
								"nullable": false
							}
						},
						"required": [
							"_type"
						],
						"type": "object"
					},
					{
						"properties": {
							"inputKey": {
								"type": "string"
							},
							"_type": {
								"type": "string",
								"enum": [
									"prompt-input"
								],
								"nullable": false
							}
						},
						"required": [
							"inputKey",
							"_type"
						],
						"type": "object"
					},
					{
						"properties": {
							"content": {
								"type": "string",
								"enum": [
									"jsonify",
									"message"
								]
							},
							"_type": {
								"type": "string",
								"enum": [
									"input-body"
								],
								"nullable": false
							}
						},
						"required": [
							"content",
							"_type"
						],
						"type": "object"
					},
					{
						"properties": {
							"content": {
								"type": "string",
								"enum": [
									"jsonify",
									"message"
								]
							},
							"_type": {
								"type": "string",
								"enum": [
									"output-body"
								],
								"nullable": false
							}
						},
						"required": [
							"content",
							"_type"
						],
						"type": "object"
					}
				]
			},
			"BaseLastMileConfigForm": {
				"properties": {
					"output": {
						"$ref": "#/components/schemas/DataEntry"
					},
					"input": {
						"$ref": "#/components/schemas/DataEntry"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"output",
					"input",
					"name"
				],
				"type": "object"
			},
			"LastMileConfigForm": {
				"allOf": [
					{
						"$ref": "#/components/schemas/BaseLastMileConfigForm"
					},
					{
						"anyOf": [
							{
								"properties": {
									"_type": {
										"type": "string",
										"enum": [
											"relevance",
											"context_relevance"
										]
									}
								},
								"required": [
									"_type"
								],
								"type": "object"
							},
							{
								"properties": {
									"groundTruth": {
										"$ref": "#/components/schemas/DataEntry"
									},
									"_type": {
										"type": "string",
										"enum": [
											"faithfulness"
										],
										"nullable": false
									}
								},
								"required": [
									"groundTruth",
									"_type"
								],
								"type": "object"
							}
						]
					}
				]
			},
			"EvaluatorStats": {
				"properties": {
					"averageScore": {
						"type": "number",
						"format": "double"
					},
					"totalUses": {
						"type": "number",
						"format": "double"
					},
					"recentTrend": {
						"type": "string",
						"enum": [
							"up",
							"down",
							"stable"
						]
					},
					"scoreDistribution": {
						"items": {
							"properties": {
								"count": {
									"type": "number",
									"format": "double"
								},
								"range": {
									"type": "string"
								}
							},
							"required": [
								"count",
								"range"
							],
							"type": "object"
						},
						"type": "array"
					},
					"timeSeriesData": {
						"items": {
							"properties": {
								"value": {
									"type": "number",
									"format": "double"
								},
								"date": {
									"type": "string"
								}
							},
							"required": [
								"value",
								"date"
							],
							"type": "object"
						},
						"type": "array"
					}
				},
				"required": [
					"averageScore",
					"totalUses",
					"recentTrend",
					"scoreDistribution",
					"timeSeriesData"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_EvaluatorStats_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/EvaluatorStats"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_EvaluatorStats.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_EvaluatorStats_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess__experimentId-string__": {
				"properties": {
					"data": {
						"properties": {
							"experimentId": {
								"type": "string"
							}
						},
						"required": [
							"experimentId"
						],
						"type": "object"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result__experimentId-string_.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess__experimentId-string__"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ExperimentV2": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"original_prompt_version": {
						"type": "string"
					},
					"copied_original_prompt_version": {
						"type": "string",
						"nullable": true
					},
					"input_keys": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true
					},
					"created_at": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name",
					"original_prompt_version",
					"copied_original_prompt_version",
					"input_keys",
					"created_at"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_ExperimentV2-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/ExperimentV2"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_ExperimentV2-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_ExperimentV2-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ExperimentV2Output": {
				"properties": {
					"id": {
						"type": "string"
					},
					"request_id": {
						"type": "string"
					},
					"is_original": {
						"type": "boolean"
					},
					"prompt_version_id": {
						"type": "string"
					},
					"created_at": {
						"type": "string"
					},
					"input_record_id": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"request_id",
					"is_original",
					"prompt_version_id",
					"created_at",
					"input_record_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ExperimentV2Row": {
				"properties": {
					"id": {
						"type": "string"
					},
					"inputs": {
						"$ref": "#/components/schemas/Record_string.string_"
					},
					"prompt_version": {
						"type": "string"
					},
					"requests": {
						"items": {
							"$ref": "#/components/schemas/ExperimentV2Output"
						},
						"type": "array"
					},
					"auto_prompt_inputs": {
						"items": {},
						"type": "array"
					}
				},
				"required": [
					"id",
					"inputs",
					"prompt_version",
					"requests",
					"auto_prompt_inputs"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ExtendedExperimentData": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"original_prompt_version": {
						"type": "string"
					},
					"copied_original_prompt_version": {
						"type": "string",
						"nullable": true
					},
					"input_keys": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true
					},
					"created_at": {
						"type": "string"
					},
					"rows": {
						"items": {
							"$ref": "#/components/schemas/ExperimentV2Row"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"name",
					"original_prompt_version",
					"copied_original_prompt_version",
					"input_keys",
					"created_at",
					"rows"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_ExtendedExperimentData_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/ExtendedExperimentData"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_ExtendedExperimentData.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_ExtendedExperimentData_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"CreateNewPromptVersionForExperimentParams": {
				"properties": {
					"newHeliconeTemplate": {},
					"isMajorVersion": {
						"type": "boolean"
					},
					"metadata": {
						"$ref": "#/components/schemas/Record_string.any_"
					},
					"experimentId": {
						"type": "string"
					},
					"bumpForMajorPromptVersionId": {
						"type": "string"
					},
					"parentPromptVersionId": {
						"type": "string"
					}
				},
				"required": [
					"newHeliconeTemplate",
					"parentPromptVersionId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Json": {
				"anyOf": [
					{
						"type": "string"
					},
					{
						"type": "number",
						"format": "double"
					},
					{
						"type": "boolean"
					},
					{
						"properties": {},
						"additionalProperties": {
							"$ref": "#/components/schemas/Json"
						},
						"type": "object"
					},
					{
						"items": {
							"$ref": "#/components/schemas/Json"
						},
						"type": "array"
					}
				],
				"nullable": true
			},
			"ExperimentV2PromptVersion": {
				"properties": {
					"created_at": {
						"type": "string",
						"nullable": true
					},
					"experiment_id": {
						"type": "string",
						"nullable": true
					},
					"helicone_template": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Json"
							}
						],
						"nullable": true
					},
					"id": {
						"type": "string"
					},
					"major_version": {
						"type": "number",
						"format": "double"
					},
					"metadata": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Json"
							}
						],
						"nullable": true
					},
					"minor_version": {
						"type": "number",
						"format": "double"
					},
					"model": {
						"type": "string",
						"nullable": true
					},
					"organization": {
						"type": "string"
					},
					"prompt_v2": {
						"type": "string"
					},
					"soft_delete": {
						"type": "boolean",
						"nullable": true
					}
				},
				"required": [
					"created_at",
					"experiment_id",
					"helicone_template",
					"id",
					"major_version",
					"metadata",
					"minor_version",
					"model",
					"organization",
					"prompt_v2",
					"soft_delete"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_ExperimentV2PromptVersion-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/ExperimentV2PromptVersion"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_ExperimentV2PromptVersion-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_ExperimentV2PromptVersion-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess_string-Array_": {
				"properties": {
					"data": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_string-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_string-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess_string_": {
				"properties": {
					"data": {
						"type": "string"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_string.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_string_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess_boolean_": {
				"properties": {
					"data": {
						"type": "boolean"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_boolean.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_boolean_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ScoreV2": {
				"properties": {
					"valueType": {
						"type": "string"
					},
					"value": {
						"anyOf": [
							{
								"type": "number",
								"format": "double"
							},
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"max": {
						"type": "number",
						"format": "double"
					},
					"min": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"valueType",
					"value",
					"max",
					"min"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Record_string.ScoreV2_": {
				"properties": {},
				"additionalProperties": {
					"$ref": "#/components/schemas/ScoreV2"
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"ResultSuccess_Record_string.ScoreV2__": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/Record_string.ScoreV2_"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_Record_string.ScoreV2_.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_Record_string.ScoreV2__"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess_ScoreV2-or-null_": {
				"properties": {
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/ScoreV2"
							}
						],
						"nullable": true
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_ScoreV2-or-null.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_ScoreV2-or-null_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"OTELTrace": {
				"properties": {
					"resourceSpans": {
						"items": {
							"properties": {
								"scopeSpans": {
									"items": {
										"properties": {
											"spans": {
												"items": {
													"properties": {
														"droppedLinksCount": {
															"type": "number",
															"format": "double"
														},
														"links": {
															"items": {},
															"type": "array"
														},
														"status": {
															"properties": {
																"code": {
																	"type": "number",
																	"format": "double"
																}
															},
															"required": [
																"code"
															],
															"type": "object"
														},
														"droppedEventsCount": {
															"type": "number",
															"format": "double"
														},
														"events": {
															"items": {},
															"type": "array"
														},
														"droppedAttributesCount": {
															"type": "number",
															"format": "double"
														},
														"attributes": {
															"items": {
																"properties": {
																	"value": {
																		"properties": {
																			"intValue": {
																				"type": "number",
																				"format": "double"
																			},
																			"stringValue": {
																				"type": "string"
																			}
																		},
																		"type": "object"
																	},
																	"key": {
																		"type": "string"
																	}
																},
																"required": [
																	"value",
																	"key"
																],
																"type": "object"
															},
															"type": "array"
														},
														"endTimeUnixNano": {
															"type": "string"
														},
														"startTimeUnixNano": {
															"type": "string"
														},
														"kind": {
															"type": "number",
															"format": "double"
														},
														"name": {
															"type": "string"
														},
														"spanId": {
															"type": "string"
														},
														"traceId": {
															"type": "string"
														}
													},
													"required": [
														"droppedLinksCount",
														"links",
														"status",
														"droppedEventsCount",
														"events",
														"droppedAttributesCount",
														"attributes",
														"endTimeUnixNano",
														"startTimeUnixNano",
														"kind",
														"name",
														"spanId",
														"traceId"
													],
													"type": "object"
												},
												"type": "array"
											},
											"scope": {
												"properties": {
													"version": {
														"type": "string"
													},
													"name": {
														"type": "string"
													}
												},
												"required": [
													"version",
													"name"
												],
												"type": "object"
											}
										},
										"required": [
											"spans",
											"scope"
										],
										"type": "object"
									},
									"type": "array"
								},
								"resource": {
									"properties": {
										"droppedAttributesCount": {
											"type": "number",
											"format": "double"
										},
										"attributes": {
											"items": {
												"properties": {
													"value": {
														"properties": {
															"arrayValue": {
																"properties": {
																	"values": {
																		"items": {
																			"properties": {
																				"stringValue": {
																					"type": "string"
																				}
																			},
																			"required": [
																				"stringValue"
																			],
																			"type": "object"
																		},
																		"type": "array"
																	}
																},
																"required": [
																	"values"
																],
																"type": "object"
															},
															"intValue": {
																"type": "number",
																"format": "double"
															},
															"stringValue": {
																"type": "string"
															}
														},
														"type": "object"
													},
													"key": {
														"type": "string"
													}
												},
												"required": [
													"value",
													"key"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"droppedAttributesCount",
										"attributes"
									],
									"type": "object"
								}
							},
							"required": [
								"scopeSpans",
								"resource"
							],
							"type": "object"
						},
						"type": "array"
					}
				},
				"required": [
					"resourceSpans"
				],
				"type": "object"
			},
			"UpgradeToProRequest": {
				"properties": {
					"addons": {
						"properties": {
							"evals": {
								"type": "boolean"
							},
							"experiments": {
								"type": "boolean"
							},
							"prompts": {
								"type": "boolean"
							},
							"alerts": {
								"type": "boolean"
							}
						},
						"type": "object"
					},
					"seats": {
						"type": "number",
						"format": "double"
					},
					"ui_mode": {
						"type": "string",
						"enum": [
							"embedded",
							"hosted"
						]
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"UpgradeToTeamBundleRequest": {
				"properties": {
					"ui_mode": {
						"type": "string",
						"enum": [
							"embedded",
							"hosted"
						]
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"LLMUsage": {
				"properties": {
					"model": {
						"type": "string"
					},
					"provider": {
						"type": "string"
					},
					"prompt_tokens": {
						"type": "number",
						"format": "double"
					},
					"completion_tokens": {
						"type": "number",
						"format": "double"
					},
					"total_count": {
						"type": "number",
						"format": "double"
					},
					"amount": {
						"type": "number",
						"format": "double"
					},
					"description": {
						"type": "string"
					},
					"totalCost": {
						"properties": {
							"prompt_token": {
								"type": "number",
								"format": "double"
							},
							"completion_token": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"prompt_token",
							"completion_token"
						],
						"type": "object"
					}
				},
				"required": [
					"model",
					"provider",
					"prompt_tokens",
					"completion_tokens",
					"total_count",
					"amount",
					"description",
					"totalCost"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SessionResult": {
				"properties": {
					"created_at": {
						"type": "string"
					},
					"latest_request_created_at": {
						"type": "string"
					},
					"session_id": {
						"type": "string"
					},
					"session_name": {
						"type": "string"
					},
					"total_cost": {
						"type": "number",
						"format": "double"
					},
					"total_requests": {
						"type": "number",
						"format": "double"
					},
					"prompt_tokens": {
						"type": "number",
						"format": "double"
					},
					"completion_tokens": {
						"type": "number",
						"format": "double"
					},
					"total_tokens": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"created_at",
					"latest_request_created_at",
					"session_id",
					"session_name",
					"total_cost",
					"total_requests",
					"prompt_tokens",
					"completion_tokens",
					"total_tokens"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_SessionResult-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/SessionResult"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_SessionResult-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_SessionResult-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"Pick_FilterLeaf.request_response_rmt-or-sessions_request_response_rmt_": {
				"properties": {
					"request_response_rmt": {
						"$ref": "#/components/schemas/Partial_RequestResponseRMTToOperators_"
					},
					"sessions_request_response_rmt": {
						"$ref": "#/components/schemas/Partial_SessionsRequestResponseRMTToOperators_"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"FilterLeafSubset_request_response_rmt-or-sessions_request_response_rmt_": {
				"$ref": "#/components/schemas/Pick_FilterLeaf.request_response_rmt-or-sessions_request_response_rmt_"
			},
			"SessionFilterNode": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/FilterLeafSubset_request_response_rmt-or-sessions_request_response_rmt_"
					},
					{
						"$ref": "#/components/schemas/SessionFilterBranch"
					},
					{
						"type": "string",
						"enum": [
							"all"
						]
					}
				]
			},
			"SessionFilterBranch": {
				"properties": {
					"right": {
						"$ref": "#/components/schemas/SessionFilterNode"
					},
					"operator": {
						"type": "string",
						"enum": [
							"or",
							"and"
						]
					},
					"left": {
						"$ref": "#/components/schemas/SessionFilterNode"
					}
				},
				"required": [
					"right",
					"operator",
					"left"
				],
				"type": "object"
			},
			"SessionQueryParams": {
				"properties": {
					"search": {
						"type": "string"
					},
					"timeFilter": {
						"properties": {
							"endTimeUnixMs": {
								"type": "number",
								"format": "double"
							},
							"startTimeUnixMs": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"endTimeUnixMs",
							"startTimeUnixMs"
						],
						"type": "object"
					},
					"nameEquals": {
						"type": "string"
					},
					"timezoneDifference": {
						"type": "number",
						"format": "double"
					},
					"filter": {
						"$ref": "#/components/schemas/SessionFilterNode"
					}
				},
				"required": [
					"search",
					"timeFilter",
					"timezoneDifference",
					"filter"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SessionNameResult": {
				"properties": {
					"name": {
						"type": "string"
					},
					"created_at": {
						"type": "string"
					},
					"total_cost": {
						"type": "number",
						"format": "double"
					},
					"last_used": {
						"type": "string"
					},
					"first_used": {
						"type": "string"
					},
					"session_count": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"name",
					"created_at",
					"total_cost",
					"last_used",
					"first_used",
					"session_count"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_SessionNameResult-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/SessionNameResult"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_SessionNameResult-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_SessionNameResult-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"SessionNameQueryParams": {
				"properties": {
					"nameContains": {
						"type": "string"
					},
					"timezoneDifference": {
						"type": "number",
						"format": "double"
					},
					"pSize": {
						"type": "string",
						"enum": [
							"p50",
							"p75",
							"p95",
							"p99",
							"p99.9"
						]
					},
					"useInterquartile": {
						"type": "boolean"
					}
				},
				"required": [
					"nameContains",
					"timezoneDifference"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SessionMetrics": {
				"properties": {
					"session_count": {
						"items": {
							"$ref": "#/components/schemas/HistogramRow"
						},
						"type": "array"
					},
					"session_duration": {
						"items": {
							"$ref": "#/components/schemas/HistogramRow"
						},
						"type": "array"
					},
					"session_cost": {
						"items": {
							"$ref": "#/components/schemas/HistogramRow"
						},
						"type": "array"
					}
				},
				"required": [
					"session_count",
					"session_duration",
					"session_cost"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_SessionMetrics_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/SessionMetrics"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_SessionMetrics.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_SessionMetrics_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"MetricsData": {
				"properties": {
					"totalRequests": {
						"type": "number",
						"format": "double"
					},
					"requestCountPrevious24h": {
						"type": "number",
						"format": "double"
					},
					"requestVolumeChange": {
						"type": "number",
						"format": "double"
					},
					"errorRate24h": {
						"type": "number",
						"format": "double"
					},
					"errorRatePrevious24h": {
						"type": "number",
						"format": "double"
					},
					"errorRateChange": {
						"type": "number",
						"format": "double"
					},
					"averageLatency": {
						"type": "number",
						"format": "double"
					},
					"averageLatencyPerToken": {
						"type": "number",
						"format": "double"
					},
					"latencyChange": {
						"type": "number",
						"format": "double"
					},
					"latencyPerTokenChange": {
						"type": "number",
						"format": "double"
					},
					"recentRequestCount": {
						"type": "number",
						"format": "double"
					},
					"recentErrorCount": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"totalRequests",
					"requestCountPrevious24h",
					"requestVolumeChange",
					"errorRate24h",
					"errorRatePrevious24h",
					"errorRateChange",
					"averageLatency",
					"averageLatencyPerToken",
					"latencyChange",
					"latencyPerTokenChange",
					"recentRequestCount",
					"recentErrorCount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TimeSeriesDataPoint": {
				"properties": {
					"timestamp": {
						"type": "string",
						"format": "date-time"
					},
					"errorCount": {
						"type": "number",
						"format": "double"
					},
					"requestCount": {
						"type": "number",
						"format": "double"
					},
					"averageLatency": {
						"type": "number",
						"format": "double"
					},
					"averageLatencyPerCompletionToken": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"timestamp",
					"errorCount",
					"requestCount",
					"averageLatency",
					"averageLatencyPerCompletionToken"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProviderMetrics": {
				"properties": {
					"providerName": {
						"type": "string"
					},
					"metrics": {
						"allOf": [
							{
								"$ref": "#/components/schemas/MetricsData"
							},
							{
								"properties": {
									"timeSeriesData": {
										"items": {
											"$ref": "#/components/schemas/TimeSeriesDataPoint"
										},
										"type": "array"
									}
								},
								"required": [
									"timeSeriesData"
								],
								"type": "object"
							}
						]
					}
				},
				"required": [
					"providerName",
					"metrics"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_ProviderMetrics-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/ProviderMetrics"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_ProviderMetrics-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_ProviderMetrics-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess_ProviderMetrics_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/ProviderMetrics"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_ProviderMetrics.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_ProviderMetrics_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"TimeFrame": {
				"type": "string",
				"enum": [
					"24h",
					"7d",
					"30d"
				]
			},
			"Property": {
				"properties": {
					"property": {
						"type": "string"
					}
				},
				"required": [
					"property"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_Property-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/Property"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_Property-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_Property-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess__value-string--cost-number_-Array_": {
				"properties": {
					"data": {
						"items": {
							"properties": {
								"cost": {
									"type": "number",
									"format": "double"
								},
								"value": {
									"type": "string"
								}
							},
							"required": [
								"cost",
								"value"
							],
							"type": "object"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result__value-string--cost-number_-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess__value-string--cost-number_-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"TimeFilterRequest": {
				"properties": {
					"timeFilter": {
						"properties": {
							"end": {
								"type": "string"
							},
							"start": {
								"type": "string"
							}
						},
						"required": [
							"end",
							"start"
						],
						"type": "object"
					}
				},
				"required": [
					"timeFilter"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess__apiKey-string__": {
				"properties": {
					"data": {
						"properties": {
							"apiKey": {
								"type": "string"
							}
						},
						"required": [
							"apiKey"
						],
						"type": "object"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result__apiKey-string_.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess__apiKey-string__"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess_number_": {
				"properties": {
					"data": {
						"type": "number",
						"format": "double"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_number.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_number_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess__cost-number--created_at_trunc-string_-Array_": {
				"properties": {
					"data": {
						"items": {
							"properties": {
								"created_at_trunc": {
									"type": "string"
								},
								"cost": {
									"type": "number",
									"format": "double"
								}
							},
							"required": [
								"created_at_trunc",
								"cost"
							],
							"type": "object"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result__cost-number--created_at_trunc-string_-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess__cost-number--created_at_trunc-string_-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"Pick_FilterLeaf.request_response_rmt_": {
				"properties": {
					"request_response_rmt": {
						"$ref": "#/components/schemas/Partial_RequestResponseRMTToOperators_"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"FilterLeafSubset_request_response_rmt_": {
				"$ref": "#/components/schemas/Pick_FilterLeaf.request_response_rmt_"
			},
			"RequestClickhouseFilterNode": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/FilterLeafSubset_request_response_rmt_"
					},
					{
						"$ref": "#/components/schemas/RequestClickhouseFilterBranch"
					},
					{
						"type": "string",
						"enum": [
							"all"
						]
					}
				]
			},
			"RequestClickhouseFilterBranch": {
				"properties": {
					"right": {
						"$ref": "#/components/schemas/RequestClickhouseFilterNode"
					},
					"operator": {
						"type": "string",
						"enum": [
							"or",
							"and"
						]
					},
					"left": {
						"$ref": "#/components/schemas/RequestClickhouseFilterNode"
					}
				},
				"required": [
					"right",
					"operator",
					"left"
				],
				"type": "object"
			},
			"TimeIncrement": {
				"type": "string",
				"enum": [
					"min",
					"hour",
					"day",
					"week",
					"month",
					"year"
				]
			},
			"DataOverTimeRequest": {
				"properties": {
					"timeFilter": {
						"properties": {
							"end": {
								"type": "string"
							},
							"start": {
								"type": "string"
							}
						},
						"required": [
							"end",
							"start"
						],
						"type": "object"
					},
					"userFilter": {
						"$ref": "#/components/schemas/RequestClickhouseFilterNode"
					},
					"dbIncrement": {
						"$ref": "#/components/schemas/TimeIncrement"
					},
					"timeZoneDifference": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"timeFilter",
					"userFilter",
					"dbIncrement",
					"timeZoneDifference"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MetricStats": {
				"properties": {
					"p99": {
						"type": "number",
						"format": "double"
					},
					"p95": {
						"type": "number",
						"format": "double"
					},
					"p90": {
						"type": "number",
						"format": "double"
					},
					"max": {
						"type": "number",
						"format": "double"
					},
					"min": {
						"type": "number",
						"format": "double"
					},
					"median": {
						"type": "number",
						"format": "double"
					},
					"average": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"p99",
					"p95",
					"p90",
					"max",
					"min",
					"median",
					"average"
				],
				"type": "object"
			},
			"TokenMetricStats": {
				"allOf": [
					{
						"$ref": "#/components/schemas/MetricStats"
					},
					{
						"properties": {
							"medianPer1000Tokens": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"medianPer1000Tokens"
						],
						"type": "object"
					}
				]
			},
			"TimeSeriesMetric": {
				"properties": {
					"value": {
						"type": "number",
						"format": "double"
					},
					"timestamp": {
						"type": "string"
					}
				},
				"required": [
					"value",
					"timestamp"
				],
				"type": "object"
			},
			"Model": {
				"properties": {
					"timeSeriesData": {
						"properties": {
							"errorRate": {
								"items": {
									"$ref": "#/components/schemas/TimeSeriesMetric"
								},
								"type": "array"
							},
							"successRate": {
								"items": {
									"$ref": "#/components/schemas/TimeSeriesMetric"
								},
								"type": "array"
							},
							"ttft": {
								"items": {
									"$ref": "#/components/schemas/TimeSeriesMetric"
								},
								"type": "array"
							},
							"latency": {
								"items": {
									"$ref": "#/components/schemas/TimeSeriesMetric"
								},
								"type": "array"
							}
						},
						"required": [
							"errorRate",
							"successRate",
							"ttft",
							"latency"
						],
						"type": "object"
					},
					"requestStatus": {
						"properties": {
							"errorRate": {
								"type": "number",
								"format": "double"
							},
							"successRate": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"errorRate",
							"successRate"
						],
						"type": "object"
					},
					"geographicTtft": {
						"items": {
							"properties": {
								"median": {
									"type": "number",
									"format": "double"
								},
								"countryCode": {
									"type": "string"
								}
							},
							"required": [
								"median",
								"countryCode"
							],
							"type": "object"
						},
						"type": "array"
					},
					"geographicLatency": {
						"items": {
							"properties": {
								"median": {
									"type": "number",
									"format": "double"
								},
								"countryCode": {
									"type": "string"
								}
							},
							"required": [
								"median",
								"countryCode"
							],
							"type": "object"
						},
						"type": "array"
					},
					"feedback": {
						"properties": {
							"negativePercentage": {
								"type": "number",
								"format": "double"
							},
							"positivePercentage": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"negativePercentage",
							"positivePercentage"
						],
						"type": "object"
					},
					"costs": {
						"properties": {
							"completion_token": {
								"type": "number",
								"format": "double"
							},
							"prompt_token": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"completion_token",
							"prompt_token"
						],
						"type": "object"
					},
					"ttft": {
						"$ref": "#/components/schemas/MetricStats"
					},
					"latency": {
						"$ref": "#/components/schemas/TokenMetricStats"
					},
					"provider": {
						"type": "string"
					},
					"model": {
						"type": "string"
					}
				},
				"required": [
					"timeSeriesData",
					"requestStatus",
					"geographicTtft",
					"geographicLatency",
					"feedback",
					"costs",
					"ttft",
					"latency",
					"provider",
					"model"
				],
				"type": "object"
			},
			"ResultSuccess_Model-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/Model"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_Model-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_Model-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ModelsToCompare": {
				"properties": {
					"provider": {
						"type": "string"
					},
					"names": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"parent": {
						"type": "string"
					}
				},
				"required": [
					"provider",
					"names",
					"parent"
				],
				"type": "object"
			},
			"ResultSuccess__model-string_-Array_": {
				"properties": {
					"data": {
						"items": {
							"properties": {
								"model": {
									"type": "string"
								}
							},
							"required": [
								"model"
							],
							"type": "object"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result__model-string_-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess__model-string_-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess__unsafe-boolean__": {
				"properties": {
					"data": {
						"properties": {
							"unsafe": {
								"type": "boolean"
							}
						},
						"required": [
							"unsafe"
						],
						"type": "object"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result__unsafe-boolean_.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess__unsafe-boolean__"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"IntegrationCreateParams": {
				"properties": {
					"integration_name": {
						"type": "string"
					},
					"settings": {
						"$ref": "#/components/schemas/Json"
					},
					"active": {
						"type": "boolean"
					}
				},
				"required": [
					"integration_name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Integration": {
				"properties": {
					"integration_name": {
						"type": "string"
					},
					"settings": {
						"$ref": "#/components/schemas/Json"
					},
					"active": {
						"type": "boolean"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_Array_Integration__": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/Integration"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_Array_Integration_.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_Array_Integration__"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"IntegrationUpdateParams": {
				"properties": {
					"integration_name": {
						"type": "string"
					},
					"settings": {
						"$ref": "#/components/schemas/Json"
					},
					"active": {
						"type": "boolean"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_Integration_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/Integration"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_Integration.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_Integration_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess_Array__id-string--name-string___": {
				"properties": {
					"data": {
						"items": {
							"properties": {
								"name": {
									"type": "string"
								},
								"id": {
									"type": "string"
								}
							},
							"required": [
								"name",
								"id"
							],
							"type": "object"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_Array__id-string--name-string__.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_Array__id-string--name-string___"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess__tableId-string--experimentId-string__": {
				"properties": {
					"data": {
						"properties": {
							"experimentId": {
								"type": "string"
							},
							"tableId": {
								"type": "string"
							}
						},
						"required": [
							"experimentId",
							"tableId"
						],
						"type": "object"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result__tableId-string--experimentId-string_.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess__tableId-string--experimentId-string__"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"CreateExperimentTableParams": {
				"properties": {
					"datasetId": {
						"type": "string"
					},
					"experimentMetadata": {
						"$ref": "#/components/schemas/Record_string.any_"
					},
					"promptVersionId": {
						"type": "string"
					},
					"newHeliconeTemplate": {
						"type": "string"
					},
					"isMajorVersion": {
						"type": "boolean"
					},
					"promptSubversionMetadata": {
						"$ref": "#/components/schemas/Record_string.any_"
					},
					"experimentTableMetadata": {
						"$ref": "#/components/schemas/Record_string.any_"
					}
				},
				"required": [
					"datasetId",
					"experimentMetadata",
					"promptVersionId",
					"newHeliconeTemplate",
					"isMajorVersion",
					"promptSubversionMetadata"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ExperimentTableColumn": {
				"properties": {
					"id": {
						"type": "string"
					},
					"columnName": {
						"type": "string"
					},
					"columnType": {
						"type": "string"
					},
					"hypothesisId": {
						"type": "string"
					},
					"cells": {
						"items": {
							"properties": {
								"metadata": {
									"$ref": "#/components/schemas/Record_string.any_"
								},
								"value": {
									"type": "string",
									"nullable": true
								},
								"requestId": {
									"type": "string"
								},
								"rowIndex": {
									"type": "number",
									"format": "double"
								},
								"id": {
									"type": "string"
								}
							},
							"required": [
								"value",
								"rowIndex",
								"id"
							],
							"type": "object"
						},
						"type": "array"
					},
					"metadata": {
						"$ref": "#/components/schemas/Record_string.any_"
					}
				},
				"required": [
					"id",
					"columnName",
					"columnType",
					"cells"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ExperimentTable": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"experimentId": {
						"type": "string"
					},
					"columns": {
						"items": {
							"$ref": "#/components/schemas/ExperimentTableColumn"
						},
						"type": "array"
					},
					"metadata": {
						"$ref": "#/components/schemas/Record_string.any_"
					}
				},
				"required": [
					"id",
					"name",
					"experimentId",
					"columns"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_ExperimentTable_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/ExperimentTable"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_ExperimentTable.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_ExperimentTable_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ExperimentTableSimplified": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"experimentId": {
						"type": "string"
					},
					"createdAt": {
						"type": "string"
					},
					"metadata": {},
					"columns": {
						"items": {
							"properties": {
								"columnType": {
									"type": "string"
								},
								"columnName": {
									"type": "string"
								},
								"id": {
									"type": "string"
								}
							},
							"required": [
								"columnType",
								"columnName",
								"id"
							],
							"type": "object"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"name",
					"experimentId",
					"createdAt",
					"columns"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_ExperimentTableSimplified_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/ExperimentTableSimplified"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_ExperimentTableSimplified.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_ExperimentTableSimplified_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess_ExperimentTableSimplified-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/ExperimentTableSimplified"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_ExperimentTableSimplified-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_ExperimentTableSimplified-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"PostgrestError": {
				"description": "Error format\n\n{@link https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes}",
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					},
					"details": {
						"type": "string"
					},
					"hint": {
						"type": "string"
					},
					"code": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"message",
					"details",
					"hint",
					"code"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultError_PostgrestError_": {
				"properties": {
					"data": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					},
					"error": {
						"$ref": "#/components/schemas/PostgrestError"
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"NewExperimentParams": {
				"properties": {
					"datasetId": {
						"type": "string"
					},
					"promptVersion": {
						"type": "string"
					},
					"model": {
						"type": "string"
					},
					"providerKeyId": {
						"type": "string"
					},
					"meta": {}
				},
				"required": [
					"datasetId",
					"promptVersion",
					"model",
					"providerKeyId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess__hypothesisId-string__": {
				"properties": {
					"data": {
						"properties": {
							"hypothesisId": {
								"type": "string"
							}
						},
						"required": [
							"hypothesisId"
						],
						"type": "object"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result__hypothesisId-string_.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess__hypothesisId-string__"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"Score": {
				"properties": {
					"valueType": {
						"type": "string"
					},
					"value": {
						"anyOf": [
							{
								"type": "number",
								"format": "double"
							},
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					}
				},
				"required": [
					"valueType",
					"value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Record_string.Score_": {
				"properties": {},
				"additionalProperties": {
					"$ref": "#/components/schemas/Score"
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"ResultSuccess__runsCount-number--scores-Record_string.Score___": {
				"properties": {
					"data": {
						"properties": {
							"scores": {
								"$ref": "#/components/schemas/Record_string.Score_"
							},
							"runsCount": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"scores",
							"runsCount"
						],
						"type": "object"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result__runsCount-number--scores-Record_string.Score__.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess__runsCount-number--scores-Record_string.Score___"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResponseObj": {
				"properties": {
					"body": {},
					"createdAt": {
						"type": "string"
					},
					"completionTokens": {
						"type": "number",
						"format": "double"
					},
					"promptTokens": {
						"type": "number",
						"format": "double"
					},
					"promptCacheWriteTokens": {
						"type": "number",
						"format": "double"
					},
					"promptCacheReadTokens": {
						"type": "number",
						"format": "double"
					},
					"delayMs": {
						"type": "number",
						"format": "double"
					},
					"model": {
						"type": "string"
					}
				},
				"required": [
					"body",
					"createdAt",
					"completionTokens",
					"promptTokens",
					"promptCacheWriteTokens",
					"promptCacheReadTokens",
					"delayMs",
					"model"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RequestObj": {
				"properties": {
					"id": {
						"type": "string"
					},
					"provider": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"provider"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ExperimentDatasetRow": {
				"properties": {
					"rowId": {
						"type": "string"
					},
					"inputRecord": {
						"properties": {
							"request": {
								"$ref": "#/components/schemas/RequestObj"
							},
							"response": {
								"$ref": "#/components/schemas/ResponseObj"
							},
							"autoInputs": {
								"items": {
									"$ref": "#/components/schemas/Record_string.string_"
								},
								"type": "array"
							},
							"inputs": {
								"$ref": "#/components/schemas/Record_string.string_"
							},
							"requestPath": {
								"type": "string"
							},
							"requestId": {
								"type": "string"
							},
							"id": {
								"type": "string"
							}
						},
						"required": [
							"request",
							"response",
							"autoInputs",
							"inputs",
							"requestPath",
							"requestId",
							"id"
						],
						"type": "object"
					},
					"rowIndex": {
						"type": "number",
						"format": "double"
					},
					"columnId": {
						"type": "string"
					},
					"scores": {
						"$ref": "#/components/schemas/Record_string.Score_"
					}
				},
				"required": [
					"rowId",
					"inputRecord",
					"rowIndex",
					"columnId",
					"scores"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ExperimentScores": {
				"properties": {
					"dataset": {
						"properties": {
							"scores": {
								"$ref": "#/components/schemas/Record_string.Score_"
							}
						},
						"required": [
							"scores"
						],
						"type": "object"
					},
					"hypothesis": {
						"properties": {
							"scores": {
								"$ref": "#/components/schemas/Record_string.Score_"
							},
							"runsCount": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"scores",
							"runsCount"
						],
						"type": "object"
					}
				},
				"required": [
					"dataset",
					"hypothesis"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Experiment": {
				"properties": {
					"id": {
						"type": "string"
					},
					"organization": {
						"type": "string"
					},
					"dataset": {
						"properties": {
							"rows": {
								"items": {
									"$ref": "#/components/schemas/ExperimentDatasetRow"
								},
								"type": "array"
							},
							"name": {
								"type": "string"
							},
							"id": {
								"type": "string"
							}
						},
						"required": [
							"rows",
							"name",
							"id"
						],
						"type": "object"
					},
					"meta": {},
					"createdAt": {
						"type": "string"
					},
					"hypotheses": {
						"items": {
							"properties": {
								"runs": {
									"items": {
										"properties": {
											"request": {
												"$ref": "#/components/schemas/RequestObj"
											},
											"scores": {
												"$ref": "#/components/schemas/Record_string.Score_"
											},
											"response": {
												"$ref": "#/components/schemas/ResponseObj"
											},
											"resultRequestId": {
												"type": "string"
											},
											"datasetRowId": {
												"type": "string"
											}
										},
										"required": [
											"scores",
											"resultRequestId",
											"datasetRowId"
										],
										"type": "object"
									},
									"type": "array"
								},
								"providerKey": {
									"type": "string"
								},
								"createdAt": {
									"type": "string"
								},
								"status": {
									"type": "string"
								},
								"model": {
									"type": "string"
								},
								"parentPromptVersion": {
									"properties": {
										"template": {}
									},
									"required": [
										"template"
									],
									"type": "object"
								},
								"promptVersion": {
									"properties": {
										"template": {}
									},
									"required": [
										"template"
									],
									"type": "object"
								},
								"promptVersionId": {
									"type": "string"
								},
								"id": {
									"type": "string"
								}
							},
							"required": [
								"runs",
								"providerKey",
								"createdAt",
								"status",
								"model",
								"promptVersionId",
								"id"
							],
							"type": "object"
						},
						"type": "array"
					},
					"scores": {
						"allOf": [
							{
								"$ref": "#/components/schemas/ExperimentScores"
							}
						],
						"nullable": true
					},
					"tableId": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"id",
					"organization",
					"dataset",
					"meta",
					"createdAt",
					"hypotheses",
					"scores",
					"tableId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_Experiment-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/Experiment"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_Experiment-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_Experiment-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"Partial_ExperimentToOperators_": {
				"properties": {
					"id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"prompt_v2": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Pick_FilterLeaf.experiment_": {
				"properties": {
					"experiment": {
						"$ref": "#/components/schemas/Partial_ExperimentToOperators_"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"FilterLeafSubset_experiment_": {
				"$ref": "#/components/schemas/Pick_FilterLeaf.experiment_"
			},
			"ExperimentFilterNode": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/FilterLeafSubset_experiment_"
					},
					{
						"$ref": "#/components/schemas/ExperimentFilterBranch"
					},
					{
						"type": "string",
						"enum": [
							"all"
						]
					}
				]
			},
			"ExperimentFilterBranch": {
				"properties": {
					"right": {
						"$ref": "#/components/schemas/ExperimentFilterNode"
					},
					"operator": {
						"type": "string",
						"enum": [
							"or",
							"and"
						]
					},
					"left": {
						"$ref": "#/components/schemas/ExperimentFilterNode"
					}
				},
				"required": [
					"right",
					"operator",
					"left"
				],
				"type": "object"
			},
			"IncludeExperimentKeys": {
				"properties": {
					"inputs": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"promptVersion": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"responseBodies": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"score": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess__datasetId-string__": {
				"properties": {
					"data": {
						"properties": {
							"datasetId": {
								"type": "string"
							}
						},
						"required": [
							"datasetId"
						],
						"type": "object"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result__datasetId-string_.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess__datasetId-string__"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"DatasetMetadata": {
				"properties": {
					"promptVersionId": {
						"type": "string"
					},
					"inputRecordsIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"NewDatasetParams": {
				"properties": {
					"datasetName": {
						"type": "string"
					},
					"requestIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"datasetType": {
						"type": "string",
						"enum": [
							"experiment",
							"helicone"
						]
					},
					"meta": {
						"$ref": "#/components/schemas/DatasetMetadata"
					}
				},
				"required": [
					"datasetName",
					"requestIds",
					"datasetType"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_FilterLeaf.request-or-prompts_versions_": {
				"properties": {
					"prompts_versions": {
						"$ref": "#/components/schemas/Partial_PromptVersionsToOperators_"
					},
					"request": {
						"$ref": "#/components/schemas/Partial_RequestTableToOperators_"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"FilterLeafSubset_request-or-prompts_versions_": {
				"$ref": "#/components/schemas/Pick_FilterLeaf.request-or-prompts_versions_"
			},
			"DatasetFilterNode": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/FilterLeafSubset_request-or-prompts_versions_"
					},
					{
						"$ref": "#/components/schemas/DatasetFilterBranch"
					},
					{
						"type": "string",
						"enum": [
							"all"
						]
					}
				]
			},
			"DatasetFilterBranch": {
				"properties": {
					"right": {
						"$ref": "#/components/schemas/DatasetFilterNode"
					},
					"operator": {
						"type": "string",
						"enum": [
							"or",
							"and"
						]
					},
					"left": {
						"$ref": "#/components/schemas/DatasetFilterNode"
					}
				},
				"required": [
					"right",
					"operator",
					"left"
				],
				"type": "object"
			},
			"RandomDatasetParams": {
				"properties": {
					"datasetName": {
						"type": "string"
					},
					"filter": {
						"$ref": "#/components/schemas/DatasetFilterNode"
					},
					"offset": {
						"type": "number",
						"format": "double"
					},
					"limit": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"datasetName",
					"filter"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DatasetResult": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"created_at": {
						"type": "string"
					},
					"meta": {
						"$ref": "#/components/schemas/DatasetMetadata"
					}
				},
				"required": [
					"id",
					"name",
					"created_at"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_DatasetResult-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/DatasetResult"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_DatasetResult-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_DatasetResult-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess___-Array_": {
				"properties": {
					"data": {
						"items": {
							"properties": {},
							"type": "object"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result___-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess___-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"HeliconeDatasetMetadata": {
				"properties": {
					"promptVersionId": {
						"type": "string"
					},
					"inputRecordsIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"NewHeliconeDatasetParams": {
				"properties": {
					"datasetName": {
						"type": "string"
					},
					"requestIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"meta": {
						"$ref": "#/components/schemas/HeliconeDatasetMetadata"
					}
				},
				"required": [
					"datasetName",
					"requestIds"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MutateParams": {
				"properties": {
					"addRequests": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"removeRequests": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"addRequests",
					"removeRequests"
				],
				"type": "object",
				"additionalProperties": false
			},
			"HeliconeDatasetRow": {
				"properties": {
					"id": {
						"type": "string"
					},
					"origin_request_id": {
						"type": "string"
					},
					"dataset_id": {
						"type": "string"
					},
					"created_at": {
						"type": "string"
					},
					"signed_url": {
						"$ref": "#/components/schemas/Result_string.string_"
					}
				},
				"required": [
					"id",
					"origin_request_id",
					"dataset_id",
					"created_at",
					"signed_url"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_HeliconeDatasetRow-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/HeliconeDatasetRow"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_HeliconeDatasetRow-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_HeliconeDatasetRow-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"HeliconeDataset": {
				"properties": {
					"created_at": {
						"type": "string",
						"nullable": true
					},
					"dataset_type": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"meta": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Json"
							}
						],
						"nullable": true
					},
					"name": {
						"type": "string",
						"nullable": true
					},
					"organization": {
						"type": "string"
					},
					"requests_count": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"created_at",
					"dataset_type",
					"id",
					"meta",
					"name",
					"organization",
					"requests_count"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_HeliconeDataset-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/HeliconeDataset"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_HeliconeDataset-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_HeliconeDataset-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess_any_": {
				"properties": {
					"data": {},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Eval": {
				"properties": {
					"name": {
						"type": "string"
					},
					"averageScore": {
						"type": "number",
						"format": "double"
					},
					"minScore": {
						"type": "number",
						"format": "double"
					},
					"maxScore": {
						"type": "number",
						"format": "double"
					},
					"count": {
						"type": "number",
						"format": "double"
					},
					"overTime": {
						"items": {
							"properties": {
								"count": {
									"type": "number",
									"format": "double"
								},
								"date": {
									"type": "string"
								}
							},
							"required": [
								"count",
								"date"
							],
							"type": "object"
						},
						"type": "array"
					},
					"averageOverTime": {
						"items": {
							"properties": {
								"value": {
									"type": "number",
									"format": "double"
								},
								"date": {
									"type": "string"
								}
							},
							"required": [
								"value",
								"date"
							],
							"type": "object"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"averageScore",
					"minScore",
					"maxScore",
					"count",
					"overTime",
					"averageOverTime"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_Eval-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/Eval"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_Eval-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_Eval-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"EvalFilterNode": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/FilterLeafSubset_request_response_rmt_"
					},
					{
						"$ref": "#/components/schemas/EvalFilterBranch"
					},
					{
						"type": "string",
						"enum": [
							"all"
						]
					}
				]
			},
			"EvalFilterBranch": {
				"properties": {
					"right": {
						"$ref": "#/components/schemas/EvalFilterNode"
					},
					"operator": {
						"type": "string",
						"enum": [
							"or",
							"and"
						]
					},
					"left": {
						"$ref": "#/components/schemas/EvalFilterNode"
					}
				},
				"required": [
					"right",
					"operator",
					"left"
				],
				"type": "object"
			},
			"EvalQueryParams": {
				"properties": {
					"filter": {
						"$ref": "#/components/schemas/EvalFilterNode"
					},
					"timeFilter": {
						"properties": {
							"end": {
								"type": "string"
							},
							"start": {
								"type": "string"
							}
						},
						"required": [
							"end",
							"start"
						],
						"type": "object"
					},
					"offset": {
						"type": "number",
						"format": "double"
					},
					"limit": {
						"type": "number",
						"format": "double"
					},
					"timeZoneDifference": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"filter",
					"timeFilter"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ScoreDistribution": {
				"properties": {
					"name": {
						"type": "string"
					},
					"distribution": {
						"items": {
							"properties": {
								"value": {
									"type": "number",
									"format": "double"
								},
								"upper": {
									"type": "number",
									"format": "double"
								},
								"lower": {
									"type": "number",
									"format": "double"
								}
							},
							"required": [
								"value",
								"upper",
								"lower"
							],
							"type": "object"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"distribution"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_ScoreDistribution-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/ScoreDistribution"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_ScoreDistribution-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_ScoreDistribution-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"TotalValuesForAllOfTime": {
				"properties": {
					"total_cost": {
						"type": "number",
						"format": "double"
					},
					"total_tokens": {
						"type": "number",
						"format": "double"
					},
					"total_requests": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"total_cost",
					"total_tokens",
					"total_requests"
				],
				"type": "object"
			},
			"ResultSuccess_TotalValuesForAllOfTime_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/TotalValuesForAllOfTime"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_TotalValuesForAllOfTime.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_TotalValuesForAllOfTime_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ModelUsageOverTime": {
				"properties": {
					"tokens": {
						"type": "number",
						"format": "double"
					},
					"date": {
						"type": "string"
					},
					"model": {
						"type": "string"
					}
				},
				"required": [
					"tokens",
					"date",
					"model"
				],
				"type": "object"
			},
			"ResultSuccess_ModelUsageOverTime-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/ModelUsageOverTime"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_ModelUsageOverTime-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_ModelUsageOverTime-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ProviderUsageOverTime": {
				"properties": {
					"tokens": {
						"type": "number",
						"format": "double"
					},
					"date": {
						"type": "string"
					},
					"provider": {
						"type": "string"
					}
				},
				"required": [
					"tokens",
					"date",
					"provider"
				],
				"type": "object"
			},
			"ResultSuccess_ProviderUsageOverTime-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/ProviderUsageOverTime"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_ProviderUsageOverTime-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_ProviderUsageOverTime-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"TimeSpan": {
				"type": "string",
				"enum": [
					"7d",
					"1m",
					"3m"
				],
				"description": "*\nFUTURE HELICONE DEVS ALL THE ROUTES HERE ARE CACHE UNAUTHENTICATED!! PLEASE DO NOT USE THE AUTH PARAM"
			},
			"ModelName": {
				"type": "string",
				"enum": [
					"gpt-3.5",
					"gpt-4o",
					"gpt-4o-mini",
					"gpt-4",
					"gpt-4-turbo",
					"claude-3-opus",
					"claude-3-sonnet",
					"claude-3-haiku",
					"claude-2",
					"open-mixtral",
					"Llama",
					"dall-e",
					"text-moderation",
					"text-embedding",
					"anthropic/claude-3.5-sonnet"
				]
			},
			"OpenStatsProviderName": {
				"type": "string",
				"enum": [
					"OPENAI",
					"ANTHROPIC",
					"OPENROUTER",
					"MISTRAL",
					"META"
				]
			},
			"DataIsBeautifulRequestBody": {
				"properties": {
					"provider": {
						"$ref": "#/components/schemas/OpenStatsProviderName"
					},
					"models": {
						"items": {
							"$ref": "#/components/schemas/ModelName"
						},
						"type": "array"
					},
					"timespan": {
						"$ref": "#/components/schemas/TimeSpan"
					}
				},
				"required": [
					"timespan"
				],
				"type": "object"
			},
			"TTFTvsPromptLength": {
				"properties": {
					"prompt_length": {
						"type": "number",
						"format": "double"
					},
					"ttft_normalized_p75": {
						"type": "number",
						"format": "double"
					},
					"ttft_normalized_p99": {
						"type": "number",
						"format": "double"
					},
					"ttft_normalized": {
						"type": "number",
						"format": "double"
					},
					"ttft_p75": {
						"type": "number",
						"format": "double"
					},
					"ttft_p99": {
						"type": "number",
						"format": "double"
					},
					"ttft": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"prompt_length",
					"ttft_normalized_p75",
					"ttft_normalized_p99",
					"ttft_normalized",
					"ttft_p75",
					"ttft_p99",
					"ttft"
				],
				"type": "object"
			},
			"ResultSuccess_TTFTvsPromptLength-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/TTFTvsPromptLength"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_TTFTvsPromptLength-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_TTFTvsPromptLength-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ModelBreakdown": {
				"properties": {
					"percent": {
						"type": "number",
						"format": "double"
					},
					"matched_model": {
						"type": "string"
					}
				},
				"required": [
					"percent",
					"matched_model"
				],
				"type": "object"
			},
			"ResultSuccess_ModelBreakdown-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/ModelBreakdown"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_ModelBreakdown-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_ModelBreakdown-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ModelCost": {
				"properties": {
					"percent": {
						"type": "number",
						"format": "double"
					},
					"matched_model": {
						"type": "string"
					}
				},
				"required": [
					"percent",
					"matched_model"
				],
				"type": "object"
			},
			"ResultSuccess_ModelCost-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/ModelCost"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_ModelCost-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_ModelCost-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ProviderBreakdown": {
				"properties": {
					"percent": {
						"type": "number",
						"format": "double"
					},
					"provider": {
						"type": "string"
					}
				},
				"required": [
					"percent",
					"provider"
				],
				"type": "object"
			},
			"ResultSuccess_ProviderBreakdown-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/ProviderBreakdown"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_ProviderBreakdown-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_ProviderBreakdown-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ModelBreakdownOverTime": {
				"allOf": [
					{
						"properties": {
							"date": {
								"type": "string"
							}
						},
						"required": [
							"date"
						],
						"type": "object"
					},
					{
						"$ref": "#/components/schemas/ModelBreakdown"
					}
				]
			},
			"ResultSuccess_ModelBreakdownOverTime-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/ModelBreakdownOverTime"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_ModelBreakdownOverTime-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_ModelBreakdownOverTime-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess__score_key-string--score_sum-number--created_at_trunc-string_-Array_": {
				"properties": {
					"data": {
						"items": {
							"properties": {
								"created_at_trunc": {
									"type": "string"
								},
								"score_sum": {
									"type": "number",
									"format": "double"
								},
								"score_key": {
									"type": "string"
								}
							},
							"required": [
								"created_at_trunc",
								"score_sum",
								"score_key"
							],
							"type": "object"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result__score_key-string--score_sum-number--created_at_trunc-string_-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess__score_key-string--score_sum-number--created_at_trunc-string_-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"CustomerUsage": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"cost": {
						"type": "number",
						"format": "double"
					},
					"count": {
						"type": "number",
						"format": "double"
					},
					"prompt_tokens": {
						"type": "number",
						"format": "double"
					},
					"completion_tokens": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"name",
					"cost",
					"count",
					"prompt_tokens",
					"completion_tokens"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Customer": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess__api_key_hash-string--api_key_name-string--created_at-string--governance-boolean--id-number--key_permissions-string--organization_id-string--soft_delete-boolean--temp_key-boolean--user_id-string_-Array_": {
				"properties": {
					"data": {
						"items": {
							"properties": {
								"user_id": {
									"type": "string"
								},
								"temp_key": {
									"type": "boolean"
								},
								"soft_delete": {
									"type": "boolean"
								},
								"organization_id": {
									"type": "string"
								},
								"key_permissions": {
									"type": "string"
								},
								"id": {
									"type": "number",
									"format": "double"
								},
								"governance": {
									"type": "boolean"
								},
								"created_at": {
									"type": "string"
								},
								"api_key_name": {
									"type": "string"
								},
								"api_key_hash": {
									"type": "string"
								}
							},
							"required": [
								"user_id",
								"temp_key",
								"soft_delete",
								"organization_id",
								"key_permissions",
								"id",
								"governance",
								"created_at",
								"api_key_name",
								"api_key_hash"
							],
							"type": "object"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result__api_key_hash-string--api_key_name-string--created_at-string--governance-boolean--id-number--key_permissions-string--organization_id-string--soft_delete-boolean--temp_key-boolean--user_id-string_-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess__api_key_hash-string--api_key_name-string--created_at-string--governance-boolean--id-number--key_permissions-string--organization_id-string--soft_delete-boolean--temp_key-boolean--user_id-string_-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			}
		},
		"securitySchemes": {
			"api_key": {
				"type": "apiKey",
				"name": "authorization",
				"in": "header"
			}
		}
	},
	"info": {
		"title": "helicone-api",
		"version": "1.0.0",
		"license": {
			"name": "MIT"
		},
		"contact": {}
	},
	"paths": {
		"/v1/webhooks": {
			"post": {
				"operationId": "NewWebhook",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ResultSuccess_unknown_"
										},
										{
											"$ref": "#/components/schemas/ResultError_unknown_"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Webhooks"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/WebhookData"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetWebhooks",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__id-string--created_at-string--destination-string--version-string--config-string--hmac_key-string_-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Webhooks"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/webhooks/{webhookId}": {
			"delete": {
				"operationId": "DeleteWebhook",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Webhooks"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "webhookId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v1/public/waitlist/experiments": {
			"post": {
				"operationId": "AddToWaitlist",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ResultSuccess_unknown_"
										},
										{
											"$ref": "#/components/schemas/ResultError_any_"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Waitlist"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"email": {
										"type": "string"
									}
								},
								"required": [
									"email"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/vault/add": {
			"post": {
				"operationId": "AddKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__id-string_.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Vault"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AddVaultKeyParams"
							}
						}
					}
				}
			}
		},
		"/v1/vault/keys": {
			"get": {
				"operationId": "GetKeys",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_DecryptedProviderKey-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Vault"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/vault/key/{providerKeyId}": {
			"get": {
				"operationId": "GetKeyById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_DecryptedProviderKey.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Vault"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "providerKeyId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v1/vault/update/{id}": {
			"patch": {
				"operationId": "UpdateKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Vault"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"active": {
										"type": "boolean"
									},
									"name": {
										"type": "string"
									},
									"key": {
										"type": "string"
									}
								},
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/user/metrics-overview/query": {
			"post": {
				"operationId": "GetUserMetricsOverview",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__request_count-HistogramRow-Array--user_cost-HistogramRow-Array_.string_"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"useInterquartile": {
										"type": "boolean"
									},
									"pSize": {
										"$ref": "#/components/schemas/PSize"
									},
									"filter": {
										"$ref": "#/components/schemas/UserFilterNode"
									}
								},
								"required": [
									"useInterquartile",
									"pSize",
									"filter"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/user/metrics/query": {
			"post": {
				"operationId": "GetUserMetrics",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__users-UserMetricsResult-Array--count-number_.string_"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserMetricsQueryParams"
							}
						}
					}
				}
			}
		},
		"/v1/user/query": {
			"post": {
				"operationId": "GetUsers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__count-number--prompt_tokens-number--completion_tokens-number--user_id-string--cost_usd-number_-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserQueryParams"
							}
						}
					}
				}
			}
		},
		"/v1/request/query": {
			"post": {
				"operationId": "GetRequests",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_HeliconeRequest-Array.string_"
								},
								"examples": {
									"Example 1": {
										"value": {
											"filter": "all",
											"isCached": false,
											"limit": 10,
											"offset": 0,
											"sort": {
												"created_at": "desc"
											},
											"isScored": false,
											"isPartOfExperiment": false
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"Request"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"description": "Request query filters",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RequestQueryParams",
								"description": "Request query filters"
							},
							"example": {
								"filter": "all",
								"isCached": false,
								"limit": 10,
								"offset": 0,
								"sort": {
									"created_at": "desc"
								},
								"isScored": false,
								"isPartOfExperiment": false
							}
						}
					}
				}
			}
		},
		"/v1/request/query-clickhouse": {
			"post": {
				"operationId": "GetRequestsClickhouse",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_HeliconeRequest-Array.string_"
								},
								"examples": {
									"Example 1": {
										"value": {
											"filter": "all",
											"isCached": false,
											"limit": 10,
											"offset": 0,
											"sort": {
												"created_at": "desc"
											},
											"isScored": false,
											"isPartOfExperiment": false
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"Request"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"description": "Request query filters",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RequestQueryParams",
								"description": "Request query filters"
							},
							"example": {
								"filter": "all",
								"isCached": false,
								"limit": 100,
								"offset": 0,
								"sort": {
									"created_at": "desc"
								},
								"includeInputs": false,
								"isScored": false,
								"isPartOfExperiment": false
							}
						}
					}
				}
			}
		},
		"/v1/request/{requestId}": {
			"get": {
				"operationId": "GetRequestById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_HeliconeRequest.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Request"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "requestId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "includeBody",
						"required": false,
						"schema": {
							"default": false,
							"type": "boolean"
						}
					}
				]
			}
		},
		"/v1/request/query-ids": {
			"post": {
				"operationId": "GetRequestsByIds",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_HeliconeRequest-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Request"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"requestIds": {
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"required": [
									"requestIds"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/request/{requestId}/feedback": {
			"post": {
				"operationId": "FeedbackRequest",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Request"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "requestId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"rating": {
										"type": "boolean"
									}
								},
								"required": [
									"rating"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/request/{requestId}/property": {
			"put": {
				"operationId": "PutProperty",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Request"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "requestId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"value": {
										"type": "string"
									},
									"key": {
										"type": "string"
									}
								},
								"required": [
									"value",
									"key"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/request/{requestId}/assets/{assetId}": {
			"post": {
				"operationId": "GetRequestAssetById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_HeliconeRequestAsset.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Request"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "requestId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "assetId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v1/request/{requestId}/score": {
			"post": {
				"operationId": "AddScores",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Request"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "requestId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ScoreRequest"
							}
						}
					}
				}
			}
		},
		"/v1/prompt/query": {
			"post": {
				"operationId": "GetPrompts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_PromptsResult-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PromptsQueryParams"
							}
						}
					}
				}
			}
		},
		"/v1/prompt/{promptId}/query": {
			"post": {
				"operationId": "GetPrompt",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_PromptResult.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "promptId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PromptQueryParams"
							}
						}
					}
				}
			}
		},
		"/v1/prompt/{promptId}": {
			"delete": {
				"operationId": "DeletePrompt",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "promptId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v1/prompt/create": {
			"post": {
				"operationId": "CreatePrompt",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_CreatePromptResponse.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"metadata": {
										"$ref": "#/components/schemas/Record_string.any_"
									},
									"prompt": {},
									"userDefinedId": {
										"type": "string"
									}
								},
								"required": [
									"metadata",
									"prompt",
									"userDefinedId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/prompt/{promptId}/user-defined-id": {
			"patch": {
				"operationId": "UpdatePromptUserDefinedId",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "promptId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"userDefinedId": {
										"type": "string"
									}
								},
								"required": [
									"userDefinedId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/prompt/version/{promptVersionId}/edit-label": {
			"post": {
				"operationId": "EditPromptVersionLabel",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__metadata-Record_string.any__.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "promptVersionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PromptEditSubversionLabelParams"
							}
						}
					}
				}
			}
		},
		"/v1/prompt/version/{promptVersionId}/edit-template": {
			"post": {
				"operationId": "EditPromptVersionTemplate",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "promptVersionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PromptEditSubversionTemplateParams"
							}
						}
					}
				}
			}
		},
		"/v1/prompt/version/{promptVersionId}/subversion-from-ui": {
			"post": {
				"operationId": "CreateSubversionFromUi",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_PromptVersionResult.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "promptVersionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PromptCreateSubversionParams"
							}
						}
					}
				}
			}
		},
		"/v1/prompt/version/{promptVersionId}/subversion": {
			"post": {
				"operationId": "CreateSubversion",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_PromptVersionResult.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "promptVersionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PromptCreateSubversionParams"
							}
						}
					}
				}
			}
		},
		"/v1/prompt/version/{promptVersionId}/promote": {
			"post": {
				"operationId": "PromotePromptVersionToProduction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_PromptVersionResult.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "promptVersionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"previousProductionVersionId": {
										"type": "string"
									}
								},
								"required": [
									"previousProductionVersionId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/prompt/version/{promptVersionId}/inputs/query": {
			"post": {
				"operationId": "GetInputs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_PromptInputRecord-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "promptVersionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"random": {
										"type": "boolean"
									},
									"limit": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"limit"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/prompt/{promptId}/experiments": {
			"get": {
				"operationId": "GetPromptExperiments",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__id-string--created_at-string--num_hypotheses-number--dataset-string--meta-Record_string.any__-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "promptId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v1/prompt/{promptId}/versions/query": {
			"post": {
				"operationId": "GetPromptVersions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_PromptVersionResult-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "promptId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PromptVersionsQueryParams"
							}
						}
					}
				}
			}
		},
		"/v1/prompt/version/{promptVersionId}": {
			"get": {
				"operationId": "GetPromptVersion",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_PromptVersionResult.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "promptVersionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeletePromptVersion",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "promptVersionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v1/prompt/{user_defined_id}/compile": {
			"post": {
				"operationId": "GetPromptVersionsCompiled",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_PromptVersionResultCompiled.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "user_defined_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PromptVersiosQueryParamsCompiled"
							}
						}
					}
				}
			}
		},
		"/v1/prompt/{user_defined_id}/template": {
			"post": {
				"operationId": "GetPromptVersionTemplates",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_PromptVersionResultFilled.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "user_defined_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PromptVersiosQueryParamsCompiled"
							}
						}
					}
				}
			}
		},
		"/v1/evaluator": {
			"post": {
				"operationId": "CreateEvaluator",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_EvaluatorResult.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Evaluator"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateEvaluatorParams"
							}
						}
					}
				}
			}
		},
		"/v1/evaluator/{evaluatorId}": {
			"get": {
				"operationId": "GetEvaluator",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_EvaluatorResult.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Evaluator"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "evaluatorId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateEvaluator",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_EvaluatorResult.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Evaluator"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "evaluatorId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateEvaluatorParams"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteEvaluator",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Evaluator"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "evaluatorId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v1/evaluator/query": {
			"post": {
				"operationId": "QueryEvaluators",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_EvaluatorResult-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Evaluator"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {},
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/evaluator/{evaluatorId}/experiments": {
			"get": {
				"operationId": "GetExperimentsForEvaluator",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_EvaluatorExperiment-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Evaluator"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "evaluatorId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v1/evaluator/{evaluatorId}/onlineEvaluators": {
			"get": {
				"operationId": "GetOnlineEvaluators",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_OnlineEvaluatorByEvaluatorId-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Evaluator"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "evaluatorId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateOnlineEvaluator",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Evaluator"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "evaluatorId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateOnlineEvaluatorParams"
							}
						}
					}
				}
			}
		},
		"/v1/evaluator/{evaluatorId}/onlineEvaluators/{onlineEvaluatorId}": {
			"delete": {
				"operationId": "DeleteOnlineEvaluator",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Evaluator"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "evaluatorId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "onlineEvaluatorId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v1/evaluator/python/test": {
			"post": {
				"operationId": "TestPythonEvaluator",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__output-string--traces-string-Array--statusCode_63_-number_.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Evaluator"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"testInput": {
										"$ref": "#/components/schemas/TestInput"
									},
									"code": {
										"type": "string"
									}
								},
								"required": [
									"testInput",
									"code"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/evaluator/llm/test": {
			"post": {
				"operationId": "TestLLMEvaluator",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EvaluatorScoreResult"
								}
							}
						}
					}
				},
				"tags": [
					"Evaluator"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"evaluatorName": {
										"type": "string"
									},
									"testInput": {
										"$ref": "#/components/schemas/TestInput"
									},
									"evaluatorConfig": {
										"$ref": "#/components/schemas/EvaluatorConfig"
									}
								},
								"required": [
									"evaluatorName",
									"testInput",
									"evaluatorConfig"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/evaluator/lastmile/test": {
			"post": {
				"operationId": "TestLastMileEvaluator",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__score-number--input-string--output-string--ground_truth_63_-string_.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Evaluator"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"testInput": {
										"$ref": "#/components/schemas/TestInput"
									},
									"config": {
										"$ref": "#/components/schemas/LastMileConfigForm"
									}
								},
								"required": [
									"testInput",
									"config"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/evaluator/{evaluatorId}/stats": {
			"get": {
				"operationId": "GetEvaluatorStats",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_EvaluatorStats.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Evaluator"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "evaluatorId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v2/experiment/create/empty": {
			"post": {
				"operationId": "CreateEmptyExperiment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__experimentId-string_.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v2/experiment/create/from-request/{requestId}": {
			"post": {
				"operationId": "CreateExperimentFromRequest",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__experimentId-string_.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "requestId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v2/experiment/new": {
			"post": {
				"operationId": "CreateNewExperiment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__experimentId-string_.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"originalPromptVersion": {
										"type": "string"
									},
									"name": {
										"type": "string"
									}
								},
								"required": [
									"originalPromptVersion",
									"name"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v2/experiment": {
			"get": {
				"operationId": "GetExperiments",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_ExperimentV2-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v2/experiment/{experimentId}": {
			"delete": {
				"operationId": "DeleteExperiment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"get": {
				"operationId": "GetExperimentById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_ExtendedExperimentData.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v2/experiment/{experimentId}/prompt-version": {
			"post": {
				"operationId": "CreateNewPromptVersionForExperiment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_PromptVersionResult.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateNewPromptVersionForExperimentParams"
							}
						}
					}
				}
			}
		},
		"/v2/experiment/{experimentId}/prompt-version/{promptVersionId}": {
			"delete": {
				"operationId": "DeletePromptVersion",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "promptVersionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v2/experiment/{experimentId}/prompt-versions": {
			"get": {
				"operationId": "GetPromptVersionsForExperiment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_ExperimentV2PromptVersion-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v2/experiment/{experimentId}/input-keys": {
			"get": {
				"operationId": "GetInputKeysForExperiment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_string-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v2/experiment/{experimentId}/add-manual-row": {
			"post": {
				"operationId": "AddManualRowToExperiment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_string.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"inputs": {
										"$ref": "#/components/schemas/Record_string.string_"
									}
								},
								"required": [
									"inputs"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v2/experiment/{experimentId}/add-manual-rows-batch": {
			"post": {
				"operationId": "AddManualRowsToExperimentBatch",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"inputs": {
										"items": {
											"$ref": "#/components/schemas/Record_string.string_"
										},
										"type": "array"
									}
								},
								"required": [
									"inputs"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v2/experiment/{experimentId}/rows": {
			"delete": {
				"operationId": "DeleteExperimentTableRows",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"inputRecordIds": {
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"required": [
									"inputRecordIds"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v2/experiment/{experimentId}/row/insert/batch": {
			"post": {
				"operationId": "CreateExperimentTableRowBatch",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"rows": {
										"items": {
											"properties": {
												"autoInputs": {
													"items": {},
													"type": "array"
												},
												"inputs": {
													"$ref": "#/components/schemas/Record_string.string_"
												},
												"inputRecordId": {
													"type": "string"
												}
											},
											"required": [
												"autoInputs",
												"inputs",
												"inputRecordId"
											],
											"type": "object"
										},
										"type": "array"
									}
								},
								"required": [
									"rows"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v2/experiment/{experimentId}/row/insert/dataset/{datasetId}": {
			"post": {
				"operationId": "CreateExperimentTableRowFromDataset",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "datasetId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v2/experiment/{experimentId}/row/update": {
			"post": {
				"operationId": "UpdateExperimentTableRow",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"inputs": {
										"$ref": "#/components/schemas/Record_string.string_"
									},
									"inputRecordId": {
										"type": "string"
									}
								},
								"required": [
									"inputs",
									"inputRecordId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v2/experiment/{experimentId}/run-hypothesis": {
			"post": {
				"operationId": "RunHypothesis",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_string.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"inputRecordId": {
										"type": "string"
									},
									"promptVersionId": {
										"type": "string"
									}
								},
								"required": [
									"inputRecordId",
									"promptVersionId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v2/experiment/{experimentId}/evaluators": {
			"get": {
				"operationId": "GetExperimentEvaluators",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_EvaluatorResult-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateExperimentEvaluator",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"evaluatorId": {
										"type": "string"
									}
								},
								"required": [
									"evaluatorId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v2/experiment/{experimentId}/evaluators/{evaluatorId}": {
			"delete": {
				"operationId": "DeleteExperimentEvaluator",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "evaluatorId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v2/experiment/{experimentId}/evaluators/run": {
			"post": {
				"operationId": "RunExperimentEvaluators",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v2/experiment/{experimentId}/should-run-evaluators": {
			"get": {
				"operationId": "ShouldRunEvaluators",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_boolean.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v2/experiment/{experimentId}/{promptVersionId}/scores": {
			"get": {
				"operationId": "GetExperimentPromptVersionScores",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_Record_string.ScoreV2_.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "promptVersionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v2/experiment/{experimentId}/{requestId}/{scoreKey}": {
			"get": {
				"operationId": "GetExperimentScore",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_ScoreV2-or-null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "requestId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "scoreKey",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v1/trace/log": {
			"post": {
				"operationId": "LogTrace",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Trace"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/OTELTrace"
							}
						}
					}
				}
			}
		},
		"/v1/trace/log-python": {
			"post": {
				"operationId": "LogPythonTrace",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Trace"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		},
		"/v1/stripe/subscription/cost-for-prompts": {
			"get": {
				"operationId": "GetCostForPrompts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"format": "double"
								}
							}
						}
					}
				},
				"tags": [
					"Stripe"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/stripe/subscription/cost-for-evals": {
			"get": {
				"operationId": "GetCostForEvals",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"format": "double"
								}
							}
						}
					}
				},
				"tags": [
					"Stripe"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/stripe/subscription/cost-for-experiments": {
			"get": {
				"operationId": "GetCostForExperiments",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"format": "double"
								}
							}
						}
					}
				},
				"tags": [
					"Stripe"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/stripe/subscription/free/usage": {
			"get": {
				"operationId": "GetFreeUsage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"format": "double"
								}
							}
						}
					}
				},
				"tags": [
					"Stripe"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/stripe/subscription/new-customer/upgrade-to-pro": {
			"post": {
				"operationId": "UpgradeToPro",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"tags": [
					"Stripe"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpgradeToProRequest"
							}
						}
					}
				}
			}
		},
		"/v1/stripe/subscription/existing-customer/upgrade-to-pro": {
			"post": {
				"operationId": "UpgradeExistingCustomer",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"tags": [
					"Stripe"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpgradeToProRequest"
							}
						}
					}
				}
			}
		},
		"/v1/stripe/subscription/new-customer/upgrade-to-team-bundle": {
			"post": {
				"operationId": "UpgradeToTeamBundle",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"tags": [
					"Stripe"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": false,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpgradeToTeamBundleRequest"
							}
						}
					}
				}
			}
		},
		"/v1/stripe/subscription/existing-customer/upgrade-to-team-bundle": {
			"post": {
				"operationId": "UpgradeExistingCustomerToTeamBundle",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"tags": [
					"Stripe"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": false,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpgradeToTeamBundleRequest"
							}
						}
					}
				}
			}
		},
		"/v1/stripe/subscription/manage-subscription": {
			"post": {
				"operationId": "ManageSubscription",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"tags": [
					"Stripe"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/stripe/subscription/undo-cancel-subscription": {
			"post": {
				"operationId": "UndoCancelSubscription",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"enum": [
										null
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Stripe"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/stripe/subscription/add-ons/{productType}": {
			"post": {
				"operationId": "AddOns",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"enum": [
										null
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Stripe"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "productType",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"alerts",
								"prompts",
								"experiments",
								"evals"
							]
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteAddOns",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"enum": [
										null
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Stripe"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "productType",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"alerts",
								"prompts",
								"experiments",
								"evals"
							]
						}
					}
				]
			}
		},
		"/v1/stripe/subscription/preview-invoice": {
			"get": {
				"operationId": "PreviewInvoice",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"evaluators_usage": {
											"items": {
												"$ref": "#/components/schemas/LLMUsage"
											},
											"type": "array"
										},
										"experiments_usage": {
											"items": {
												"$ref": "#/components/schemas/LLMUsage"
											},
											"type": "array"
										},
										"total": {
											"type": "number",
											"format": "double"
										},
										"tax": {
											"type": "number",
											"format": "double",
											"nullable": true
										},
										"subtotal": {
											"type": "number",
											"format": "double"
										},
										"discount": {
											"properties": {
												"coupon": {
													"properties": {
														"amount_off": {
															"type": "number",
															"format": "double",
															"nullable": true
														},
														"percent_off": {
															"type": "number",
															"format": "double",
															"nullable": true
														},
														"name": {
															"type": "string",
															"nullable": true
														}
													},
													"required": [
														"amount_off",
														"percent_off",
														"name"
													],
													"type": "object"
												}
											},
											"required": [
												"coupon"
											],
											"type": "object",
											"nullable": true
										},
										"lines": {
											"properties": {
												"data": {
													"items": {
														"properties": {
															"description": {
																"type": "string",
																"nullable": true
															},
															"amount": {
																"type": "number",
																"format": "double",
																"nullable": true
															},
															"id": {
																"type": "string",
																"nullable": true
															}
														},
														"required": [
															"description",
															"amount",
															"id"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"data"
											],
											"type": "object",
											"nullable": true
										},
										"next_payment_attempt": {
											"type": "number",
											"format": "double",
											"nullable": true
										},
										"currency": {
											"type": "string",
											"nullable": true
										}
									},
									"required": [
										"evaluators_usage",
										"experiments_usage",
										"total",
										"tax",
										"subtotal",
										"discount",
										"lines",
										"next_payment_attempt",
										"currency"
									],
									"type": "object",
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Stripe"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/stripe/subscription/cancel-subscription": {
			"post": {
				"operationId": "CancelSubscription",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"enum": [
										null
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Stripe"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/stripe/subscription/migrate-to-pro": {
			"post": {
				"operationId": "MigrateToPro",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Stripe"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/stripe/subscription": {
			"get": {
				"operationId": "GetSubscription",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"items": {
											"items": {
												"properties": {
													"price": {
														"properties": {
															"product": {
																"properties": {
																	"name": {
																		"type": "string",
																		"nullable": true
																	}
																},
																"required": [
																	"name"
																],
																"type": "object",
																"nullable": true
															}
														},
														"required": [
															"product"
														],
														"type": "object"
													},
													"quantity": {
														"type": "number",
														"format": "double"
													}
												},
												"required": [
													"price"
												],
												"type": "object"
											},
											"type": "array"
										},
										"trial_end": {
											"type": "number",
											"format": "double",
											"nullable": true
										},
										"id": {
											"type": "string"
										},
										"current_period_start": {
											"type": "number",
											"format": "double"
										},
										"current_period_end": {
											"type": "number",
											"format": "double"
										},
										"cancel_at_period_end": {
											"type": "boolean"
										},
										"status": {
											"type": "string"
										}
									},
									"required": [
										"items",
										"trial_end",
										"id",
										"current_period_start",
										"current_period_end",
										"cancel_at_period_end",
										"status"
									],
									"type": "object",
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Stripe"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/stripe/webhook": {
			"post": {
				"operationId": "HandleStripeWebhook",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Stripe"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		},
		"/v1/session/has-session": {
			"get": {
				"operationId": "HasSession",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_boolean.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Session"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/session/query": {
			"post": {
				"operationId": "GetSessions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_SessionResult-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Session"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SessionQueryParams"
							}
						}
					}
				}
			}
		},
		"/v1/session/name/query": {
			"post": {
				"operationId": "GetNames",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_SessionNameResult-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Session"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SessionNameQueryParams"
							}
						}
					}
				}
			}
		},
		"/v1/session/metrics/query": {
			"post": {
				"operationId": "GetMetrics",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_SessionMetrics.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Session"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SessionNameQueryParams"
							}
						}
					}
				}
			}
		},
		"/v1/session/{sessionId}/feedback": {
			"post": {
				"operationId": "UpdateSessionFeedback",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Session"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "sessionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"rating": {
										"type": "boolean"
									}
								},
								"required": [
									"rating"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/public/status/provider": {
			"get": {
				"operationId": "GetAllProviderStatus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_ProviderMetrics-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Status"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/public/status/provider/{provider}": {
			"get": {
				"operationId": "GetProviderStatus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_ProviderMetrics.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Status"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "provider",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "timeFrame",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/TimeFrame"
						}
					}
				]
			}
		},
		"/v1/property/query": {
			"post": {
				"operationId": "GetProperties",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_Property-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Property"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {},
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/property/{propertyKey}/search": {
			"post": {
				"operationId": "SearchProperties",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_string-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Property"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "propertyKey",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"searchTerm": {
										"type": "string"
									}
								},
								"required": [
									"searchTerm"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/property/{propertyKey}/top-costs/query": {
			"post": {
				"operationId": "GetTopCosts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__value-string--cost-number_-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Property"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "propertyKey",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TimeFilterRequest"
							}
						}
					}
				}
			}
		},
		"/v1/public/pi/get-api-key": {
			"post": {
				"operationId": "GetApiKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__apiKey-string_.string_"
								}
							}
						}
					}
				},
				"tags": [
					"PI"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"sessionUUID": {
										"type": "string"
									}
								},
								"required": [
									"sessionUUID"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/pi/session": {
			"post": {
				"operationId": "AddSession",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_string.string_"
								}
							}
						}
					}
				},
				"tags": [
					"PI"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"sessionUUID": {
										"type": "string"
									}
								},
								"required": [
									"sessionUUID"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/pi/org-name/query": {
			"post": {
				"operationId": "GetOrgName",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_string.string_"
								}
							}
						}
					}
				},
				"tags": [
					"PI"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/pi/total-costs": {
			"post": {
				"operationId": "GetTotalCosts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_number.string_"
								}
							}
						}
					}
				},
				"tags": [
					"PI"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/pi/total_requests": {
			"post": {
				"operationId": "PiGetTotalRequests",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_number.string_"
								}
							}
						}
					}
				},
				"tags": [
					"PI"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/pi/costs-over-time/query": {
			"post": {
				"operationId": "GetCostsOverTime",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__cost-number--created_at_trunc-string_-Array.string_"
								},
								"examples": {
									"Example 1": {
										"value": {
											"userFilter": "all",
											"timeFilter": {
												"start": "2024-01-01",
												"end": "2024-01-31"
											},
											"dbIncrement": "day",
											"timeZoneDifference": 0
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"PI"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DataOverTimeRequest"
							}
						}
					}
				}
			}
		},
		"/v1/public/compare/models": {
			"post": {
				"operationId": "GetModelComparison",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_Model-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Comparison"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/ModelsToCompare"
								},
								"type": "array"
							}
						}
					}
				}
			}
		},
		"/v1/models": {
			"get": {
				"operationId": "GetModels",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__model-string_-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Models"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/public/security": {
			"post": {
				"operationId": "GetSecurity",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__unsafe-boolean_.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Security"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"text": {
										"type": "string"
									},
									"advanced": {
										"type": "boolean"
									}
								},
								"required": [
									"text",
									"advanced"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/integration": {
			"post": {
				"operationId": "CreateIntegration",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__id-string_.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Integration"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IntegrationCreateParams"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetIntegrations",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_Array_Integration_.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Integration"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/integration/{integrationId}": {
			"post": {
				"operationId": "UpdateIntegration",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Integration"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "integrationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IntegrationUpdateParams"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetIntegration",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_Integration.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Integration"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "integrationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v1/integration/type/{type}": {
			"get": {
				"operationId": "GetIntegrationByType",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_Integration.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Integration"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "type",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v1/integration/slack/settings": {
			"get": {
				"operationId": "GetSlackSettings",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_Integration.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Integration"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/integration/slack/channels": {
			"get": {
				"operationId": "GetSlackChannels",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_Array__id-string--name-string__.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Integration"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/experiment/new-empty": {
			"post": {
				"operationId": "CreateNewEmptyExperiment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__experimentId-string_.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"datasetId": {
										"type": "string"
									},
									"metadata": {
										"$ref": "#/components/schemas/Record_string.string_"
									}
								},
								"required": [
									"datasetId",
									"metadata"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/table/new": {
			"post": {
				"operationId": "CreateNewExperimentTable",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__tableId-string--experimentId-string_.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateExperimentTableParams"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/table/{experimentTableId}/query": {
			"post": {
				"operationId": "GetExperimentTableById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_ExperimentTable.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentTableId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v1/experiment/table/{experimentTableId}/metadata/query": {
			"post": {
				"operationId": "GetExperimentTableMetadata",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_ExperimentTableSimplified.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentTableId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v1/experiment/tables/query": {
			"post": {
				"operationId": "GetExperimentTables",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_ExperimentTableSimplified-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/experiment/table/{experimentTableId}/cell": {
			"post": {
				"operationId": "CreateExperimentCell",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentTableId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"value": {
										"type": "string",
										"nullable": true
									},
									"rowIndex": {
										"type": "number",
										"format": "double"
									},
									"columnId": {
										"type": "string"
									}
								},
								"required": [
									"value",
									"rowIndex",
									"columnId"
								],
								"type": "object"
							}
						}
					}
				}
			},
			"patch": {
				"operationId": "UpdateExperimentCell",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentTableId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"updateInputs": {
										"type": "boolean"
									},
									"metadata": {
										"type": "string"
									},
									"value": {
										"type": "string"
									},
									"status": {
										"type": "string"
									},
									"cellId": {
										"type": "string"
									}
								},
								"required": [
									"cellId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/table/{experimentTableId}/column": {
			"post": {
				"operationId": "CreateExperimentColumn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentTableId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"inputKeys": {
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"promptVersionId": {
										"type": "string"
									},
									"hypothesisId": {
										"type": "string"
									},
									"columnType": {
										"type": "string"
									},
									"columnName": {
										"type": "string"
									}
								},
								"required": [
									"columnType",
									"columnName"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/table/{experimentTableId}/row/new": {
			"post": {
				"operationId": "CreateExperimentTableRow",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentTableId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"inputs": {
										"$ref": "#/components/schemas/Record_string.string_"
									},
									"sourceRequest": {
										"type": "string"
									},
									"promptVersionId": {
										"type": "string"
									}
								},
								"required": [
									"promptVersionId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/table/{experimentTableId}/row/{rowIndex}": {
			"delete": {
				"operationId": "DeleteExperimentTableRow",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentTableId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "rowIndex",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/v1/experiment/table/{experimentTableId}/row/insert/batch": {
			"post": {
				"operationId": "CreateExperimentTableRowWithCellsBatch",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentTableId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"rows": {
										"items": {
											"properties": {
												"sourceRequest": {
													"type": "string"
												},
												"cells": {
													"items": {
														"properties": {
															"metadata": {},
															"value": {
																"type": "string",
																"nullable": true
															},
															"columnId": {
																"type": "string"
															}
														},
														"required": [
															"value",
															"columnId"
														],
														"type": "object"
													},
													"type": "array"
												},
												"datasetId": {
													"type": "string"
												},
												"inputs": {
													"$ref": "#/components/schemas/Record_string.string_"
												},
												"inputRecordId": {
													"type": "string"
												}
											},
											"required": [
												"cells",
												"datasetId",
												"inputs",
												"inputRecordId"
											],
											"type": "object"
										},
										"type": "array"
									}
								},
								"required": [
									"rows"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/update-meta": {
			"post": {
				"operationId": "UpdateExperimentMeta",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ResultSuccess_unknown_"
										},
										{
											"$ref": "#/components/schemas/ResultError_PostgrestError_"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"meta": {
										"$ref": "#/components/schemas/Record_string.string_"
									},
									"experimentId": {
										"type": "string"
									}
								},
								"required": [
									"meta",
									"experimentId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/experiment": {
			"post": {
				"operationId": "CreateNewExperimentOld",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__experimentId-string_.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NewExperimentParams"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/hypothesis": {
			"post": {
				"operationId": "CreateNewExperimentHypothesis",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__hypothesisId-string_.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"status": {
										"type": "string",
										"enum": [
											"PENDING",
											"RUNNING",
											"COMPLETED",
											"FAILED"
										]
									},
									"providerKeyId": {
										"type": "string"
									},
									"promptVersion": {
										"type": "string"
									},
									"model": {
										"type": "string"
									},
									"experimentId": {
										"type": "string"
									}
								},
								"required": [
									"status",
									"providerKeyId",
									"promptVersion",
									"model",
									"experimentId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/hypothesis/{hypothesisId}/scores/query": {
			"post": {
				"operationId": "GetExperimentHypothesisScores",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__runsCount-number--scores-Record_string.Score__.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "hypothesisId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v1/experiment/{experimentId}/evaluators": {
			"get": {
				"operationId": "GetExperimentEvaluators",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_EvaluatorResult-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateExperimentEvaluatorOld",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"evaluatorId": {
										"type": "string"
									}
								},
								"required": [
									"evaluatorId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/{experimentId}/evaluators/run": {
			"post": {
				"operationId": "RunExperimentEvaluatorsOld",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v1/experiment/{experimentId}/evaluators/{evaluatorId}": {
			"delete": {
				"operationId": "DeleteExperimentEvaluatorOld",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "experimentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "evaluatorId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v1/experiment/query": {
			"post": {
				"operationId": "GetExperimentsOld",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_Experiment-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Experiment"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"include": {
										"$ref": "#/components/schemas/IncludeExperimentKeys"
									},
									"filter": {
										"$ref": "#/components/schemas/ExperimentFilterNode"
									}
								},
								"required": [
									"filter"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/dataset": {
			"post": {
				"operationId": "AddDataset",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__datasetId-string_.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Dataset"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NewDatasetParams"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/dataset/random": {
			"post": {
				"operationId": "AddRandomDataset",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__datasetId-string_.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Dataset"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RandomDatasetParams"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/dataset/query": {
			"post": {
				"operationId": "GetDatasets",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_DatasetResult-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Dataset"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"promptVersionId": {
										"type": "string"
									}
								},
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/dataset/{datasetId}/row/insert": {
			"post": {
				"operationId": "InsertDatasetRow",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_string.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Dataset"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "datasetId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"originalColumnId": {
										"type": "string"
									},
									"inputs": {
										"$ref": "#/components/schemas/Record_string.string_"
									},
									"inputRecordId": {
										"type": "string"
									}
								},
								"required": [
									"inputs",
									"inputRecordId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/dataset/{datasetId}/version/{promptVersionId}/row/new": {
			"post": {
				"operationId": "CreateDatasetRow",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_string.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Dataset"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "datasetId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "promptVersionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"sourceRequest": {
										"type": "string"
									},
									"inputs": {
										"$ref": "#/components/schemas/Record_string.string_"
									}
								},
								"required": [
									"inputs"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/dataset/{datasetId}/inputs/query": {
			"post": {
				"operationId": "GetDataset",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_PromptInputRecord-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Dataset"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "datasetId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v1/experiment/dataset/{datasetId}/mutate": {
			"post": {
				"operationId": "MutateDataset",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result___-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Dataset"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"removeRequests": {
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"addRequests": {
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"required": [
									"removeRequests",
									"addRequests"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/helicone-dataset": {
			"post": {
				"operationId": "AddHeliconeDataset",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__datasetId-string_.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Dataset"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NewHeliconeDatasetParams"
							}
						}
					}
				}
			}
		},
		"/v1/helicone-dataset/{datasetId}/mutate": {
			"post": {
				"operationId": "MutateHeliconeDataset",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Dataset"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "datasetId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MutateParams"
							}
						}
					}
				}
			}
		},
		"/v1/helicone-dataset/{datasetId}/query": {
			"post": {
				"operationId": "QueryHeliconeDatasetRows",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_HeliconeDatasetRow-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Dataset"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "datasetId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"limit": {
										"type": "number",
										"format": "double"
									},
									"offset": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"limit",
									"offset"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/helicone-dataset/{datasetId}/count": {
			"post": {
				"operationId": "CountHeliconeDatasetRows",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_number.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Dataset"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "datasetId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v1/helicone-dataset/query": {
			"post": {
				"operationId": "QueryHeliconeDataset",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_HeliconeDataset-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Dataset"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"datasetIds": {
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/helicone-dataset/{datasetId}/request/{requestId}": {
			"post": {
				"operationId": "UpdateHeliconeDatasetRequest",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ResultError_unknown_"
										},
										{
											"$ref": "#/components/schemas/ResultSuccess_any_"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Dataset"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "datasetId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "requestId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"responseBody": {
										"$ref": "#/components/schemas/Json"
									},
									"requestBody": {
										"$ref": "#/components/schemas/Json"
									}
								},
								"required": [
									"responseBody",
									"requestBody"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/evals/query": {
			"post": {
				"operationId": "QueryEvals",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_Eval-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Evals"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EvalQueryParams"
							}
						}
					}
				}
			}
		},
		"/v1/evals/scores": {
			"get": {
				"operationId": "GetEvalScores",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_string-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Evals"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/evals/{requestId}": {
			"post": {
				"operationId": "AddEval",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_null.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Evals"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "requestId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"score": {
										"type": "number",
										"format": "double"
									},
									"name": {
										"type": "string"
									}
								},
								"required": [
									"score",
									"name"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/evals/score-distributions/query": {
			"post": {
				"operationId": "QueryScoreDistributions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_ScoreDistribution-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Evals"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EvalQueryParams"
							}
						}
					}
				}
			}
		},
		"/v1/public/dataisbeautiful/total-values": {
			"post": {
				"operationId": "GetTotalValues",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_TotalValuesForAllOfTime.string_"
								}
							}
						}
					}
				},
				"tags": [
					"DataIsBeautiful"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/public/dataisbeautiful/model/usage/overtime": {
			"post": {
				"operationId": "GetModelUsageOverTime",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_ModelUsageOverTime-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"DataIsBeautiful"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/public/dataisbeautiful/provider/usage/overtime": {
			"post": {
				"operationId": "GetProviderUsageOverTime",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_ProviderUsageOverTime-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"DataIsBeautiful"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/public/dataisbeautiful/total-requests": {
			"post": {
				"operationId": "GetTotalRequests",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_number.string_"
								}
							}
						}
					}
				},
				"tags": [
					"DataIsBeautiful"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DataIsBeautifulRequestBody"
							}
						}
					}
				}
			}
		},
		"/v1/public/dataisbeautiful/ttft-vs-prompt-length": {
			"post": {
				"operationId": "GetTTFTvsPromptInputLength",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_TTFTvsPromptLength-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"DataIsBeautiful"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DataIsBeautifulRequestBody"
							}
						}
					}
				}
			}
		},
		"/v1/public/dataisbeautiful/model/percentage": {
			"post": {
				"operationId": "GetModelPercentage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_ModelBreakdown-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"DataIsBeautiful"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DataIsBeautifulRequestBody"
							}
						}
					}
				}
			}
		},
		"/v1/public/dataisbeautiful/model/cost": {
			"post": {
				"operationId": "GetModelCost",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_ModelCost-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"DataIsBeautiful"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DataIsBeautifulRequestBody"
							}
						}
					}
				}
			}
		},
		"/v1/public/dataisbeautiful/provider/percentage": {
			"post": {
				"operationId": "GetProviderPercentage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_ProviderBreakdown-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"DataIsBeautiful"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DataIsBeautifulRequestBody"
							}
						}
					}
				}
			}
		},
		"/v1/public/dataisbeautiful/model/percentage/overtime": {
			"post": {
				"operationId": "GetModelPercentageOverTime",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_ModelBreakdownOverTime-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"DataIsBeautiful"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DataIsBeautifulRequestBody"
							}
						}
					}
				}
			}
		},
		"/v1/dashboard/scores/query": {
			"post": {
				"operationId": "GetScoresOverTime",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__score_key-string--score_sum-number--created_at_trunc-string_-Array.string_"
								},
								"examples": {
									"Example 1": {
										"value": {
											"userFilter": "all",
											"timeFilter": {
												"start": "2024-01-01",
												"end": "2024-01-31"
											},
											"dbIncrement": "day",
											"timeZoneDifference": 0
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"Dashboard"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DataOverTimeRequest"
							}
						}
					}
				}
			}
		},
		"/v1/customer/{customerId}/usage/query": {
			"post": {
				"operationId": "GetCustomerUsage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/CustomerUsage"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Customer"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "customerId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {},
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/customer/query": {
			"post": {
				"operationId": "GetCustomers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Customer"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Customer"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {},
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/api-keys/provider-key/{providerKeyId}": {
			"delete": {
				"operationId": "DeleteProviderKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"API Key"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "providerKeyId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"get": {
				"operationId": "GetProviderKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/DecryptedProviderKey"
										},
										{
											"properties": {
												"error": {
													"type": "string"
												}
											},
											"required": [
												"error"
											],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"API Key"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "providerKeyId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"patch": {
				"operationId": "UpdateProviderKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"properties": {
												"id": {
													"type": "string"
												}
											},
											"required": [
												"id"
											],
											"type": "object"
										},
										{
											"properties": {
												"error": {
													"type": "string"
												}
											},
											"required": [
												"error"
											],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"API Key"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "providerKeyId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"config": {
										"$ref": "#/components/schemas/Record_string.string_"
									},
									"providerKey": {
										"type": "string"
									}
								},
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/api-keys/provider-key": {
			"post": {
				"operationId": "CreateProviderKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"properties": {
												"id": {
													"type": "string"
												}
											},
											"required": [
												"id"
											],
											"type": "object"
										},
										{
											"properties": {
												"error": {
													"type": "string"
												}
											},
											"required": [
												"error"
											],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"API Key"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"providerKeyName": {
										"type": "string"
									},
									"config": {
										"$ref": "#/components/schemas/Record_string.string_"
									},
									"providerKey": {
										"type": "string"
									},
									"providerName": {
										"type": "string"
									}
								},
								"required": [
									"providerKeyName",
									"config",
									"providerKey",
									"providerName"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/api-keys/provider-keys": {
			"get": {
				"operationId": "GetProviderKeys",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"items": {},
											"type": "array"
										},
										{
											"properties": {
												"error": {
													"type": "string"
												}
											},
											"required": [
												"error"
											],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"API Key"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/api-keys": {
			"get": {
				"operationId": "GetAPIKeys",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__api_key_hash-string--api_key_name-string--created_at-string--governance-boolean--id-number--key_permissions-string--organization_id-string--soft_delete-boolean--temp_key-boolean--user_id-string_-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"API Key"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "CreateAPIKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"properties": {
												"apiKey": {
													"type": "string"
												},
												"id": {
													"type": "string"
												}
											},
											"required": [
												"apiKey",
												"id"
											],
											"type": "object"
										},
										{
											"properties": {
												"error": {
													"type": "string"
												}
											},
											"required": [
												"error"
											],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"API Key"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"key_permissions": {
										"type": "string",
										"enum": [
											"rw",
											"r",
											"w"
										]
									},
									"api_key_name": {
										"type": "string"
									}
								},
								"required": [
									"api_key_name"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/api-keys/proxy-key": {
			"post": {
				"operationId": "CreateProxyKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"properties": {
												"proxyKeyId": {
													"type": "string"
												},
												"proxyKey": {
													"type": "string"
												}
											},
											"required": [
												"proxyKeyId",
												"proxyKey"
											],
											"type": "object"
										},
										{
											"properties": {
												"error": {
													"type": "string"
												}
											},
											"required": [
												"error"
											],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"API Key"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"proxyKeyName": {
										"type": "string"
									},
									"providerKeyId": {
										"type": "string"
									}
								},
								"required": [
									"proxyKeyName",
									"providerKeyId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/api-keys/{apiKeyId}": {
			"delete": {
				"operationId": "DeleteAPIKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"API Key"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "apiKeyId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"patch": {
				"operationId": "UpdateAPIKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"error": {
											"type": "string"
										}
									},
									"required": [
										"error"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"API Key"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "apiKeyId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"api_key_name": {
										"type": "string"
									}
								},
								"required": [
									"api_key_name"
								],
								"type": "object"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "https://api.helicone.ai/"
		},
		{
			"url": "http://localhost:8585/"
		}
	]
}