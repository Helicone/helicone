/**
 * Transform a DOM tree to a hast tree.
 *
 * @param {Node} tree
 *   DOM tree to transform.
 * @param {Options | null | undefined} [options]
 *   Configuration (optional).
 * @returns {HastNode}
 *   Equivalent hast node.
 */
export function fromDom(
  tree: Node,
  options?: Options | null | undefined
): HastNode
export type HastRoot = import('hast').Root
export type HastDoctype = import('hast').DocType
export type HastElement = import('hast').Element
export type HastText = import('hast').Text
export type HastComment = import('hast').Comment
export type HastContent = import('hast').Content
export type HastNode = HastContent | HastRoot
/**
 * Callback called when each node is transformed.
 */
export type AfterTransform = (domNode: Node, hastNode: HastNode) => void
/**
 * Configuration.
 */
export type Options = {
  /**
   * Callback called when each node is transformed.
   */
  afterTransform?: AfterTransform | null | undefined
}
