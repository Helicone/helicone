var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import SwaggerParser from '@apidevtools/swagger-parser';
import { truncateCircularReferences } from './truncateCircularReferences.js';
function openApiCheck(pathOrObj, truncate = false) {
    return __awaiter(this, void 0, void 0, function* () {
        try {
            const document = yield SwaggerParser.validate(pathOrObj);
            // truncation can be costly, so only do it when necessary
            if ('openapi' in document)
                return truncate ? truncateCircularReferences(document, 5) : document;
        }
        catch (_a) { }
    });
}
export { openApiCheck };
