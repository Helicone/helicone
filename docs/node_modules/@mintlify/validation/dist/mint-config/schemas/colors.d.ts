import { z } from 'zod';
export declare const colorsSchema: z.ZodObject<{
    primary: z.ZodString;
    light: z.ZodOptional<z.ZodString>;
    dark: z.ZodOptional<z.ZodString>;
    background: z.ZodOptional<z.ZodObject<{
        light: z.ZodOptional<z.ZodString>;
        dark: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        light?: string | undefined;
        dark?: string | undefined;
    }, {
        light?: string | undefined;
        dark?: string | undefined;
    }>>;
    anchors: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodObject<{
        from: z.ZodString;
        via: z.ZodOptional<z.ZodString>;
        to: z.ZodString;
    }, "strict", z.ZodTypeAny, {
        from: string;
        to: string;
        via?: string | undefined;
    }, {
        from: string;
        to: string;
        via?: string | undefined;
    }>]>>;
    ultraLight: z.ZodOptional<z.ZodAny>;
    ultraDark: z.ZodOptional<z.ZodAny>;
}, "strict", z.ZodTypeAny, {
    primary: string;
    light?: string | undefined;
    dark?: string | undefined;
    background?: {
        light?: string | undefined;
        dark?: string | undefined;
    } | undefined;
    anchors?: string | {
        from: string;
        to: string;
        via?: string | undefined;
    } | undefined;
    ultraLight?: any;
    ultraDark?: any;
}, {
    primary: string;
    light?: string | undefined;
    dark?: string | undefined;
    background?: {
        light?: string | undefined;
        dark?: string | undefined;
    } | undefined;
    anchors?: string | {
        from: string;
        to: string;
        via?: string | undefined;
    } | undefined;
    ultraLight?: any;
    ultraDark?: any;
}>;
