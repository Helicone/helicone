import { z } from 'zod';
export declare function validateMintConfig(value: unknown): z.SafeParseError<{
    name: string;
    favicon: string;
    colors: {
        primary: string;
        light?: string | undefined;
        dark?: string | undefined;
        background?: {
            light?: string | undefined;
            dark?: string | undefined;
        } | undefined;
        anchors?: string | {
            from: string;
            to: string;
            via?: string | undefined;
        } | undefined;
        ultraLight?: any;
        ultraDark?: any;
    };
    navigation: import("@mintlify/models").NavigationGroup[];
    $schema?: string | undefined;
    mintlify?: string | undefined;
    logo?: string | {
        light: string;
        dark: string;
        href?: string | undefined;
    } | undefined;
    openapi?: string | string[] | undefined;
    api?: {
        baseUrl?: string | string[] | undefined;
        auth?: {
            method?: "bearer" | "basic" | "key" | "cobo" | undefined;
            name?: string | undefined;
            inputPrefix?: string | undefined;
        } | undefined;
        playground?: {
            mode?: "show" | "simple" | "hide" | undefined;
        } | undefined;
        request?: {
            example?: {
                showOptionalParams?: boolean | undefined;
            } | undefined;
        } | undefined;
        maintainOrder?: boolean | undefined;
    } | undefined;
    modeToggle?: {
        default?: "light" | "dark" | undefined;
        isHidden?: boolean | undefined;
    } | undefined;
    versions?: (string | {
        name: string;
        url: string;
    })[] | undefined;
    metadata?: Record<string, string> | undefined;
    topbarCtaButton?: {
        name: string;
        url: string;
        type?: "link" | undefined;
    } | {
        type: "github";
        url: string;
    } | undefined;
    topbarLinks?: ({
        name: string;
        url: string;
        type?: "link" | undefined;
    } | {
        type: "github";
        url: string;
    })[] | undefined;
    primaryTab?: {
        name: string;
    } | undefined;
    topAnchor?: {
        name: string;
        icon?: string | undefined;
        iconType?: "light" | "brands" | "duotone" | "regular" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
    } | undefined;
    anchors?: {
        name: string;
        url: string;
        icon?: string | undefined;
        iconType?: "light" | "brands" | "duotone" | "regular" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
        color?: string | {
            from: string;
            to: string;
            via?: string | undefined;
        } | undefined;
        isDefaultHidden?: boolean | undefined;
        version?: string | undefined;
    }[] | undefined;
    tabs?: {
        name: string;
        url: string;
        version?: string | undefined;
    }[] | undefined;
    footerSocials?: {
        type: string;
        url: string;
    }[] | Record<string, string> | undefined;
    backgroundImage?: string | undefined;
    feedback?: {
        thumbsRating?: boolean | undefined;
        suggestEdit?: boolean | undefined;
        raiseIssue?: boolean | undefined;
    } | undefined;
    analytics?: {
        amplitude?: {
            apiKey: string;
        } | undefined;
        clearbit?: {
            publicApiKey: string;
        } | undefined;
        fathom?: {
            siteId: string;
        } | undefined;
        ga4?: {
            measurementId: string;
        } | undefined;
        gtm?: {
            tagId: string;
        } | undefined;
        hotjar?: {
            hjid: string;
            hjsv: string;
        } | undefined;
        koala?: {
            publicApiKey: string;
        } | undefined;
        logrocket?: {
            appId: string;
        } | undefined;
        mixpanel?: {
            projectToken: string;
        } | undefined;
        pirsch?: {
            id: string;
        } | undefined;
        posthog?: {
            apiKey: string;
            apiHost?: string | undefined;
        } | undefined;
        plausible?: {
            domain: string;
        } | undefined;
    } | undefined;
    integrations?: {
        intercom?: string | undefined;
        frontchat?: string | undefined;
    } | undefined;
    isWhiteLabeled?: boolean | undefined;
    search?: {
        prompt?: string | undefined;
    } | undefined;
    redirects?: {
        source: string;
        destination: string;
    }[] | undefined;
    seo?: {
        indexHiddenPages?: boolean | undefined;
    } | undefined;
}> | {
    warnings: z.ZodIssue[];
    success: true;
    data: {
        name: string;
        $schema: string;
        favicon: string;
        colors: {
            primary: string;
            light?: string | undefined;
            dark?: string | undefined;
            background?: {
                light?: string | undefined;
                dark?: string | undefined;
            } | undefined;
            anchors?: string | {
                from: string;
                to: string;
                via?: string | undefined;
            } | undefined;
            ultraLight?: any;
            ultraDark?: any;
        };
        navigation: import("@mintlify/models").NavigationGroup[];
        mintlify?: string | undefined;
        logo?: string | {
            light: string;
            dark: string;
            href?: string | undefined;
        } | undefined;
        openapi?: string | string[] | undefined;
        api?: {
            baseUrl?: string | string[] | undefined;
            auth?: {
                method?: "bearer" | "basic" | "key" | "cobo" | undefined;
                name?: string | undefined;
                inputPrefix?: string | undefined;
            } | undefined;
            playground?: {
                mode: "show" | "simple" | "hide";
            } | undefined;
            request?: {
                example?: {
                    showOptionalParams: boolean;
                } | undefined;
            } | undefined;
            maintainOrder?: boolean | undefined;
        } | undefined;
        modeToggle?: {
            default?: "light" | "dark" | undefined;
            isHidden?: boolean | undefined;
        } | undefined;
        versions?: (string | {
            name: string;
            url: string;
        })[] | undefined;
        metadata?: Record<string, string> | undefined;
        topbarCtaButton?: {
            name: string;
            url: string;
            type?: "link" | undefined;
        } | {
            type: "github";
            url: string;
        } | undefined;
        topbarLinks?: ({
            name: string;
            url: string;
            type?: "link" | undefined;
        } | {
            type: "github";
            url: string;
        })[] | undefined;
        primaryTab?: {
            name: string;
        } | undefined;
        topAnchor?: {
            name: string;
            icon?: string | undefined;
            iconType?: "light" | "brands" | "duotone" | "regular" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
        } | undefined;
        anchors?: {
            name: string;
            url: string;
            icon?: string | undefined;
            iconType?: "light" | "brands" | "duotone" | "regular" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
            color?: string | {
                from: string;
                to: string;
                via?: string | undefined;
            } | undefined;
            isDefaultHidden?: boolean | undefined;
            version?: string | undefined;
        }[] | undefined;
        tabs?: {
            name: string;
            url: string;
            version?: string | undefined;
        }[] | undefined;
        footerSocials?: {
            type: string;
            url: string;
        }[] | Record<string, string> | undefined;
        backgroundImage?: string | undefined;
        feedback?: {
            thumbsRating?: boolean | undefined;
            suggestEdit?: boolean | undefined;
            raiseIssue?: boolean | undefined;
        } | undefined;
        analytics?: {
            amplitude?: {
                apiKey: string;
            } | undefined;
            clearbit?: {
                publicApiKey: string;
            } | undefined;
            fathom?: {
                siteId: string;
            } | undefined;
            ga4?: {
                measurementId: string;
            } | undefined;
            gtm?: {
                tagId: string;
            } | undefined;
            hotjar?: {
                hjid: string;
                hjsv: string;
            } | undefined;
            koala?: {
                publicApiKey: string;
            } | undefined;
            logrocket?: {
                appId: string;
            } | undefined;
            mixpanel?: {
                projectToken: string;
            } | undefined;
            pirsch?: {
                id: string;
            } | undefined;
            posthog?: {
                apiKey: string;
                apiHost?: string | undefined;
            } | undefined;
            plausible?: {
                domain: string;
            } | undefined;
        } | undefined;
        integrations?: {
            intercom?: string | undefined;
            frontchat?: string | undefined;
        } | undefined;
        isWhiteLabeled?: boolean | undefined;
        search?: {
            prompt?: string | undefined;
        } | undefined;
        redirects?: {
            source: string;
            destination: string;
        }[] | undefined;
        seo?: {
            indexHiddenPages?: boolean | undefined;
        } | undefined;
    };
};
