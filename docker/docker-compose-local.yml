services:
  clickhouse-db:
    container_name: clickhouse-db
    image: clickhouse/clickhouse-server:23.4.2.11
    healthcheck:
      test: apt update -y && apt install curl -y && echo 'SELECT 1' | curl 'http://localhost:8123/' --data-binary @-
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    ports:
      - 8123:8123/tcp
      - 18123:8123/tcp
    volumes:
      - ./volumes/clickhouse:/var/lib/clickhouse:z
    environment:
      CLICKHOUSE_PASSWORD: ""
      CLICKHOUSE_USER: default

  clickhouse-migration-runner:
    image: clickhouse-migration-runner-local
    build:
      context: ../clickhouse
      dockerfile: ../docker/dockerfiles/dockerfile_clickhouse_migration_runner
    depends_on:
      clickhouse-db:
        condition: service_healthy
    environment:
      CLICKHOUSE_HOST: clickhouse-db
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_PASSWORD: ""
      CLICKHOUSE_USER: default

  minio:
    container_name: helicone-minio
    image: minio/minio:latest
    restart: unless-stopped
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - ./volumes/minio:/data:z
    command: server /data --console-address ":9001"
    entrypoint: >
      /bin/sh -c "
      /usr/bin/docker-entrypoint.sh server /data --console-address ':9001' &
      sleep 5;
      mc alias set myminio http://localhost:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      if ! mc ls myminio/request-response-storage; then
        mc mb myminio/request-response-storage;
      fi;
      tail -f /dev/null
      "
  zookeeper:
    image: confluentinc/cp-zookeeper:7.8.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    profiles: ["unstable"]
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888

  kafka:
    image: confluentinc/cp-kafka:7.8.0
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    profiles: ["unstable"]
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zookeeper

########################################################
# Helicone workers
  worker-openai-proxy:
    image: worker-local
    build:
      context: ../worker
      dockerfile: ../docker/dockerfiles/dockerfile_worker
    ports:
      - 8787:8787
    volumes:
      - ./volumes/worker:/usr/src/app:cached
    profiles: ["include-worker"]
    environment:
      - PORT=8787
      - WORKER_TYPE=OPENAI_PROXY
      - WORKER_PORT=8787
      - CLICKHOUSE_HOST=http://clickhouse-db:8123
      - VALHALLA_URL=http://host.docker.internal:8585
      - S3_ENDPOINT=http://minio:9000
      - SUPABASE_URL=http://host.docker.internal:54321

  worker-helicone-api:
    image: worker-local
    build:
      context: ../worker
      dockerfile: ../docker/dockerfiles/dockerfile_worker
    ports:
      - 8788:8788
    volumes:
      - ./volumes/worker:/usr/src/app:cached
    profiles: ["include-worker"]
    environment:
      - PORT=8788
      - WORKER_TYPE=HELICONE_API
      - WORKER_PORT=8788
      - CLICKHOUSE_HOST=http://clickhouse-db:8123
      - VALHALLA_URL=http://host.docker.internal:8585
      - S3_ENDPOINT=http://minio:9000
      - SUPABASE_URL=http://host.docker.internal:54321

  worker-gateway-api:
    image: worker-local
    build:
      context: ../worker
      dockerfile: ../docker/dockerfiles/dockerfile_worker
    ports:
      - 8789:8789
    volumes:
      - ./volumes/worker:/usr/src/app:cached
    profiles: ["include-worker"]
    environment:
      - PORT=8789
      - WORKER_TYPE=GATEWAY_API
      - WORKER_PORT=8789
      - GATEWAY_TARGET=https://openrouter.ai
      - CLICKHOUSE_HOST=http://clickhouse-db:8123
      - VALHALLA_URL=http://host.docker.internal:8585
      - S3_ENDPOINT=http://minio:9000
      - SUPABASE_URL=http://host.docker.internal:54321

  worker-anthropic-proxy:
    image: worker-local
    build:
      context: ../worker
      dockerfile: ../docker/dockerfiles/dockerfile_worker
    ports:
      - 8790:8790
    volumes:
      - ./volumes/worker:/usr/src/app:cached
    profiles: ["include-worker"]
    environment:
      - PORT=8790
      - WORKER_TYPE=ANTHROPIC_PROXY
      - WORKER_PORT=8790
      - CLICKHOUSE_HOST=http://clickhouse-db:8123
      - VALHALLA_URL=http://host.docker.internal:8585
      - S3_ENDPOINT=http://minio:9000
      - SUPABASE_URL=http://host.docker.internal:54321

  worker-generate-api:
    image: worker-local
    build:
      context: ../worker
      dockerfile: ../docker/dockerfiles/dockerfile_worker
    ports:
      - 8791:8791
    volumes:
      - ./volumes/worker:/usr/src/app:cached
    profiles: ["include-worker"]
    environment:
      - PORT=8791
      - WORKER_TYPE=GENERATE_API
      - WORKER_PORT=8791
      - CLICKHOUSE_HOST=http://clickhouse-db:8123
      - VALHALLA_URL=http://host.docker.internal:8585
      - S3_ENDPOINT=http://minio:9000
      - SUPABASE_URL=http://host.docker.internal:54321

# End Helicone workers
########################################################
