import{DeltaTypes as e}from"./constants.js";import{getIsBaseColor as r}from"./inputTypes.js";const o=(r,o)=>{if(o||r===e.Unchanged)return r;switch(r){case e.Increase:return e.Decrease;case e.ModerateIncrease:return e.ModerateDecrease;case e.Decrease:return e.Increase;case e.ModerateDecrease:return e.ModerateIncrease}return""},t=e=>e.toString(),l=e=>e.reduce(((e,r)=>e+r),0),n=(e,r)=>{for(let o=0;o<r.length;o++)if(r[o]===e)return!0;return!1};function c(e){return r=>{e.forEach((e=>{"function"==typeof e?e(r):null!=e&&(e.current=r)}))}}function s(e){return r=>`tremor-${e}-${r}`}function $(e,o){const t=r(e);if("white"===e||"black"===e||"transparent"===e||!o||!t){const r=(e=>e.includes("#")||e.includes("--")||e.includes("rgb"))(e)?`[${e}]`:e;return{bgColor:`bg-${r}`,hoverBgColor:`hover:bg-${r}`,selectBgColor:`ui-selected:bg-${r}`,textColor:`text-${r}`,selectTextColor:`ui-selected:text-${r}`,hoverTextColor:`hover:text-${r}`,borderColor:`border-${r}`,selectBorderColor:`ui-selected:border-${r}`,hoverBorderColor:`hover:border-${r}`,ringColor:`ring-${r}`,strokeColor:`stroke-${r}`,fillColor:`fill-${r}`}}return{bgColor:`bg-${e}-${o}`,selectBgColor:`ui-selected:bg-${e}-${o}`,hoverBgColor:`hover:bg-${e}-${o}`,textColor:`text-${e}-${o}`,selectTextColor:`ui-selected:text-${e}-${o}`,hoverTextColor:`hover:text-${e}-${o}`,borderColor:`border-${e}-${o}`,selectBorderColor:`ui-selected:border-${e}-${o}`,hoverBorderColor:`hover:border-${e}-${o}`,ringColor:`ring-${e}-${o}`,strokeColor:`stroke-${e}-${o}`,fillColor:`fill-${e}-${o}`}}export{t as defaultValueFormatter,$ as getColorClassNames,n as isValueInArray,s as makeClassName,o as mapInputsToDeltaType,c as mergeRefs,l as sumNumericArray};
