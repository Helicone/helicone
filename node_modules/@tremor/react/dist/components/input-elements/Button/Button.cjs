'use client';
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("tslib"),t=require("../../util-elements/Tooltip/Tooltip.cjs"),o=require("../../../lib/constants.cjs"),r=require("../../../lib/shape.cjs"),i=require("../../../lib/sizing.cjs"),n=require("../../../lib/spacing.cjs"),s=require("../../../lib/tremorTwMerge.cjs"),a=require("../../../lib/utils.cjs"),l=require("react"),c=require("react-transition-group"),d=require("../../../assets/LoadingSpinner.cjs"),g=require("./styles.cjs");function u(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var m=u(l);const f=a.makeClassName("Button"),p=({loading:e,iconSize:t,iconPosition:r,Icon:a,needMargin:l,transitionState:c})=>{const g=l?r===o.HorizontalPositions.Left?s.tremorTwMerge(n.spacing.twoXs.negativeMarginLeft,n.spacing.xs.marginRight):s.tremorTwMerge(n.spacing.twoXs.negativeMarginRight,n.spacing.xs.marginLeft):"",u=s.tremorTwMerge(i.sizing.none.width,i.sizing.none.height),p={default:u,entering:u,entered:t,exiting:t,exited:u};return e?m.default.createElement(d,{className:s.tremorTwMerge(f("icon"),"animate-spin shrink-0",g,p.default,p[c]),style:{transition:"width 150ms"}}):m.default.createElement(a,{className:s.tremorTwMerge(f("icon"),"shrink-0",t,g)})},h=m.default.forwardRef(((i,n)=>{const{icon:l,iconPosition:d=o.HorizontalPositions.Left,size:u=o.Sizes.SM,color:h,variant:w="primary",disabled:b,loading:M=!1,loadingText:T,children:x,tooltip:z,className:j}=i,P=e.__rest(i,["icon","iconPosition","size","color","variant","disabled","loading","loadingText","children","tooltip","className"]),S=l,q=M||b,v=void 0!==S||M,C=M&&T,B=!(!x&&!C),y=s.tremorTwMerge(g.iconSizes[u].height,g.iconSizes[u].width),E="light"!==w?s.tremorTwMerge("rounded-tremor-default","shadow-tremor-input","dark:shadow-dark-tremor-input",r.border.sm.all):"",N=g.getButtonColors(w,h),R=g.getButtonProportions(w)[u],{tooltipProps:k,getReferenceProps:L}=t.useTooltip(300);return m.default.createElement(c.Transition,{in:M,timeout:50},(e=>m.default.createElement("button",Object.assign({ref:a.mergeRefs([n,k.refs.setReference]),className:s.tremorTwMerge(f("root"),"flex-shrink-0 inline-flex justify-center items-center group font-medium outline-none",E,R.paddingX,R.paddingY,R.fontSize,N.textColor,N.bgColor,N.borderColor,N.hoverBorderColor,q?"opacity-50 cursor-not-allowed":s.tremorTwMerge(g.getButtonColors(w,h).hoverTextColor,g.getButtonColors(w,h).hoverBgColor,g.getButtonColors(w,h).hoverBorderColor),j),disabled:q},L,P),m.default.createElement(t.default,Object.assign({text:z},k)),v&&d!==o.HorizontalPositions.Right?m.default.createElement(p,{loading:M,iconSize:y,iconPosition:d,Icon:S,transitionState:e,needMargin:B}):null,C||x?m.default.createElement("span",{className:s.tremorTwMerge(f("text"),"text-sm whitespace-nowrap")},C?T:x):null,v&&d===o.HorizontalPositions.Right?m.default.createElement(p,{loading:M,iconSize:y,iconPosition:d,Icon:S,transitionState:e,needMargin:B}):null)))}));h.displayName="Button",exports.ButtonIconOrSpinner=p,exports.default=h;
