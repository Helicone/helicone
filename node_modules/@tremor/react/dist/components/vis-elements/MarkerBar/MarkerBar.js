'use client';
import{__rest as e}from"tslib";import{sizing as r}from"../../../lib/sizing.js";import{colorPalette as t}from"../../../lib/theme.js";import{tremorTwMerge as a}from"../../../lib/tremorTwMerge.js";import{getColorClassNames as o,makeClassName as l}from"../../../lib/utils.js";import s from"react";import i,{useTooltip as n}from"../../util-elements/Tooltip/Tooltip.js";const m=l("MarkerBar"),d=s.forwardRef(((l,d)=>{const{value:c,minValue:b,maxValue:g,markerTooltip:u,rangeTooltip:f,showAnimation:p=!1,color:k,className:h}=l,v=e(l,["value","minValue","maxValue","markerTooltip","rangeTooltip","showAnimation","color","className"]),{tooltipProps:j,getReferenceProps:w}=n(),{tooltipProps:x,getReferenceProps:E}=n();return s.createElement("div",Object.assign({ref:d,className:a(m("root"),"relative flex items-center w-full rounded-tremor-full","bg-tremor-background-subtle","dark:bg-dark-tremor-background-subtle",r.xs.height,h)},v),void 0!==b&&void 0!==g?s.createElement(s.Fragment,null,s.createElement(i,Object.assign({text:f},x)),s.createElement("div",Object.assign({ref:x.refs.setReference,className:a(m("rangeBar"),"absolute h-full rounded-tremor-full","bg-tremor-content-subtle","dark:bg-dark-tremor-content-subtle"),style:{left:`${b}%`,width:g-b+"%",transition:p?"all 1s":""}},E))):null,s.createElement(i,Object.assign({text:u},j)),s.createElement("div",Object.assign({ref:j.refs.setReference,className:a(m("markerWrapper"),"absolute right-1/2 -translate-x-1/2",r.lg.width),style:{left:`${c}%`,transition:p?"all 1s":""}},w),s.createElement("div",{className:a(m("marker"),"ring-2 mx-auto rounded-tremor-full","ring-tremor-brand-inverted","dark:ring-dark-tremor-brand-inverted",k?o(k,t.background).bgColor:"dark:bg-dark-tremor-brand bg-tremor-brand",r.md.height,r.twoXs.width)})))}));d.displayName="MarkerBar";export{d as default};
