'use client';
import{__rest as e}from"tslib";import{Disclosure as r}from"@headlessui/react";import"../../../contexts/BaseColorContext.js";import"../../../contexts/IndexContext.js";import o from"../../../contexts/RootStylesContext.js";import"../../../contexts/SelectedValueContext.js";import{border as t}from"../../../lib/shape.js";import{tremorTwMerge as a}from"../../../lib/tremorTwMerge.js";import{makeClassName as s}from"../../../lib/utils.js";import d,{createContext as m,useContext as n}from"react";const l=s("Accordion"),i=m({isOpen:!1}),c=d.forwardRef(((s,m)=>{var c;const{defaultOpen:p=!1,children:f,className:u}=s,b=e(s,["defaultOpen","children","className"]),x=null!==(c=n(o))&&void 0!==c?c:a(t.sm.all,"rounded-tremor-default");return d.createElement(r,Object.assign({as:"div",ref:m,className:a(l("root"),"overflow-hidden","bg-tremor-background border-tremor-border","dark:bg-dark-tremor-background dark:border-dark-tremor-border",x,u),defaultOpen:p},b),(({open:e})=>d.createElement(i.Provider,{value:{isOpen:e}},f)))}));c.displayName="Accordion";export{i as OpenContext,c as default};
