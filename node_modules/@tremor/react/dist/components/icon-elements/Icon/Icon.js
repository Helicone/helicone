'use client';
import{__rest as e}from"tslib";import{Sizes as o}from"../../../lib/constants.js";import{tremorTwMerge as t}from"../../../lib/tremorTwMerge.js";import{mergeRefs as r,makeClassName as i}from"../../../lib/utils.js";import s from"react";import l,{useTooltip as n}from"../../util-elements/Tooltip/Tooltip.js";import{getIconColors as a,shape as m,wrapperProportions as c,iconSizes as p}from"./styles.js";const d=i("Icon"),f={Simple:"simple",Light:"light",Shadow:"shadow",Solid:"solid",Outlined:"outlined"},g=s.forwardRef(((i,g)=>{const{icon:h,variant:b=f.Simple,tooltip:j,size:u=o.SM,color:w,className:x}=i,N=e(i,["icon","variant","tooltip","size","color","className"]),S=h,C=a(b,w),{tooltipProps:E,getReferenceProps:O}=n();return s.createElement("span",Object.assign({ref:r([g,E.refs.setReference]),className:t(d("root"),"inline-flex flex-shrink-0 items-center",C.bgColor,C.textColor,C.borderColor,C.ringColor,m[b].rounded,m[b].border,m[b].shadow,m[b].ring,c[u].paddingX,c[u].paddingY,x)},O,N),s.createElement(l,Object.assign({text:j},E)),s.createElement(S,{className:t(d("icon"),"shrink-0",p[u].height,p[u].width)}))}));g.displayName="Icon";export{f as IconVariants,g as default};
