name: HQL Tests

on:
  push:
    branches:
      - main
      - devin/eng-3012-ci
  pull_request:
    branches:
      - main
    paths:
      # HQL implementation files
      - "valhalla/jawn/src/lib/db/ClickhouseWrapper.ts"
      - "valhalla/jawn/src/lib/stores/HqlStore.ts"
      - "valhalla/jawn/src/lib/errors/HqlErrors.ts"
      - "valhalla/jawn/src/managers/HqlQueryManager.ts"
      - "valhalla/jawn/src/managers/HeliconeSqlManager.ts"
      - "valhalla/jawn/src/controllers/public/heliconeSqlController.ts"
      # HQL test files
      - "valhalla/jawn/src/lib/db/test/**"
      - "valhalla/jawn/src/controllers/public/__tests__/heliconeSqlController.test.ts"
      # Web HQL files
      - "web/lib/api/hql/**"
      # Workflow file itself
      - ".github/workflows/hql-test.yml"

jobs:
  hql-security-tests:
    name: HQL Security Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: valhalla/jawn
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"
          cache-dependency-path: "**/yarn.lock"

      - name: Install dependencies
        run: |
          # Retry logic for yarn install with fallback to npm
          for i in 1 2 3; do
            echo "Attempt $i: Installing dependencies..."
            if yarn install --frozen-lockfile --network-timeout 100000; then
              echo "✓ Successfully installed dependencies"
              exit 0
            fi
            echo "Attempt $i failed, waiting 5 seconds..."
            sleep 5
          done
          # Fallback to npm if yarn fails
          echo "Yarn failed, using npm install..."
          npm install

      - name: Run HQL Security Tests
        run: yarn test:jawn hqlSecurityTests.test.ts
        env:
          NODE_ENV: test

  hql-api-tests:
    name: HQL API Integration Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: valhalla/jawn
    services:
      clickhouse:
        image: clickhouse/clickhouse-server:latest
        ports:
          - 8123:8123
          - 9000:9000
        options: >-
          --health-cmd "wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"
          cache-dependency-path: "**/yarn.lock"

      - name: Install dependencies
        run: |
          # Retry logic for yarn install with fallback to npm
          for i in 1 2 3; do
            echo "Attempt $i: Installing dependencies..."
            if yarn install --frozen-lockfile --network-timeout 100000; then
              echo "✓ Successfully installed dependencies"
              exit 0
            fi
            echo "Attempt $i failed, waiting 5 seconds..."
            sleep 5
          done
          # Fallback to npm if yarn fails
          echo "Yarn failed, using npm install..."
          npm install

      - name: Wait for ClickHouse
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:8123/ping > /dev/null; then
              echo "ClickHouse is ready"
              break
            fi
            echo "Waiting for ClickHouse... ($i/30)"
            sleep 2
          done

      - name: Setup ClickHouse Test Database
        run: |
          # Create test database
          curl -s "http://localhost:8123/?query=CREATE+DATABASE+IF+NOT+EXISTS+test" || true
          
          # Create test user with limited permissions
          curl -s "http://localhost:8123/?query=CREATE+USER+IF+NOT+EXISTS+hql_user+IDENTIFIED+BY+'test_password'" || true
          
          # Grant minimal permissions needed for testing
          curl -s "http://localhost:8123/?query=GRANT+SELECT+ON+test.*+TO+hql_user" || true

      - name: Run HQL API Integration Tests
        run: yarn test:jawn heliconeSqlController.test.ts
        env:
          NODE_ENV: test
          CLICKHOUSE_HOST: localhost
          CLICKHOUSE_PORT: 8123
          CLICKHOUSE_USER: default
          CLICKHOUSE_PASSWORD: ""
          CLICKHOUSE_DATABASE: test
          TEST_API_PORT: 8585

  hql-clickhouse-wrapper-tests:
    name: HQL ClickHouse Wrapper Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: valhalla/jawn
    services:
      clickhouse:
        image: clickhouse/clickhouse-server:latest
        ports:
          - 8123:8123
          - 9000:9000
        options: >-
          --health-cmd "wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"
          cache-dependency-path: "**/yarn.lock"

      - name: Install dependencies
        run: |
          # Retry logic for yarn install with fallback to npm
          for i in 1 2 3; do
            echo "Attempt $i: Installing dependencies..."
            if yarn install --frozen-lockfile --network-timeout 100000; then
              echo "✓ Successfully installed dependencies"
              exit 0
            fi
            echo "Attempt $i failed, waiting 5 seconds..."
            sleep 5
          done
          # Fallback to npm if yarn fails
          echo "Yarn failed, using npm install..."
          npm install

      - name: Wait for ClickHouse
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:8123/ping > /dev/null; then
              echo "ClickHouse is ready"
              break
            fi
            echo "Waiting for ClickHouse... ($i/30)"
            sleep 2
          done

      - name: Run ClickHouse Wrapper Tests
        run: yarn test:jawn TestClickhouseWrapper.test.ts
        env:
          NODE_ENV: test
          CLICKHOUSE_HOST: localhost
          CLICKHOUSE_PORT: 8123
          CLICKHOUSE_USER: default
          CLICKHOUSE_PASSWORD: ""
          CLICKHOUSE_DATABASE: default

  hql-test-summary:
    name: HQL Test Summary
    runs-on: ubuntu-latest
    needs: [hql-security-tests, hql-api-tests, hql-clickhouse-wrapper-tests]
    if: always()
    steps:
      - name: Check test results
        run: |
          if [[ "${{ needs.hql-security-tests.result }}" == "failure" ]]; then
            echo "❌ HQL Security Tests failed"
            exit 1
          elif [[ "${{ needs.hql-api-tests.result }}" == "failure" ]]; then
            echo "❌ HQL API Integration Tests failed"
            exit 1
          elif [[ "${{ needs.hql-clickhouse-wrapper-tests.result }}" == "failure" ]]; then
            echo "❌ HQL ClickHouse Wrapper Tests failed"
            exit 1
          else
            echo "✅ All HQL tests passed successfully"
          fi