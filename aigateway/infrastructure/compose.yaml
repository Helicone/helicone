name: helicone-proxy-cluster

networks:
  traces:
    name: traces
    driver: bridge

services:
  # collects traces, metrics, logs
  # then exports to tempo, prometheus, loki
  otelcol:
    image: otel/opentelemetry-collector:0.127.0
    restart: unless-stopped
    command:
      - --config=/etc/config.yaml
    volumes:
      - ./opentelemetry-collector/config-local.yaml:/etc/config.yaml:ro
    ports:
      - 4317:4317
    networks:
      - traces

  prometheus:
    image: prom/prometheus:v3.4.1
    restart: unless-stopped
    command:
      - --config.file=/etc/config.yaml
      - --web.enable-remote-write-receiver
      - --web.enable-otlp-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./prometheus/config-local.yaml:/etc/config.yaml:ro
    ports:
      - 9090:9090
    networks:
      - traces
    extra_hosts:
      - host.docker.internal:host-gateway

  tempo:
    image: grafana/tempo:2.7.2
    restart: unless-stopped
    command:
      - -config.file=/etc/tempo.yaml
    volumes:
      - ./tempo/config-local.yaml:/etc/tempo.yaml:ro
    networks:
      - traces

  loki:
    image: grafana/loki:3.5.0
    restart: unless-stopped
    command:
      - -config.file=/etc/loki.yaml
    volumes:
      - ./loki/config-local.yaml:/etc/loki.yaml:ro
    networks:
      - traces
    ports:
      - 3100:3100

  grafana:
    image: grafana/grafana:12.0.1
    restart: unless-stopped
    volumes:
      - ./grafana/datasources-local.yaml:/etc/grafana/provisioning/datasources/datasources.yaml:ro
      - ./grafana/config-local.yaml:/etc/grafana/grafana.ini:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - 3010:3010
    networks:
      - traces

  redis:
    image: redis:8.0.2-alpine
    restart: unless-stopped
    ports:
      - '6379:6379'
    environment:
      - REDIS_PASSWORD=helicone-redis-pw
      - REDIS_PORT=6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  helix:
    build:
      context: ../
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - '5678:5678'
    profiles: ["include-helix"]
    depends_on:
      redis:
        condition: service_healthy
    env_file: "../.env"
    environment:
      # Configure server to bind to all interfaces (0.0.0.0) instead of localhost (127.0.0.1)
      - PROXY__SERVER__ADDRESS=0.0.0.0
    networks:
      - traces
      - default
    extra_hosts:
      - host.docker.internal:host-gateway